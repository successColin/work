!(function(t, e) { typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = e(require('hls.js'), require('dashjs'), require('flv.js')) : typeof define === 'function' && define.amd ? define(['hls.js', 'dashjs', 'flv.js'], e) : t.TCPlayer = e(t.Hls, t.dashjs, t.flvjs); }(this, (t, e, n) => {
 function r(t, e) { return e = { exports: {} }, t(e, e.exports), e.exports; } function o(t, e) { ri(t).forEach((n) => e(t[n], n)); } function s(t, e) { const n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0; return ri(t).reduce((n, i) => e(n, t[i], i), n); } function a(t) { for (var e = arguments.length, n = Array(e > 1 ? e - 1 : 0), i = 1; i < e; i++)n[i - 1] = arguments[i]; return Object.assign ? Object.assign.apply(Object, [t].concat(n)) : (n.forEach((e) => { e && o(e, (e, n) => { t[n] = e; }); }), t); } function l(t) { return !!t && (void 0 === t ? 'undefined' : Jn(t)) === 'object'; } function c(t) { return l(t) && ii.call(t) === '[object Object]' && t.constructor === Object; } function u(t) { return typeof t === 'function' && typeof t.nodeType !== 'number'; } function h(t) { return t.replace(/\n\r?\s*/g, ''); } function p(t, e) { if (!t || !e) return ''; if (typeof tn.getComputedStyle === 'function') { const n = tn.getComputedStyle(t); return n ? n[e] : ''; } return t.currentStyle[e] || ''; } function d(t) { return typeof t === 'string' && /\S/.test(t); } function f(t) { if (/\s/.test(t)) throw new Error('class has illegal whitespace characters'); } function y(t) { return new RegExp(`(^|\\s)${t}($|\\s)`); } function g() { return sn === tn.document && typeof sn.createElement !== 'undefined'; } function v(t) { return l(t) && t.nodeType === 1; } function m() { try { return tn.parent !== tn.self; } catch (t) { return !0; } } function _(t) { return function(e, n) { if (!d(e)) return sn[t](null); d(n) && (n = sn.querySelector(n)); const i = v(n) ? n : sn; return i[t] && i[t](e); }; } function b() {
 const t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'div'; const e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; const n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {}; const i = arguments[3]; const
r = sn.createElement(t); return Object.getOwnPropertyNames(e).forEach((t) => { const n = e[t]; t.indexOf('aria-') !== -1 || t === 'role' || t === 'type' ? (ci.warn(ui(hi, t, n)), r.setAttribute(t, n)) : t === 'textContent' ? T(r, n) : r[t] = n; }), Object.getOwnPropertyNames(n).forEach((t) => { r.setAttribute(t, n[t]); }), i && V(r, i), r;
} function T(t, e) { return typeof t.textContent === 'undefined' ? t.innerText = e : t.textContent = e, t; } function C(t, e) { e.firstChild ? e.insertBefore(t, e.firstChild) : e.appendChild(t); } function E(t, e) { return f(e), t.classList ? t.classList.contains(e) : y(e).test(t.className); } function w(t, e) { return t.classList ? t.classList.add(e) : E(t, e) || (t.className = (`${t.className} ${e}`).trim()), t; } function S(t, e) { return t.classList ? t.classList.remove(e) : (f(e), t.className = t.className.split(/\s+/).filter((t) => t !== e).join(' ')), t; } function k(t, e, n) { const i = E(t, e); if (typeof n === 'function' && (n = n(t, e)), typeof n !== 'boolean' && (n = !i), n !== i) return n ? w(t, e) : S(t, e), t; } function I(t, e) { Object.getOwnPropertyNames(e).forEach((n) => { const i = e[n]; i === null || void 0 === i || !1 === i ? t.removeAttribute(n) : t.setAttribute(n, !0 === i ? '' : i); }); } function P(t) { const e = {}; if (t && t.attributes && t.attributes.length > 0) for (let n = t.attributes, i = n.length - 1; i >= 0; i--) { const r = n[i].name; let o = n[i].value; typeof t[r] !== 'boolean' && ',autoplay,controls,playsinline,loop,muted,default,defaultMuted,'.indexOf(`,${r},`) === -1 || (o = o !== null), e[r] = o; } return e; } function x(t, e) { return t.getAttribute(e); } function D(t, e, n) { t.setAttribute(e, n); } function M(t, e) { t.removeAttribute(e); } function R() { sn.body.focus(), sn.onselectstart = function() { return !1; }; } function A() { sn.onselectstart = function() { return !0; }; } function O(t) { if (t && t.getBoundingClientRect && t.parentNode) { const e = t.getBoundingClientRect(); const n = {}; return ['bottom', 'height', 'left', 'right', 'top', 'width'].forEach((t) => { e[t] !== undefined && (n[t] = e[t]); }), n.height || (n.height = parseFloat(p(t, 'height'))), n.width || (n.width = parseFloat(p(t, 'width'))), n; } } function j(t) { let e = void 0; if (t.getBoundingClientRect && t.parentNode && (e = t.getBoundingClientRect()), !e) return { left: 0, top: 0 }; const n = sn.documentElement; const i = sn.body; const r = n.clientLeft || i.clientLeft || 0; const o = tn.pageXOffset || i.scrollLeft; const s = e.left + o - r; const a = n.clientTop || i.clientTop || 0; const l = tn.pageYOffset || i.scrollTop; const c = e.top + l - a; return { left: Math.round(s), top: Math.round(c) }; } function L(t, e) { const n = {}; const i = j(t); const r = t.offsetWidth; const o = t.offsetHeight; const s = i.top; const a = i.left; let l = e.pageY; let c = e.pageX; return e.changedTouches && (c = e.changedTouches[0].pageX, l = e.changedTouches[0].pageY), n.y = Math.max(0, Math.min(1, (s - l + o) / o)), n.x = Math.max(0, Math.min(1, (c - a) / r)), n; } function N(t) { return l(t) && t.nodeType === 3; } function B(t) { for (;t.firstChild;)t.removeChild(t.firstChild); return t; } function F(t) { return typeof t === 'function' && (t = t()), (Array.isArray(t) ? t : [t]).map((t) => (typeof t === 'function' && (t = t()), v(t) || N(t) ? t : typeof t === 'string' && /\S/.test(t) ? sn.createTextNode(t) : void 0)).filter((t) => t); } function V(t, e) { return F(e).forEach((e) => t.appendChild(e)), t; } function H(t, e) { return V(B(t), e); } function U(t) { return t.button === undefined && t.buttons === undefined || (t.button === 0 && t.buttons === undefined || (Dn === 9 || t.button === 0 && t.buttons === 1)); } function q() { return yi++; } function z(t) { let e = t[vi]; return e || (e = t[vi] = q()), gi[e] || (gi[e] = {}), gi[e]; } function W(t) { const e = t[vi]; return !!e && !!Object.getOwnPropertyNames(gi[e]).length; } function K(t) { const e = t[vi]; if (e) { delete gi[e]; try { delete t[vi]; } catch (n) { t.removeAttribute ? t.removeAttribute(vi) : t[vi] = null; } } } function Q(t, e) { const n = z(t); n.handlers[e].length === 0 && (delete n.handlers[e], t.removeEventListener ? t.removeEventListener(e, n.dispatcher, !1) : t.detachEvent && t.detachEvent(`on${e}`, n.dispatcher)), Object.getOwnPropertyNames(n.handlers).length <= 0 && (delete n.handlers, delete n.dispatcher, delete n.disabled), Object.getOwnPropertyNames(n).length === 0 && K(t); } function X(t, e, n, i) { n.forEach((n) => { t(e, n, i); }); } function $(t) { function e() { return !0; } function n() { return !1; } if (!t || !t.isPropagationStopped) { const i = t || tn.event; t = {}; for (const r in i)r !== 'layerX' && r !== 'layerY' && r !== 'keyLocation' && r !== 'webkitMovementX' && r !== 'webkitMovementY' && (r === 'returnValue' && i.preventDefault || (t[r] = i[r])); if (t.target || (t.target = t.srcElement || sn), t.relatedTarget || (t.relatedTarget = t.fromElement === t.target ? t.toElement : t.fromElement), t.preventDefault = function() { i.preventDefault && i.preventDefault(), t.returnValue = !1, i.returnValue = !1, t.defaultPrevented = !0; }, t.defaultPrevented = !1, t.stopPropagation = function() { i.stopPropagation && i.stopPropagation(), t.cancelBubble = !0, i.cancelBubble = !0, t.isPropagationStopped = e; }, t.isPropagationStopped = n, t.stopImmediatePropagation = function() { i.stopImmediatePropagation && i.stopImmediatePropagation(), t.isImmediatePropagationStopped = e, t.stopPropagation(); }, t.isImmediatePropagationStopped = n, t.clientX !== null && t.clientX !== undefined) { const o = sn.documentElement; const s = sn.body; t.pageX = t.clientX + (o && o.scrollLeft || s && s.scrollLeft || 0) - (o && o.clientLeft || s && s.clientLeft || 0), t.pageY = t.clientY + (o && o.scrollTop || s && s.scrollTop || 0) - (o && o.clientTop || s && s.clientTop || 0); }t.which = t.charCode || t.keyCode, t.button !== null && t.button !== undefined && (t.button = 1 & t.button ? 0 : 4 & t.button ? 1 : 2 & t.button ? 2 : 0); } return t; } function G(t, e, n) { if (Array.isArray(e)) return X(G, t, e, n); const i = z(t); if (i.handlers || (i.handlers = {}), i.handlers[e] || (i.handlers[e] = []), n.guid || (n.guid = q()), i.handlers[e].push(n), i.dispatcher || (i.disabled = !1, i.dispatcher = function(e, n) { if (!i.disabled) { e = $(e); const r = i.handlers[e.type]; if (r) for (let o = r.slice(0), s = 0, a = o.length; s < a && !e.isImmediatePropagationStopped(); s++) try { o[s].call(t, e, n); } catch (l) { ci.error(l); } } }), i.handlers[e].length === 1) if (t.addEventListener) { let r = !1; mi && _i.indexOf(e) > -1 && (r = { passive: !0 }), t.addEventListener(e, i.dispatcher, r); } else t.attachEvent && t.attachEvent(`on${e}`, i.dispatcher); } function Y(t, e, n) { if (W(t)) { const i = z(t); if (i.handlers) { if (Array.isArray(e)) return X(Y, t, e, n); const r = function(t, e) { i.handlers[e] = [], Q(t, e); }; if (e !== undefined) { const o = i.handlers[e]; if (o) { if (!n) return void r(t, e); if (n.guid) for (let s = 0; s < o.length; s++)o[s].guid === n.guid && o.splice(s--, 1); Q(t, e); } } else for (const a in i.handlers)Object.prototype.hasOwnProperty.call(i.handlers || {}, a) && r(t, a); } } } function J(t, e, n) { const i = W(t) ? z(t) : {}; const r = t.parentNode || t.ownerDocument; if (typeof e === 'string' && (e = { type: e, target: t }), e = $(e), i.dispatcher && i.dispatcher.call(t, e, n), r && !e.isPropagationStopped() && !0 === e.bubbles)J.call(null, r, e, n); else if (!r && !e.defaultPrevented) { const o = z(e.target); e.target[e.type] && (o.disabled = !0, typeof e.target[e.type] === 'function' && e.target[e.type](), o.disabled = !1); } return !e.defaultPrevented; } function Z(t, e, n) { if (Array.isArray(e)) return X(Z, t, e, n); const i = function r() { Y(t, e, r), n.apply(this, arguments); }; i.guid = n.guid = n.guid || q(), G(t, e, i); } function tt(t, e) { e && (Ci = e), tn.setTimeout(Ei, t); } function et(t) { const e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; const n = e.eventBusKey; if (n) { if (!t[n].nodeName) throw new Error(`The eventBusKey "${n}" does not refer to an element.`); t.eventBusEl_ = t[n]; } else t.eventBusEl_ = b('span', { className: 'vjs-event-bus' }); return a(t, Li), t.on('dispose', () => { t.off(), tn.setTimeout(() => { t.eventBusEl_ = null; }, 0); }), t; } function nt(t, e) { return a(t, Ni), t.state = a({}, t.state, e), typeof t.handleStateChanged === 'function' && xi(t) && t.on('statechanged', t.handleStateChanged), t; } function it(t) { return typeof t !== 'string' ? t : t.charAt(0).toUpperCase() + t.slice(1); } function rt(t, e) { return it(t) === it(e); } function ot() { for (var t = {}, e = arguments.length, n = Array(e), i = 0; i < e; i++)n[i] = arguments[i]; return n.forEach((e) => { e && o(e, (e, n) => { if (!c(e)) return void (t[n] = e); c(t[n]) || (t[n] = {}), t[n] = ot(t[n], e); }); }), t; } function st() { let t; let e; let n; let i; let r; let o; let s = arguments[0] || {}; let a = 1; const l = arguments.length; let h = !1; for (typeof s === 'boolean' && (h = s, s = arguments[a] || {}, a++), (void 0 === s ? 'undefined' : Jn(s)) === 'object' || u(s) || (s = {}), a === l && (s = this, a--); a < l; a++) if ((t = arguments[a]) != null) for (e in t)n = s[e], i = t[e], s !== i && (h && i && (c(i) || (r = Array.isArray(i))) ? (r ? (r = !1, o = n && Array.isArray(n) ? n : []) : o = n && c(n) ? n : {}, s[e] = st(h, o, i)) : i !== undefined && (s[e] = i)); return s; } function at(t, e, n) { if (typeof e !== 'number' || e < 0 || e > n) throw new Error(`Failed to execute '${t}' on 'TimeRanges': The index provided (${e}) is non-numeric or out of bounds (0-${n}).`); } function lt(t, e, n, i) { return at(t, i, n.length - 1), n[i][e]; } function ct(t) { return t === undefined || t.length === 0 ? { length: 0, start() { throw new Error('This TimeRanges object is empty'); }, end() { throw new Error('This TimeRanges object is empty'); } } : { length: t.length, start: lt.bind(null, 'start', 0, t), end: lt.bind(null, 'end', 1, t) }; } function ut(t, e) { return Array.isArray(t) ? ct(t) : t === undefined || e === undefined ? ct() : ct([[t, e]]); } function ht(t, e) { let n = 0; let i = void 0; let r = void 0; if (!e) return 0; t && t.length || (t = ut(0, 0)); for (let o = 0; o < t.length; o++)i = t.start(o), r = t.end(o), r > e && (r = e), n += r - i; return n / e; } function pt(t) { if (t instanceof pt) return t; typeof t === 'number' ? this.code = t : typeof t === 'string' ? this.message = t : l(t) && (typeof t.code === 'number' && (this.code = t.code), a(this, t)), this.message || (this.message = pt.defaultMessages[this.code] || ''); } function dt(t, e) { let n; let i = null; try { n = JSON.parse(t, e); } catch (r) { i = r; } return [i, n]; } function ft(t) { return t !== undefined && typeof t.then === 'function'; } function yt(t) { ft(t) && t.then(null, (t) => {}); } function gt(t) { const e = br.call(t); return e === '[object Function]' || typeof t === 'function' && e !== '[object RegExp]' || typeof window !== 'undefined' && (t === window.setTimeout || t === window.alert || t === window.confirm || t === window.prompt); } function vt(t, e, n) { if (!_r(e)) throw new TypeError('iterator must be a function'); arguments.length < 3 && (n = this), Er.call(t) === '[object Array]' ? mt(t, e, n) : typeof t === 'string' ? _t(t, e, n) : bt(t, e, n); } function mt(t, e, n) { for (let i = 0, r = t.length; i < r; i++)wr.call(t, i) && e.call(n, t[i], i, t); } function _t(t, e, n) { for (let i = 0, r = t.length; i < r; i++)e.call(n, t.charAt(i), i, t); } function bt(t, e, n) { for (const i in t)wr.call(t, i) && e.call(n, t[i], i, t); } function Tt() { for (var t = {}, e = 0; e < arguments.length; e++) { const n = arguments[e]; for (const i in n)Pr.call(n, i) && (t[i] = n[i]); } return t; } function Ct(t) { for (const e in t) if (t.hasOwnProperty(e)) return !1; return !0; } function Et(t, e, n) { let i = t; return _r(e) ? (n = e, typeof t === 'string' && (i = { uri: t })) : i = Ir(e, { uri: t }), i.callback = n, i; } function wt(t, e, n) { return e = Et(t, e, n), St(e); } function St(t) { function e() { a.readyState === 4 && setTimeout(r, 0); } function n() { let t; if (t = a.response ? a.response : a.responseText || kt(a), g) try { t = JSON.parse(t); } catch (e) {} return t; } function i(t) { return clearTimeout(u), t instanceof Error || (t = new Error(`${t || 'Unknown XMLHttpRequest Error'}`)), t.statusCode = 0, s(t, v); } function r() { if (!c) { let e; clearTimeout(u), e = t.useXDR && a.status === undefined ? 200 : a.status === 1223 ? 204 : a.status; let i = v; let r = null; return e !== 0 ? (i = { body: n(), statusCode: e, method: p, headers: {}, url: h, rawRequest: a }, a.getAllResponseHeaders && (i.headers = kr(a.getAllResponseHeaders()))) : r = new Error('Internal XMLHttpRequest Error'), s(r, i, i.body); } } if (typeof t.callback === 'undefined') throw new Error('callback argument missing'); let o = !1; var s = function(e, n, i) { o || (o = !0, t.callback(e, n, i)); }; var a = t.xhr || null; a || (a = t.cors || t.useXDR ? new wt.XDomainRequest() : new wt.XMLHttpRequest()); let l; let c; let u; var h = a.url = t.uri || t.url; var p = a.method = t.method || 'GET'; let d = t.body || t.data; const f = a.headers = t.headers || {}; const y = !!t.sync; var g = !1; var v = { body: undefined, headers: {}, statusCode: 0, method: p, url: h, rawRequest: a }; if ('json' in t && !1 !== t.json && (g = !0, f.accept || f.Accept || (f.Accept = 'application/json'), p !== 'GET' && p !== 'HEAD' && (f['content-type'] || f['Content-Type'] || (f['Content-Type'] = 'application/json'), d = JSON.stringify(!0 === t.json ? d : t.json))), a.onreadystatechange = e, a.onload = r, a.onerror = i, a.onprogress = function() {}, a.onabort = function() { c = !0; }, a.ontimeout = i, a.open(p, h, !y, t.username, t.password), y || (a.withCredentials = !!t.withCredentials), !y && t.timeout > 0 && (u = setTimeout(() => { if (!c) { c = !0, a.abort('timeout'); const t = new Error('XMLHttpRequest timeout'); t.code = 'ETIMEDOUT', i(t); } }, t.timeout)), a.setRequestHeader) for (l in f)f.hasOwnProperty(l) && a.setRequestHeader(l, f[l]); else if (t.headers && !Ct(t.headers)) throw new Error('Headers cannot be set on an XDomainRequest object'); return 'responseType' in t && (a.responseType = t.responseType), 'beforeSend' in t && typeof t.beforeSend === 'function' && t.beforeSend(a), a.send(d || null), a; } function kt(t) { if (t.responseType === 'document') return t.responseXML; const e = t.responseXML && t.responseXML.documentElement.nodeName === 'parsererror'; return t.responseType !== '' || e ? null : t.responseXML; } function It() {} function Pt(t, e) { this.name = 'ParsingError', this.code = t.code, this.message = e || t.message; } function xt(t) { function e(t, e, n, i) { return 3600 * (0 | t) + 60 * (0 | e) + (0 | n) + (0 | i) / 1e3; } const n = t.match(/^(\d+):(\d{2})(:\d{2})?\.(\d{3})/); return n ? n[3] ? e(n[1], n[2], n[3].replace(':', ''), n[4]) : n[1] > 59 ? e(n[1], n[2], 0, n[4]) : e(0, n[1], n[2], n[4]) : null; } function Dt() { this.values = Hr(null); } function Mt(t, e, n, i) { const r = i ? t.split(i) : [t]; for (const o in r) if (typeof r[o] === 'string') { const s = r[o].split(n); if (s.length === 2) { const a = s[0]; const l = s[1]; e(a, l); } } } function Rt(t, e, n) { function i() { const e = xt(t); if (e === null) throw new Pt(Pt.Errors.BadTimeStamp, `Malformed timestamp: ${o}`); return t = t.replace(/^[^\sa-zA-Z-]+/, ''), e; } function r() { t = t.replace(/^\s+/, ''); } var o = t; if (r(), e.startTime = i(), r(), t.substr(0, 3) !== '--\x3e') throw new Pt(Pt.Errors.BadTimeStamp, `Malformed time stamp (time stamps must be separated by '--\x3e'): ${o}`); t = t.substr(3), r(), e.endTime = i(), r(), (function(t, e) { const i = new Dt(); Mt(t, (t, e) => { switch (t) { case 'region': for (let r = n.length - 1; r >= 0; r--) if (n[r].id === e) { i.set(t, n[r].region); break; } break; case 'vertical': i.alt(t, e, ['rl', 'lr']); break; case 'line': var o = e.split(','); var s = o[0]; i.integer(t, s), i.percent(t, s) && i.set('snapToLines', !1), i.alt(t, s, ['auto']), o.length === 2 && i.alt('lineAlign', o[1], ['start', 'middle', 'end']); break; case 'position': o = e.split(','), i.percent(t, o[0]), o.length === 2 && i.alt('positionAlign', o[1], ['start', 'middle', 'end']); break; case 'size': i.percent(t, e); break; case 'align': i.alt(t, e, ['start', 'middle', 'end', 'left', 'right']); } }, /:/, /\s/), e.region = i.get('region', null), e.vertical = i.get('vertical', ''), e.line = i.get('line', 'auto'), e.lineAlign = i.get('lineAlign', 'start'), e.snapToLines = i.get('snapToLines', !0), e.size = i.get('size', 100), e.align = i.get('align', 'middle'), e.position = i.get('position', { start: 0, left: 0, middle: 50, end: 100, right: 100 }, e.align), e.positionAlign = i.get('positionAlign', { start: 'start', left: 'start', middle: 'middle', end: 'end', right: 'end' }, e.align); }(t, e)); } function At(t, e) { function n(t) { return Ur[t]; } for (var i, r = t.document.createElement('div'), o = r, s = []; (i = (function() { if (!e) return null; const t = e.match(/^([^<]*)(<[^>]+>?)?/); return (function(t) { return e = e.substr(t.length), t; }(t[1] ? t[1] : t[2])); }())) !== null;) if (i[0] !== '<')o.appendChild(t.document.createTextNode(function(t) { for (;c = t.match(/&(amp|lt|gt|lrm|rlm|nbsp);/);)t = t.replace(c[0], n); return t; }(i))); else { if (i[1] === '/') { s.length && s[s.length - 1] === i.substr(2).replace('>', '') && (s.pop(), o = o.parentNode); continue; } var a; const l = xt(i.substr(1, i.length - 2)); if (l) { a = t.document.createProcessingInstruction('timestamp', l), o.appendChild(a); continue; } var c = i.match(/^<([^.\s\/0-9>]+)(\.[^\s\\>]+)?([^>\\]+)?(\\?)>?$/); if (!c) continue; if (!(a = (function(e, n) { const i = qr[e]; if (!i) return null; const r = t.document.createElement(i); r.localName = i; const o = zr[e]; return o && n && (r[o] = n.trim()), r; }(c[1], c[3])))) continue; if (!(function(t, e) { return !Wr[e.localName] || Wr[e.localName] === t.localName; }(o, a))) continue; c[2] && (a.className = c[2].substr(1).replace('.', ' ')), s.push(c[1]), o.appendChild(a), o = a; } return r; } function Ot(t) { for (let e = 0; e < Kr.length; e++) { const n = Kr[e]; if (t >= n[0] && t <= n[1]) return !0; } return !1; } function jt(t) { function e(t, e) { for (let n = e.childNodes.length - 1; n >= 0; n--)t.push(e.childNodes[n]); } function n(t) { if (!t || !t.length) return null; const i = t.pop(); const r = i.textContent || i.innerText; if (r) { const o = r.match(/^.*(\n|\r)/); return o ? (t.length = 0, o[0]) : r; } return i.tagName === 'ruby' ? n(t) : i.childNodes ? (e(t, i), n(t)) : void 0; } let i; const r = []; let o = ''; if (!t || !t.childNodes) return 'ltr'; for (e(r, t); o = n(r);) for (let s = 0; s < o.length; s++) if (i = o.charCodeAt(s), Ot(i)) return 'rtl'; return 'ltr'; } function Lt(t) { if (typeof t.line === 'number' && (t.snapToLines || t.line >= 0 && t.line <= 100)) return t.line; if (!t.track || !t.track.textTrackList || !t.track.textTrackList.mediaElement) return -1; for (var e = t.track, n = e.textTrackList, i = 0, r = 0; r < n.length && n[r] !== e; r++)n[r].mode === 'showing' && i++; return -1 * ++i; } function Nt() {} function Bt(t, e, n) { const i = /MSIE\s8\.0/.test(navigator.userAgent); let r = 'rgba(255, 255, 255, 1)'; let o = 'rgba(0, 0, 0, 0.8)'; i && (r = 'rgb(255, 255, 255)', o = 'rgb(0, 0, 0)'), Nt.call(this), this.cue = e, this.cueDiv = At(t, e.text); let s = { color: r, backgroundColor: o, position: 'relative', left: 0, right: 0, top: 0, bottom: 0, display: 'inline' }; i || (s.writingMode = e.vertical === '' ? 'horizontal-tb' : e.vertical === 'lr' ? 'vertical-lr' : 'vertical-rl', s.unicodeBidi = 'plaintext'), this.applyStyles(s, this.cueDiv), this.div = t.document.createElement('div'), s = { textAlign: e.align === 'middle' ? 'center' : e.align, font: n.font, whiteSpace: 'pre-line', position: 'absolute' }, i || (s.direction = jt(this.cueDiv), s.writingMode = e.vertical === '' ? 'horizontal-tb' : e.vertical === 'lr' ? 'vertical-lr' : 'vertical-rl'.stylesunicodeBidi = 'plaintext'), this.applyStyles(s), this.div.appendChild(this.cueDiv); let a = 0; switch (e.positionAlign) { case 'start': a = e.position; break; case 'middle': a = e.position - e.size / 2; break; case 'end': a = e.position - e.size; }e.vertical === '' ? this.applyStyles({ left: this.formatStyle(a, '%'), width: this.formatStyle(e.size, '%') }) : this.applyStyles({ top: this.formatStyle(a, '%'), height: this.formatStyle(e.size, '%') }), this.move = function(t) { this.applyStyles({ top: this.formatStyle(t.top, 'px'), bottom: this.formatStyle(t.bottom, 'px'), left: this.formatStyle(t.left, 'px'), right: this.formatStyle(t.right, 'px'), height: this.formatStyle(t.height, 'px'), width: this.formatStyle(t.width, 'px') }); }; } function Ft(t) { let e; let n; let i; let r; const o = /MSIE\s8\.0/.test(navigator.userAgent); if (t.div) { n = t.div.offsetHeight, i = t.div.offsetWidth, r = t.div.offsetTop; var s = (s = t.div.childNodes) && (s = s[0]) && s.getClientRects && s.getClientRects(); t = t.div.getBoundingClientRect(), e = s ? Math.max(s[0] && s[0].height || 0, t.height / s.length) : 0; } this.left = t.left, this.right = t.right, this.top = t.top || r, this.height = t.height || n, this.bottom = t.bottom || r + (t.height || n), this.width = t.width || i, this.lineHeight = e !== undefined ? e : t.lineHeight, o && !this.lineHeight && (this.lineHeight = 13); } function Vt(t, e, n, i) { let r = new Ft(e); const o = e.cue; let s = Lt(o); let a = []; if (o.snapToLines) { let l; switch (o.vertical) { case '': a = ['+y', '-y'], l = 'height'; break; case 'rl': a = ['+x', '-x'], l = 'width'; break; case 'lr': a = ['-x', '+x'], l = 'width'; } const c = r.lineHeight; let u = c * Math.round(s); const h = n[l] + c; const p = a[0]; Math.abs(u) > h && (u = u < 0 ? -1 : 1, u *= Math.ceil(h / c) * c), s < 0 && (u += o.vertical === '' ? n.height : n.width, a = a.reverse()), r.move(p, u); } else { const d = r.lineHeight / n.height * 100; switch (o.lineAlign) { case 'middle': s -= d / 2; break; case 'end': s -= d; } switch (o.vertical) { case '': e.applyStyles({ top: e.formatStyle(s, '%') }); break; case 'rl': e.applyStyles({ left: e.formatStyle(s, '%') }); break; case 'lr': e.applyStyles({ right: e.formatStyle(s, '%') }); }a = ['+y', '-x', '+x', '-y'], r = new Ft(e); } const f = (function(t, e) { for (var r, o = new Ft(t), s = 1, a = 0; a < e.length; a++) { for (;t.overlapsOppositeAxis(n, e[a]) || t.within(n) && t.overlapsAny(i);)t.move(e[a]); if (t.within(n)) return t; const l = t.intersectPercentage(n); s > l && (r = new Ft(t), s = l), t = new Ft(o); } return r || o; }(r, a)); e.move(f.toCSSCompatValues(n)); } function Ht() {} function Ut(t) { return typeof t === 'string' && (!!$r[t.toLowerCase()] && t.toLowerCase()); } function qt(t) { return typeof t === 'string' && (!!Gr[t.toLowerCase()] && t.toLowerCase()); } function zt(t) { for (let e = 1; e < arguments.length; e++) { const n = arguments[e]; for (const i in n)t[i] = n[i]; } return t; } function Wt(t, e, n) { let i = this; const r = /MSIE\s8\.0/.test(navigator.userAgent); const o = {}; r ? i = document.createElement('custom') : o.enumerable = !0, i.hasBeenReset = !1; let s = ''; let a = !1; let l = t; let c = e; let u = n; let h = null; let p = ''; let d = !0; let f = 'auto'; let y = 'start'; let g = 50; let v = 'middle'; let m = 50; let _ = 'middle'; if (Object.defineProperty(i, 'id', zt({}, o, { get() { return s; }, set(t) { s = `${t}`; } })), Object.defineProperty(i, 'pauseOnExit', zt({}, o, { get() { return a; }, set(t) { a = !!t; } })), Object.defineProperty(i, 'startTime', zt({}, o, { get() { return l; }, set(t) { if (typeof t !== 'number') throw new TypeError('Start time must be set to a number.'); l = t, this.hasBeenReset = !0; } })), Object.defineProperty(i, 'endTime', zt({}, o, { get() { return c; }, set(t) { if (typeof t !== 'number') throw new TypeError('End time must be set to a number.'); c = t, this.hasBeenReset = !0; } })), Object.defineProperty(i, 'text', zt({}, o, { get() { return u; }, set(t) { u = `${t}`, this.hasBeenReset = !0; } })), Object.defineProperty(i, 'region', zt({}, o, { get() { return h; }, set(t) { h = t, this.hasBeenReset = !0; } })), Object.defineProperty(i, 'vertical', zt({}, o, { get() { return p; }, set(t) { const e = Ut(t); if (!1 === e) throw new SyntaxError('An invalid or illegal string was specified.'); p = e, this.hasBeenReset = !0; } })), Object.defineProperty(i, 'snapToLines', zt({}, o, { get() { return d; }, set(t) { d = !!t, this.hasBeenReset = !0; } })), Object.defineProperty(i, 'line', zt({}, o, { get() { return f; }, set(t) { if (typeof t !== 'number' && t !== Xr) throw new SyntaxError('An invalid number or illegal string was specified.'); f = t, this.hasBeenReset = !0; } })), Object.defineProperty(i, 'lineAlign', zt({}, o, { get() { return y; }, set(t) { const e = qt(t); if (!e) throw new SyntaxError('An invalid or illegal string was specified.'); y = e, this.hasBeenReset = !0; } })), Object.defineProperty(i, 'position', zt({}, o, { get() { return g; }, set(t) { if (t < 0 || t > 100) throw new Error('Position must be between 0 and 100.'); g = t, this.hasBeenReset = !0; } })), Object.defineProperty(i, 'positionAlign', zt({}, o, { get() { return v; }, set(t) { const e = qt(t); if (!e) throw new SyntaxError('An invalid or illegal string was specified.'); v = e, this.hasBeenReset = !0; } })), Object.defineProperty(i, 'size', zt({}, o, { get() { return m; }, set(t) { if (t < 0 || t > 100) throw new Error('Size must be between 0 and 100.'); m = t, this.hasBeenReset = !0; } })), Object.defineProperty(i, 'align', zt({}, o, { get() { return _; }, set(t) { const e = qt(t); if (!e) throw new SyntaxError('An invalid or illegal string was specified.'); _ = e, this.hasBeenReset = !0; } })), i.displayState = undefined, r) return i; } function Kt(t) { return typeof t === 'string' && (!!Jr[t.toLowerCase()] && t.toLowerCase()); } function Qt(t) { return typeof t === 'number' && t >= 0 && t <= 100; } function Xt() { let t = 100; let e = 3; let n = 0; let i = 100; let r = 0; let o = 100; let s = ''; Object.defineProperties(this, { width: { enumerable: !0, get() { return t; }, set(e) { if (!Qt(e)) throw new Error('Width must be between 0 and 100.'); t = e; } }, lines: { enumerable: !0, get() { return e; }, set(t) { if (typeof t !== 'number') throw new TypeError('Lines must be set to a number.'); e = t; } }, regionAnchorY: { enumerable: !0, get() { return i; }, set(t) { if (!Qt(t)) throw new Error('RegionAnchorX must be between 0 and 100.'); i = t; } }, regionAnchorX: { enumerable: !0, get() { return n; }, set(t) { if (!Qt(t)) throw new Error('RegionAnchorY must be between 0 and 100.'); n = t; } }, viewportAnchorY: { enumerable: !0, get() { return o; }, set(t) { if (!Qt(t)) throw new Error('ViewportAnchorY must be between 0 and 100.'); o = t; } }, viewportAnchorX: { enumerable: !0, get() { return r; }, set(t) { if (!Qt(t)) throw new Error('ViewportAnchorX must be between 0 and 100.'); r = t; } }, scroll: { enumerable: !0, get() { return s; }, set(t) { const e = Kt(t); if (!1 === e) throw new SyntaxError('An invalid or illegal string was specified.'); s = e; } } }); } function $t(t, e, n, i) { const r = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {}; const o = t.textTracks(); r.kind = e, n && (r.label = n), i && (r.language = i), r.tech = t; const s = new Vr.text.TrackClass(r); return o.addTrack(s), s; } function Gt(t, e) { no[t] = no[t] || [], no[t].push(e); } function Yt(t, e, n) { t.setTimeout(() => ne(e, no[e.type], n, t), 1); } function Jt(t, e) { t.forEach((t) => t.setTech && t.setTech(e)); } function Zt(t, e, n) { return t.reduceRight(ee(n), e[n]()); } function te(t, e, n, i) { return e[n](t.reduce(ee(n), i)); } function ee(t) { return function(e, n) { return n[t] ? n[t](e) : e; }; } function ne() { const t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {}; const e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : []; const n = arguments[2]; const i = arguments[3]; const r = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : []; const o = arguments.length > 5 && arguments[5] !== undefined && arguments[5]; const s = e[0]; const l = e.slice(1); if (typeof s === 'string')ne(t, no[s], n, i, r, o); else if (s) { const c = s(i); c.setSource(a({}, t), (e, s) => { if (e) return ne(t, l, n, i, r, o); r.push(c), ne(s, t.type === s.type ? l : no[s.type], n, i, r, o); }); } else l.length ? ne(t, l, n, i, r, o) : o ? n(t, r) : ne(t, no['*'], n, i, r, !0); } function ie(t, e) { return `rgba(${parseInt(t[1] + t[1], 16)},${parseInt(t[2] + t[2], 16)},${parseInt(t[3] + t[3], 16)},${e})`; } function re(t, e, n) { try { t.style[e] = n; } catch (i) { } } function oe(t) { const e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : t; t = t < 0 ? 0 : t; let n = Math.floor(t % 60); let i = Math.floor(t / 60 % 60); let r = Math.floor(t / 3600); const o = Math.floor(e / 60 % 60); const s = Math.floor(e / 3600); return (isNaN(t) || t === Infinity) && (r = i = n = '-'), r = r > 0 || s > 0 ? `${r}:` : '', i = `${(r || o >= 10) && i < 10 ? `0${i}` : i}:`, n = n < 10 ? `0${n}` : n, r + i + n; } function se(t, e) { if (e && (t = e(t)), t && t !== 'none') return t; } function ae(t, e) { return se(t.options[t.options.selectedIndex].value, e); } function le(t, e, n) { if (e) for (let i = 0; i < t.options.length; i++) if (se(t.options[i].value, n) === e) { t.selectedIndex = i; break; } } function ce(t, e, n) { let i = void 0; if (typeof t === 'string') { const r = ce.getPlayers(); if (t.indexOf('#') === 0 && (t = t.slice(1)), r[t]) return e && ci.warn(`Player "${t}" is already initialised. Options will not be applied.`), n && r[t].ready(n), r[t]; i = pi(`#${t}`); } else i = t; if (!i || !i.nodeName) throw new TypeError('The element or ID supplied is not valid. (videojs)'); if (i.player || Ps.players[i.playerId]) return i.player || Ps.players[i.playerId]; v(i) && !sn.body.contains(i) && ci.warn('The element supplied is not included in the DOM'), e = e || {}, ce.hooks('beforesetup').forEach((t) => { const n = t(i, ot(e)); if (!l(n) || Array.isArray(n)) return void ci.error('please return an object in beforesetup hooks'); e = ot(e, n); }); const o = Bi.getComponent('Player'); const s = new o(i, e, n); return ce.hooks('setup').forEach((t) => t(s)), s; } function ue(t) { if (t === null || t === undefined) throw new TypeError('Object.assign cannot be called with null or undefined'); return Object(t); } function he(t, e) { try { return decodeURIComponent(t.join('')); } catch (r) {} if (t.length === 1) return t; e = e || 1; const n = t.slice(0, e); const i = t.slice(e); return Array.prototype.concat.call([], he(n), he(i)); } function pe(t) { try { return decodeURIComponent(t); } catch (i) { for (let e = t.match($s), n = 1; n < e.length; n++)t = he(e, n).join(''), e = t.match($s); return t; } } function de(t) { for (var e = { '%FE%FF': '��', '%FF%FE': '��' }, n = Gs.exec(t); n;) { try { e[n[0]] = decodeURIComponent(n[0]); } catch (a) { const i = pe(n[0]); i !== n[0] && (e[n[0]] = i); }n = Gs.exec(t); }e['%C2'] = '�'; for (let r = Object.keys(e), o = 0; o < r.length; o++) { const s = r[o]; t = t.replace(new RegExp(s, 'g'), e[s]); } return t; } function fe(t) { switch (t.arrayFormat) { case 'index': return function(e, n, i) { return n === null ? [ge(e, t), '[', i, ']'].join('') : [ge(e, t), '[', ge(i, t), ']=', ge(n, t)].join(''); }; case 'bracket': return function(e, n) { return n === null ? ge(e, t) : [ge(e, t), '[]=', ge(n, t)].join(''); }; default: return function(e, n) { return n === null ? ge(e, t) : [ge(e, t), '=', ge(n, t)].join(''); }; } } function ye(t) { let e; switch (t.arrayFormat) { case 'index': return function(t, n, i) { if (e = /\[(\d*)\]$/.exec(t), t = t.replace(/\[\d*\]$/, ''), !e) return void (i[t] = n); i[t] === undefined && (i[t] = {}), i[t][e[1]] = n; }; case 'bracket': return function(t, n, i) { return e = /(\[\])$/.exec(t), t = t.replace(/\[\]$/, ''), e ? i[t] === undefined ? void (i[t] = [n]) : void (i[t] = [].concat(i[t], n)) : void (i[t] = n); }; default: return function(t, e, n) { if (n[t] === undefined) return void (n[t] = e); n[t] = [].concat(n[t], e); }; } } function ge(t, e) { return e.encode ? e.strict ? zs(t) : encodeURIComponent(t) : t; } function ve(t) { return Array.isArray(t) ? t.sort() : typeof t === 'object' ? ve(Object.keys(t)).sort((t, e) => Number(t) - Number(e)).map((e) => t[e]) : t; } function me(t) { const e = t.indexOf('?'); return e === -1 ? '' : t.slice(e + 1); } function _e(t, e) { e = { arrayFormat: 'none', ...e }; const n = ye(e); const i = Object.create(null); return typeof t !== 'string' ? i : (t = t.trim().replace(/^[?#&]/, '')) ? (t.split('&').forEach((t) => { const e = t.replace(/\+/g, ' ').split('='); const r = e.shift(); let o = e.length > 0 ? e.join('=') : undefined; o = o === undefined ? null : Ys(o), n(Ys(r), o, i); }), Object.keys(i).sort().reduce((t, e) => { const n = i[e]; return Boolean(n) && typeof n === 'object' && !Array.isArray(n) ? t[e] = ve(n) : t[e] = n, t; }, Object.create(null))) : i; } function be(t, e, n) { function i() { c.parentNode && c.parentNode.removeChild(c), window[a] = '', u && clearTimeout(u); } function r() { window[a] && i(); } typeof e === 'function' && (n = e, e = {}), e || (e = {}); let o; const s = e.prefix || '__jp'; var a = e.name || s + ia++; const l = e.funcKey || 'callback'; o = Jn(e.param) == 'object' ? na.stringify(e.param) : e.param; let c; let u; const h = e.timeout != null ? e.timeout : 6e3; const p = encodeURIComponent; const d = document.getElementsByTagName('script')[0] || document.head; return h && (u = setTimeout(() => { i(), n && n(new Error('Timeout')); }, h)), window[a] = function(t) { i(), n && n(null, t); }, t += `${(~t.indexOf('?') ? '&' : '?') + o}&${l}=${p(a)}`, t = t.replace('?&', '?'), c = document.createElement('script'), c.setAttribute('src', t), c.setAttribute('async', !0), c.onload = function(t) {}, c.onreadystatechange = function() { this.readyState === 'loaded' && window[a] && (i(), n && n(new Error('ServerError'))); }, c.onerror = function(t) { i(), n && n(new Error('ServerError')); }, d.parentNode.insertBefore(c, d), r; } function Te(t, e) { const n = e.split('?')[1]; if (n) { const i = new RegExp(`(^|&)${t}=([^&]*)(&|$)`, 'i'); const r = n.match(i); return r != null ? decodeURIComponent(r[2]) : null; } } function Ce(t) { t = t.replace(/^(http|https):/, ''); let e = window.location.protocol; return e != 'http:' && e != 'https:' && (e = 'https:'), t = e + t; } function Ee(t, e) { const n = /^http(s)?:\/\/(.*?)\//; const i = t.match(n); return t.replace(i[2], e); } function we() { const t = document; const e = t.documentElement; const n = t.body; return { width: e && e.clientWidth || n && n.offsetWidth || window.innerWidth || 0, height: e && e.clientHeight || n && n.offsetHeight || window.innerHeight || 0 }; } function Se() { return (new Date()).getTime(); } function ke(t, e, n) { const i = arguments.length > 3 && arguments[3] !== undefined && arguments[3]; const r = document.createElement('script'); if (r.onload = r.onreadystatechange = function() { this.readyState && this.readyState !== 'loaded' && this.readyState !== 'complete' || (typeof e === 'function' && e(), r.onload = r.onreadystatechange = null, r.parentNode && !i && r.parentNode.removeChild(r)); }, n) for (const o in n) if (n.hasOwnProperty(o)) { const s = n[o]; s === null ? r.removeAttribute(s) : r.setAttribute(o, s); }r.src = t, document.getElementsByTagName('head')[0].appendChild(r); } function Ie(t) {
const e = []; const n = function(t, n) { n = typeof n === 'function' ? n() : n, n = n === null ? '' : n === undefined ? '' : n, e[e.length] = `${encodeURIComponent(t)}=${encodeURIComponent(n)}`; }; return (function i(t, r) { let o = void 0; let s = void 0; let a = void 0; if (t) if (Array.isArray(r)) for (o = 0, s = r.length; o < s; o++)i(`${t}[${Jn(r[o]) === 'object' && r[o] ? o : ''}]`, r[o]); else if (String(r) === '[object Object]') for (a in r)i(`${t}[${a}]`, r[a]); else n(t, r); else if (Array.isArray(r)) for (o = 0, s = r.length; o < s; o++)n(r[o].name, r[o].value); else for (a in r)i(a, r[a]); return e; }('', t)).join('&');
} function Pe(t) {
 return t.length ? String(t).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;')
.replace(/\"/g, '&quot;')
.replace(/\'/g, '&#39;')
.replace(/\//g, '&#x2F;') : '';
} function xe() { let t = ''; const e = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f']; for (i = 0; i < 32; i++) { t += e[De(0, 15)]; } return t; } function De(t, e) { return Math.floor(Math.random() * (e - t + 1) + t); } function Me(e) { if (ce.browser.IS_IOS && ce.browser.IS_MQQ) return !1; if (t && t.isSupported() && !ce.browser.IS_TBS && !ce.browser.IS_MQQB && !ce.browser.IS_SAFARI || e) try { const n = ce.getTech && ce.getTech('Html5'); n && n.registerSourceHandler(Ca, 0); } catch (i) {} } function Re(t, n) { function i(t) { return `dash-audio-${t}`; } function r(t, e) { return t.find((t) => i(t.index) === e.id); } const o = t.dash.mediaPlayer; const s = o.getTracksFor('audio'); const a = t.audioTracks(); a.length && n.clearTracks(['audio']); const l = o.getCurrentTrackFor('audio'); s.forEach((t) => { let e = t.lang; t.roles && t.roles.length && (e += ` (${t.roles.join(', ')})`), a.addTrack(new ce.AudioTrack({ enabled: t === l, id: i(t.index), kind: t.kind || 'main', label: e, language: t.lang })); }); const c = function() { for (let t = 0; t < a.length; t++) { const e = a[t]; if (e.enabled) { const n = r(s, e); o.setCurrentTrack(n); } else; } }; a.addEventListener('change', c), t.dash.mediaPlayer.on(e.MediaPlayer.events.STREAM_TEARDOWN_COMPLETE, () => { a.removeEventListener('change', c); }); } function Ae(t, n) { t.dash.mediaPlayer.on(e.MediaPlayer.events.PLAYBACK_METADATA_LOADED, Re.bind(null, t, n)); } function Oe(t, e) { for (let n = 0; n < t.length; n++) if (e(t[n])) return t[n]; } function je(t, n, i) { function r() { for (var e = t.dash.mediaPlayer, n = t.textTracks(), r = -1, s = 0; s < n.length; s += 1)!(function(t) { const e = n[t]; if (e.mode === 'showing') { const s = Oe(o, (t) => t.textTrack === e); const a = s ? s.dashTrack : null; a && (r = i.indexOf(a)); } }(s)); r !== e.getCurrentTextTrackIndex() && e.setTextTrack(r); } var o = []; const s = i.map((t) => ({ dashTrack: t, trackConfig: { label: t.lang, language: t.lang, srclang: t.lang, kind: t.kind } })).map((e) => { const n = e.trackConfig; const i = e.dashTrack; const r = t.addRemoteTextTrack(n, !1); return o.push({ textTrack: r.track, dashTrack: i }), r; }); return t.textTracks().on('change', r), t.dash.mediaPlayer.on(e.MediaPlayer.events.STREAM_TEARDOWN_COMPLETE, () => { t.textTracks().off('change', r); }), r(), s; } function Le(t, n, i) { function r() { s.forEach(t.removeRemoteTextTrack.bind(t)), s = []; } function o(l) { const c = (l.index, l.tracks); a.off(e.MediaPlayer.events.TEXT_TRACKS_ADDED, o), r(), c.length && (s = je(t, n, c, i)); }tn.VTTCue && !/\[native code\]/.test(tn.VTTCue.toString()) && (tn.VTTCue = !1); var s = []; if (n.featuresNativeTextTracks) return void ce.log.error('You must pass {html: {nativeCaptions: false}} in the videojs constructor to use text tracks in videojs-contrib-dash'); var a = t.dash.mediaPlayer; a.on(e.MediaPlayer.events.TEXT_TRACKS_ADDED, o), a.on(e.MediaPlayer.events.CAN_PLAY, () => { a.off(e.MediaPlayer.events.TEXT_TRACKS_ADDED, o); }); } function Ne(t) { (tn.MediaSource && e || t) && ce.getTech('Html5').registerSourceHandler(ce.DashSourceHandler(), 0); } function Be() { const t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0; const e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'fill'; const n = t; const i = `draw-${e}`; return [`<svg height="100%" width="100%" viewBox="0 0 484 348">\n      <path class="${i}" transform="translate(4 4)" d="M383,124C350-42,122.3-40.5,90.6,123.5c-110.4,18.5-131,185,.6,216.5H381.6C519.7,310.7,494.1,137.8,383,124Z"/>\n      <path transform="translate(4 4)" d="M200.4,110.2c-9.4-5.8-19.6,2.7-19.4,11.7V256.2c0,8,10.4,16.7,19.4,10.8,2.2-1.4,111.8-65.9,114-67.3,7.4-4,10.1-15.8,0-22.2Z" style="fill:#fff ;"/>\n    </svg>`, `<svg height="100%" width="100%" viewBox="0 0 476 340">\n      <path class="${i}" d="M383,124C350-42,122.3-40.5,90.6,123.5c-110.4,18.5-131,185,.6,216.5H381.6C519.7,310.7,494.1,137.8,383,124Z"/>\n      <path d="M200.4,110.2c-9.4-5.8-19.6,2.7-19.4,11.7V256.2c0,8,10.4,16.7,19.4,10.8,2.2-1.4,111.8-65.9,114-67.3,7.4-4,10.1-15.8,0-22.2Z" style="fill:#fff ;"/>\n    </svg>`, `<svg height="100%" width="100%" viewBox="0 14 96 68">\n      <path class="${i}" d="M96,44.3v7.3c-0.1,7.7-1,15.5-1,15.5s-0.9,6.6-3.8,9.5c-3.6,3.8-7.7,3.8-9.6,4c-13.4,1-33.5,0.9-33.5,0.9 c-0.8,0-25-0.2-32.5-0.9c-2.1-0.4-6.9-0.3-10.6-4.1c-2.9-2.9-3.8-9.5-3.8-9.5s-1-7.7-1.1-15.5v-7.3c0.2-7.8,1.1-15.5,1.1-15.5 s0.9-6.6,3.8-9.5c3.6-3.8,7.7-3.8,9.6-4.1c13.4-1,33.5-0.9,33.5-0.9s20.1-0.1,33.5,0.9c1.9,0.2,5.9,0.2,9.6,4.1 c2.9,2.9,3.8,9.5,3.8,9.5S95.9,36.6,96,44.3z M38.3,61.4L64,47.9L38.3,34.4V61.4z"/>\n      <polygon points="64,47.9 38.3,61.4 38.3,34.4" fill="#fff"/>\n    </svg>`][n]; } function Fe(t) { const e = typeof t; return t != null && (e == 'object' || e == 'function'); } function Ve(t) { const e = ml.call(t, bl); const n = t[bl]; try { t[bl] = undefined; var i = !0; } catch (o) {} const r = _l.call(t); return i && (e ? t[bl] = n : delete t[bl]), r; } function He(t) { return El.call(t); } function Ue(t) { return t == null ? t === undefined ? kl : Sl : Il && Il in Object(t) ? Tl(t) : wl(t); } function qe(t) { return t != null && typeof t === 'object'; } function ze(t) { return typeof t === 'symbol' || xl(t) && Pl(t) == Dl; } function We(t) { if (typeof t === 'number') return t; if (Ml(t)) return Rl; if (al(t)) { const e = typeof t.valueOf === 'function' ? t.valueOf() : t; t = al(e) ? `${e}` : e; } if (typeof t !== 'string') return t === 0 ? t : +t; t = t.replace(Al, ''); const n = jl.test(t); return n || Ll.test(t) ? Nl(t.slice(2), n ? 2 : 8) : Ol.test(t) ? Rl : +t; } function Ke(t, e, n) { function i(e) { const n = p; const i = d; return p = d = undefined, m = e, y = t.apply(i, n); } function r(t) { return m = t, g = setTimeout(a, e), _ ? i(t) : y; } function o(t) { const n = t - v; const i = t - m; const r = e - n; return b ? Hl(r, f - i) : r; } function s(t) { const n = t - v; const i = t - m; return v === undefined || n >= e || n < 0 || b && i >= f; } function a() { const t = fl(); if (s(t)) return l(t); g = setTimeout(a, o(t)); } function l(t) { return g = undefined, T && p ? i(t) : (p = d = undefined, y); } function c() { g !== undefined && clearTimeout(g), m = 0, p = v = d = g = undefined; } function u() { return g === undefined ? y : l(fl()); } function h() { const t = fl(); const n = s(t); if (p = arguments, d = this, v = t, n) { if (g === undefined) return r(v); if (b) return g = setTimeout(a, e), i(v); } return g === undefined && (g = setTimeout(a, e)), y; } let p; let d; let f; let y; let g; let v; var m = 0; var _ = !1; var b = !1; var T = !0; if (typeof t !== 'function') throw new TypeError(Fl); return e = Bl(e) || 0, al(n) && (_ = !!n.leading, b = 'maxWait' in n, f = b ? Vl(Bl(n.maxWait) || 0, e) : f, T = 'trailing' in n ? !!n.trailing : T), h.cancel = c, h.flush = u, h; } function Qe(t, e, n) { let i = !0; let r = !0; if (typeof t !== 'function') throw new TypeError(ql); return al(n) && (i = 'leading' in n ? !!n.leading : i, r = 'trailing' in n ? !!n.trailing : r), Ul(t, e, { leading: i, maxWait: e, trailing: r }); } function Xe(t) { if (ce.browser.IS_IOS && ce.browser.IS_MQQ) return !1; if (n && n.isSupported() && !ce.browser.IS_TBS && !ce.browser.IS_MQQB && !ce.browser.IS_SAFARI && !ce.browser.IE_VERSION || t) try { const e = ce.getTech && ce.getTech('Html5'); e && e.registerSourceHandler(gh, 0); } catch (i) {} } function $e(t) { kh[t] = function() { return this.el_.vjs_getProperty(t); }; } function Ge(t, e, n) { let i = void 0; const r = (new Date()).getTime(); const o = ce.dom; if (typeof t === 'string')i = document.querySelector(`#${t}`); else { if (!t || !t.nodeName) throw new TypeError('The ID or element supplied is not valid.'); i = t; } if (i.nodeName.toLowerCase() != 'video' && i.nodeName.toLowerCase() != 'audio') throw new TypeError('The element type must be <video>.'); o.hasClass(i, 'tcplayer') || o.addClass(i, 'tcplayer'), o.hasClass(i, 'video-js') || o.addClass(i, 'video-js'), ce.browser.IE_VERSION && (i.style.width || i.offsetWidth && i.offsetWidth !== 300) && (tn.VIDEOJS_NO_DYNAMIC_STYLE = !0); const s = { controls: !0, language: 'zh-CN', playbackRates: [0.5, 1, 1.25, 1.5, 2], controlBar: { volumePanel: { inline: i.nodeName.toLowerCase() != 'video' }, fullscreenToggle: i.nodeName.toLowerCase() == 'video', QualitySwitcherMenuButton: !0 }, plugins: { Skin: '', VID: '', QualitySwitcher: {}, MultiResolution: {}, Errors: {}, Reporter: {}, ContextMenu: {}, LevelSwitch: {}, VttThumbnail: {}, PlayerMetrics: {} } }; e = ce.mergeOptions(s, e), ce.browser.IE_VERSION && ce.browser.IE_VERSION < 11 && tn.top, e.autoplay && ce.browser.IS_ANDROID && ce.browser.IS_WECHAT && (e.autoplay = !1), Rh('player initializing', e), ce.getComponent('player').prototype.options_.children.splice(1, 0, 'logoImage'); const a = ce(t, e, n); return a.PlayerMetrics().setTimingData({ initStart: r }), Rh('player initialized', e), a; }t = t && t.hasOwnProperty('default') ? t.default : t, e = e && e.hasOwnProperty('default') ? e.default : e, n = n && n.hasOwnProperty('default') ? n.default : n; let Ye; const Je = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {}; Ye = typeof window !== 'undefined' ? window : void 0 !== Je ? Je : typeof self !== 'undefined' ? self : {}; let Ze; var tn = Ye; const en = {}; const nn = (Object.freeze || Object)({ default: en }); const rn = nn && en || nn; const on = void 0 !== Je ? Je : typeof window !== 'undefined' ? window : {}; typeof document !== 'undefined' ? Ze = document : (Ze = on['__GLOBAL_DOCUMENT_CACHE@4']) || (Ze = on['__GLOBAL_DOCUMENT_CACHE@4'] = rn); var sn = Ze; const an = tn.navigator && tn.navigator.userAgent || ''; const ln = /AppleWebKit\/([\d.]+)/i.exec(an); const cn = ln ? parseFloat(ln.pop()) : null; const un = /iPad/i.test(an); const hn = /iPhone/i.test(an) && !un; const pn = /iPod/i.test(an); const dn = hn || un || pn; const fn = (function() { const t = an.match(/OS (\d+)_/i); return t && t[1] ? t[1] : null; }()); const yn = /Android/i.test(an); const gn = (function() { const t = an.match(/Android (\d+)(?:\.(\d+))?(?:\.(\d+))*/i); if (!t) return null; const e = t[1] && parseFloat(t[1]); const n = t[2] && parseFloat(t[2]); return e && n ? parseFloat(`${t[1]}.${t[2]}`) : e || null; }()); const vn = /TBS\/\d+/i.test(an); const mn = (function() { const t = an.match(/TBS\/(\d+)/i); if (t && t[1]) return t[1]; }()); const _n = !vn && /MQQBrowser\/\d+/i.test(an); const bn = !vn && / QQBrowser\/\d+/i.test(an); const Tn = /(micromessenger|webbrowser)/i.test(an); const Cn = / QQ\/\d+/i.test(an); const En = yn && /webkit/i.test(an) && gn < 2.3; const wn = yn && gn < 5 && cn < 537; const Sn = /Firefox/i.test(an); const kn = /Edge/i.test(an); const In = (function() { return !(kn || !/Chrome/i.test(an)) || !(!/Safari/i.test(an) || !/CriOS/i.test(an)); }()) && !Tn && !_n && !bn; const Pn = (function() { const t = an.match(/Chrome\/(\d+)/); const e = an.match(/CriOS\/(\d+)/); return t && t[1] ? parseFloat(t[1]) : e && e[1] ? parseFloat(e[1]) : null; }()); const xn = /MSIE\s8\.0/.test(an); var Dn = (function() { const t = /MSIE\s(\d+)\.\d/.exec(an); let e = t && parseFloat(t[1]); return !e && /Trident\/7.0/i.test(an) && /rv:11.0/.test(an) && (e = 11), e; }()); const Mn = /Safari/i.test(an) && !In && !yn && !kn && !_n && !bn; const Rn = Mn || dn; const An = g() && ('ontouchstart' in tn || tn.DocumentTouch && tn.document instanceof tn.DocumentTouch); const On = g() && 'backgroundSize' in tn.document.createElement('video').style; const jn = /Windows/i.test(an); const Ln = /MAC OS X/i.test(an); const Nn = (function() { return /Windows NT ([.\w]+)/.test(an), `win${RegExp.$1}`; }()); const Bn = (function() { return /Mac OS X (\w+)/.test(an), `mac${RegExp.$1}`; }()); const Fn = (function() { return /QQBrowser\/([.\d]+)/.test(an), `qq${RegExp.$1}`; }()); const Vn = (function() { return /Edge\/([.\d]+)/.test(an), `edge${RegExp.$1}`; }()); const Hn = (function() { return /Version\/([.\d]+)/.test(an), `safari${RegExp.$1}`; }()); const Un = (function() { return /Firefox\/([.\d]+)/.test(an), `firefox${RegExp.$1}`; }()); const qn = /HUAWEI|honor|HMA/i.test(an); const zn = /HM|RedMi|Mi/i.test(an) && !qn; const Wn = /OPPO/i.test(an); const Kn = /VIVO/i.test(an); const Qn = /GT-|SM-|SCH-/i.test(an); const Xn = /ONE/i.test(an); const $n = /Coolpad/i.test(an); const Gn = /ZTE/i.test(an); const Yn = (Object.freeze || Object)({ IS_IPAD: un, IS_IPHONE: hn, IS_IPOD: pn, IS_IOS: dn, IOS_VERSION: fn, IS_ANDROID: yn, ANDROID_VERSION: gn, IS_TBS: vn, TBS_VERSION: mn, IS_MQQB: _n, IS_QQB: bn, IS_WECHAT: Tn, IS_MQQ: Cn, IS_OLD_ANDROID: En, IS_NATIVE_ANDROID: wn, IS_FIREFOX: Sn, IS_EDGE: kn, IS_CHROME: In, CHROME_VERSION: Pn, IS_IE8: xn, IE_VERSION: Dn, IS_SAFARI: Mn, IS_ANY_SAFARI: Rn, TOUCH_ENABLED: An, BACKGROUND_SIZE_SUPPORTED: On, IS_WIN: jn, IS_MAC: Ln, WIN_VER: Nn, MAC_VER: Bn, QQ_VER: Fn, EDGE_VER: Vn, SAFARI_VER: Hn, FIREFOX_VER: Un, IS_HUAWEI: qn, IS_XIAOMI: zn, IS_OPPO: Wn, IS_VIVO: Kn, IS_SX: Qn, IS_ONE: Xn, IS_CP: $n, IS_ZX: Gn }); var Jn = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? function(t) { return typeof t; } : function(t) { return t && typeof Symbol === 'function' && t.constructor === Symbol && t !== Symbol.prototype ? 'symbol' : typeof t; }; const Zn = function(t, e) { if (!(t instanceof e)) throw new TypeError('Cannot call a class as a function'); }; const ti = function(t, e) { if (typeof e !== 'function' && e !== null) throw new TypeError(`Super expression must either be null or a function, not ${typeof e}`); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, enumerable: !1, writable: !0, configurable: !0 } }), e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e); }; const ei = function(t, e) { if (!t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return !e || typeof e !== 'object' && typeof e !== 'function' ? t : e; }; const ni = function(t, e) { return t.raw = e, t; }; var ii = Object.prototype.toString; var ri = function(t) { return l(t) ? Object.keys(t) : []; }; let oi = void 0; let si = 'info'; let ai = []; const li = function(t, e) { const n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !!Dn && Dn < 11; const i = oi.levels[si]; const r = new RegExp(`^(${i})$`); if (t !== 'log' && e.unshift(`${t.toUpperCase()}:`), ai && ai.push([].concat(e)), (oi.enableLog || t != 'log') && (e.unshift('TCPlayer:'), tn.console)) { let o = tn.console[t]; o || t !== 'debug' || (o = tn.console.info || tn.console.log), o && i && r.test(t) && (n && (e = e.map((t) => { if (l(t) || Array.isArray(t)) try { return JSON.stringify(t); } catch (e) { return String(t); } return String(t); }).join(' ')), o.apply ? o[Array.isArray(e) ? 'apply' : 'call'](tn.console, e) : o(e)); } }; oi = function() { for (var t = arguments.length, e = Array(t), n = 0; n < t; n++)e[n] = arguments[n]; li('log', e); }, oi.levels = { all: 'debug|log|warn|error', off: '', debug: 'debug|log|warn|error', info: 'log|warn|error', warn: 'warn|error', error: 'error', DEFAULT: si }, oi.level = function(t) { if (typeof t === 'string') { if (!oi.levels.hasOwnProperty(t)) throw new Error(`"${t}" in not a valid log level`); si = t; } return si; }, oi.history = function() { return ai ? [].concat(ai) : []; }, oi.history.clear = function() { ai && (ai.length = 0); }, oi.history.disable = function() { ai !== null && (ai.length = 0, ai = null); }, oi.history.enable = function() { ai === null && (ai = []); }, oi.enableLog = !1, oi.error = function() { for (var t = arguments.length, e = Array(t), n = 0; n < t; n++)e[n] = arguments[n]; return li('error', e); }, oi.warn = function() { for (var t = arguments.length, e = Array(t), n = 0; n < t; n++)e[n] = arguments[n]; return li('warn', e); }, oi.debug = function() { for (var t = arguments.length, e = Array(t), n = 0; n < t; n++)e[n] = arguments[n]; return li('debug', e); }; var ci = oi; var ui = function(t) { for (var e = '', n = 0; n < arguments.length; n++)e += h(t[n]) + (arguments[n + 1] || ''); return e; }; var hi = ni(['Setting attributes in the second argument of createEl()\n                has been deprecated. Use the third argument instead.\n                createEl(type, properties, attributes). Attempting to set ', ' to ', '.'], ['Setting attributes in the second argument of createEl()\n                has been deprecated. Use the third argument instead.\n                createEl(type, properties, attributes). Attempting to set ', ' to ', '.']); var pi = _('querySelector'); const di = _('querySelectorAll'); const fi = (Object.freeze || Object)({ isReal: g, isEl: v, isInFrame: m, createEl: b, textContent: T, prependTo: C, hasClass: E, addClass: w, removeClass: S, toggleClass: k, setAttributes: I, getAttributes: P, getAttribute: x, setAttribute: D, removeAttribute: M, blockTextSelection: R, unblockTextSelection: A, getBoundingClientRect: O, findPosition: j, getPointerPosition: L, isTextNode: N, emptyEl: B, normalizeContent: F, appendContent: V, insertContent: H, isSingleLeftClick: U, $: pi, $$: di }); var yi = 1; var gi = {}; var vi = `vdata${(new Date()).getTime()}`; var mi = !1; !(function() { try { const t = Object.defineProperty({}, 'passive', { get() { mi = !0; } }); tn.addEventListener('test', null, t), tn.removeEventListener('test', null, t); } catch (e) {} }()); var _i = ['touchstart', 'touchmove']; const bi = (Object.freeze || Object)({ fixEvent: $, on: G, off: Y, trigger: J, one: Z }); let Ti = !1; var Ci = void 0; var Ei = function() { if (g()) { const t = sn.getElementsByTagName('video'); const e = sn.getElementsByTagName('audio'); const n = sn.getElementsByTagName('video-js'); const i = []; if (t && t.length > 0) for (let r = 0, o = t.length; r < o; r++)i.push(t[r]); if (e && e.length > 0) for (let s = 0, a = e.length; s < a; s++)i.push(e[s]); if (n && n.length > 0) for (let l = 0, c = n.length; l < c; l++)i.push(n[l]); if (i && i.length > 0) for (let u = 0, h = i.length; u < h; u++) { const p = i[u]; if (!p || !p.getAttribute) { tt(1); break; } if (p.player === undefined) { const d = p.getAttribute('data-setup'); d !== null && Ci(p); } } else Ti || tt(1); } }; g() && sn.readyState === 'complete' ? Ti = !0 : Z(tn, 'load', () => { Ti = !0; }); const wi = function(t) { const e = sn.createElement('style'); return e.className = t, e; }; const Si = function(t, e) { t.styleSheet ? t.styleSheet.cssText = e : t.textContent = e; }; const ki = function(t, e, n) { e.guid || (e.guid = q()); const i = function() { return e.apply(t, arguments); }; return i.guid = n ? `${n}_${e.guid}` : e.guid, i; }; const Ii = function(t, e) { let n = Date.now(); return function() { const i = Date.now(); i - n >= e && (t.apply(undefined, arguments), n = i); }; }; const Pi = function() {}; Pi.prototype.allowedEvents_ = {}, Pi.prototype.on = function(t, e) { const n = this.addEventListener; this.addEventListener = function() {}, G(this, t, e), this.addEventListener = n; }, Pi.prototype.addEventListener = Pi.prototype.on, Pi.prototype.off = function(t, e) { Y(this, t, e); }, Pi.prototype.removeEventListener = Pi.prototype.off, Pi.prototype.one = function(t, e) { const n = this.addEventListener; this.addEventListener = function() {}, Z(this, t, e), this.addEventListener = n; }, Pi.prototype.trigger = function(t) { const e = t.type || t; typeof t === 'string' && (t = { type: e }), t = $(t), this.allowedEvents_[e] && this[`on${e}`] && this[`on${e}`](t), J(this, t); }, Pi.prototype.dispatchEvent = Pi.prototype.trigger; var xi = function(t) { return t instanceof Pi || !!t.eventBusEl_ && ['on', 'one', 'off', 'trigger'].every((e) => typeof t[e] === 'function'); }; const Di = function(t) { return typeof t === 'string' && /\S/.test(t) || Array.isArray(t) && !!t.length; }; const Mi = function(t) { if (!t.nodeName && !xi(t)) throw new Error('Invalid target; must be a DOM node or evented object.'); }; const Ri = function(t) { if (!Di(t)) throw new Error('Invalid event type; must be a non-empty string or array.'); }; const Ai = function(t) { if (typeof t !== 'function') throw new Error('Invalid listener; must be a function.'); }; const Oi = function(t, e) { const n = e.length < 3 || e[0] === t || e[0] === t.eventBusEl_; let i = void 0; let r = void 0; let o = void 0; return n ? (i = t.eventBusEl_, e.length >= 3 && e.shift(), r = e[0], o = e[1]) : (i = e[0], r = e[1], o = e[2]), Mi(i), Ri(r), Ai(o), o = ki(t, o), { isTargetingSelf: n, target: i, type: r, listener: o }; }; const ji = function(t, e, n, i) { Mi(t), t.nodeName ? bi[e](t, n, i) : t[e](n, i); }; var Li = { on() { for (var t = this, e = arguments.length, n = Array(e), i = 0; i < e; i++)n[i] = arguments[i]; const r = Oi(this, n); const o = r.isTargetingSelf; const s = r.target; const a = r.type; const l = r.listener; if (ji(s, 'on', a, l), !o) { const c = function() { return t.off(s, a, l); }; c.guid = l.guid; const u = function() { return t.off('dispose', c); }; u.guid = l.guid, ji(this, 'on', 'dispose', c), ji(s, 'on', 'dispose', u); } }, one() { for (var t = this, e = arguments.length, n = Array(e), i = 0; i < e; i++)n[i] = arguments[i]; const r = Oi(this, n); const o = r.isTargetingSelf; const s = r.target; const a = r.type; const l = r.listener; if (o)ji(s, 'one', a, l); else { const c = function u() { for (var e = arguments.length, n = Array(e), i = 0; i < e; i++)n[i] = arguments[i]; t.off(s, a, u), l.apply(null, n); }; c.guid = l.guid, ji(s, 'one', a, c); } }, off(t, e, n) { if (!t || Di(t))Di(e) ? Y(this.eventBusEl_, e, n) : Y(this.eventBusEl_, t, e); else { const i = t; const r = e; Mi(i), Ri(r), Ai(n), n = ki(this, n), this.off('dispose', n), i.nodeName ? (Y(i, r, n), Y(i, 'dispose', n)) : xi(i) && (i.off(r, n), i.off('dispose', n)); } }, trigger(t, e) { return J(this.eventBusEl_, t, e); } }; var Ni = { state: {}, setState(t) { const e = this; typeof t === 'function' && (t = t()); let n = void 0; return o(t, (t, i) => { e.state[i] !== t && (n = n || {}, n[i] = { from: e.state[i], to: t }), e.state[i] = t; }), n && xi(this) && this.trigger({ changes: n, type: 'statechanged' }), n; } }; var Bi = (function() { function t(e, n, i) { if (Zn(this, t), !e && this.play ? this.player_ = e = this : this.player_ = e, this.options_ = st(!0, {}, this.options_), n = this.options_ = ot(this.options_, n), this.id_ = n.id || n.el && n.el.id, !this.id_) { const r = e && e.id && e.id() || 'no_player'; this.id_ = `${r}_component_${q()}`; } this.name_ = n.name || null, n.el ? this.el_ = n.el : !1 !== n.createEl && (this.el_ = this.createEl()), !1 !== n.evented && et(this, { eventBusKey: this.el_ ? 'el_' : null }), nt(this, this.constructor.defaultState), this.children_ = [], this.childIndex_ = {}, this.childNameIndex_ = {}, !1 !== n.initChildren && this.initChildren(), this.ready(i), !1 !== n.reportTouchActivity && this.enableTouchActivity(); } return t.prototype.dispose = function() { if (this.trigger({ type: 'dispose', bubbles: !1 }), this.children_) for (let t = this.children_.length - 1; t >= 0; t--) this.children_[t].dispose && this.children_[t].dispose(); this.children_ = null, this.childIndex_ = null, this.childNameIndex_ = null, this.el_ && (this.el_.parentNode && this.el_.parentNode.removeChild(this.el_), K(this.el_), this.el_ = null), this.player_ = null; }, t.prototype.player = function() { return this.player_; }, t.prototype.options = function(t) { return ci.warn('this.options() has been deprecated and will be moved to the constructor in 6.0'), t ? (this.options_ = ot(this.options_, t), this.options_) : this.options_; }, t.prototype.el = function() { return this.el_; }, t.prototype.createEl = function(t, e, n) { return b(t, e, n); }, t.prototype.localize = function(t, e) { const n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : t; const i = this.player_.language && this.player_.language(); const r = this.player_.languages && this.player_.languages(); const o = r && r[i]; const s = i && i.split('-')[0]; const a = r && r[s]; let l = n; return o && o[t] ? l = o[t] : a && a[t] && (l = a[t]), e && (l = l.replace(/\{(\d+)\}/g, (t, n) => { const i = e[n - 1]; let r = i; return void 0 === i && (r = t), r; })), l; }, t.prototype.contentEl = function() { return this.contentEl_ || this.el_; }, t.prototype.id = function() { return this.id_; }, t.prototype.name = function() { return this.name_; }, t.prototype.children = function() { return this.children_; }, t.prototype.getChildById = function(t) { return this.childIndex_[t]; }, t.prototype.getChild = function(t) { if (t) return t = it(t), this.childNameIndex_[t]; }, t.prototype.addChild = function(e) { const n = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; const i = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.children_.length; let r = void 0; let o = void 0; if (typeof e === 'string') { o = it(e); const s = n.componentClass || o; n.name = o; const a = t.getComponent(s); if (!a) throw new Error(`Component ${s} does not exist`); if (typeof a !== 'function') return null; r = new a(this.player_ || this, n); } else r = e; if (this.children_.splice(i, 0, r), typeof r.id === 'function' && (this.childIndex_[r.id()] = r), o = o || r.name && it(r.name()), o && (this.childNameIndex_[o] = r), typeof r.el === 'function' && r.el()) { const l = this.contentEl().children; const c = l[i] || null; this.contentEl().insertBefore(r.el(), c); } return r; }, t.prototype.removeChild = function(t) { if (typeof t === 'string' && (t = this.getChild(t)), t && this.children_) { for (var e = !1, n = this.children_.length - 1; n >= 0; n--) if (this.children_[n] === t) { e = !0, this.children_.splice(n, 1); break; } if (e) { this.childIndex_[t.id()] = null, this.childNameIndex_[t.name()] = null; const i = t.el(); i && i.parentNode === this.contentEl() && this.contentEl().removeChild(t.el()); } } }, t.prototype.initChildren = function() { const e = this; const n = this.options_.children; if (n) { const i = this.options_; const r = function(t) { const n = t.name; let r = t.opts; if (i[n] !== undefined && (r = i[n]), !1 !== r) { !0 === r && (r = {}), r.playerOptions = e.options_.playerOptions; const o = e.addChild(n, r); o && (e[n] = o); } }; let o = void 0; const s = t.getComponent('Tech'); o = Array.isArray(n) ? n : Object.keys(n), o.concat(Object.keys(this.options_).filter((t) => !o.some((e) => (typeof e === 'string' ? t === e : t === e.name)))).map((t) => { let i = void 0; let r = void 0; return typeof t === 'string' ? (i = t, r = n[i] || e.options_[i] || {}) : (i = t.name, r = t), { name: i, opts: r }; }).filter((e) => { const n = t.getComponent(e.opts.componentClass || it(e.name)); return n && !s.isTech(n); }).forEach(r); } }, t.prototype.buildCSSClass = function() { return ''; }, t.prototype.ready = function(t) { const e = arguments.length > 1 && arguments[1] !== undefined && arguments[1]; if (t) return this.isReady_ ? void (e ? t.call(this) : this.setTimeout(t, 1)) : (this.readyQueue_ = this.readyQueue_ || [], void this.readyQueue_.push(t)); }, t.prototype.triggerReady = function() { this.isReady_ = !0, this.setTimeout(function() { const t = this.readyQueue_; this.readyQueue_ = [], t && t.length > 0 && t.forEach(function(t) { t.call(this); }, this), this.trigger('ready'); }, 1); }, t.prototype.$ = function(t, e) { return pi(t, e || this.contentEl()); }, t.prototype.$$ = function(t, e) { return di(t, e || this.contentEl()); }, t.prototype.hasClass = function(t) { return E(this.el_, t); }, t.prototype.addClass = function(t) { w(this.el_, t); }, t.prototype.removeClass = function(t) { S(this.el_, t); }, t.prototype.toggleClass = function(t, e) { k(this.el_, t, e); }, t.prototype.show = function() { this.removeClass('vjs-hidden'); }, t.prototype.hide = function() { this.addClass('vjs-hidden'); }, t.prototype.lockShowing = function() { this.addClass('vjs-lock-showing'); }, t.prototype.unlockShowing = function() { this.removeClass('vjs-lock-showing'); }, t.prototype.getAttribute = function(t) { return x(this.el_, t); }, t.prototype.setAttribute = function(t, e) { D(this.el_, t, e); }, t.prototype.removeAttribute = function(t) { M(this.el_, t); }, t.prototype.width = function(t, e) { return this.dimension('width', t, e); }, t.prototype.height = function(t, e) { return this.dimension('height', t, e); }, t.prototype.dimensions = function(t, e) { this.width(t, !0), this.height(e); }, t.prototype.dimension = function(t, e, n) { if (e !== undefined) return e !== null && e === e || (e = 0), (`${e}`).indexOf('%') !== -1 || (`${e}`).indexOf('px') !== -1 ? this.el_.style[t] = e : this.el_.style[t] = e === 'auto' ? '' : `${e}px`, void (n || this.trigger('componentresize')); if (!this.el_) return 0; const i = this.el_.style[t]; const r = i.indexOf('px'); return r !== -1 ? parseInt(i.slice(0, r), 10) : parseInt(this.el_[`offset${it(t)}`], 10); }, t.prototype.currentDimension = function(t) { let e = 0; if (t !== 'width' && t !== 'height') throw new Error('currentDimension only accepts width or height value'); if (typeof tn.getComputedStyle === 'function') { const n = tn.getComputedStyle(this.el_); e = n.getPropertyValue(t) || n[t]; } if ((e = parseFloat(e)) === 0) { const i = `offset${it(t)}`; e = this.el_[i]; } return e; }, t.prototype.currentDimensions = function() { return { width: this.currentDimension('width'), height: this.currentDimension('height') }; }, t.prototype.currentWidth = function() { return this.currentDimension('width'); }, t.prototype.currentHeight = function() { return this.currentDimension('height'); }, t.prototype.focus = function() { this.el_.focus(); }, t.prototype.blur = function() { this.el_.blur(); }, t.prototype.emitTapEvents = function() { let t = 0; let e = null; let n = void 0; this.on('touchstart', (i) => { i.touches.length === 1 && (e = { pageX: i.touches[0].pageX, pageY: i.touches[0].pageY }, t = (new Date()).getTime(), n = !0); }), this.on('touchmove', (t) => { if (t.touches.length > 1)n = !1; else if (e) { const i = t.touches[0].pageX - e.pageX; const r = t.touches[0].pageY - e.pageY; const o = Math.sqrt(i * i + r * r); o > 10 && (n = !1); } }); const i = function() { n = !1; }; this.on('touchleave', i), this.on('touchcancel', i), this.on('touchend', function(i) { if (e = null, !0 === n) { (new Date()).getTime() - t < 200 && (i.preventDefault(), this.trigger('tap')); } }); }, t.prototype.enableTouchActivity = function() { if (this.player() && this.player().reportUserActivity) { const t = ki(this.player(), this.player().reportUserActivity); let e = void 0; this.on('touchstart', function() { t(), this.clearInterval(e), e = this.setInterval(t, 250); }); const n = function(n) { t(), this.clearInterval(e); }; this.on('touchmove', t), this.on('touchend', n), this.on('touchcancel', n); } }, t.prototype.setTimeout = function(t, e) { const n = this; t = ki(this, t); const i = tn.setTimeout(t, e); const r = function() { return n.clearTimeout(i); }; return r.guid = `vjs-timeout-${i}`, this.on('dispose', r), i; }, t.prototype.clearTimeout = function(t) { tn.clearTimeout(t); const e = function() {}; return e.guid = `vjs-timeout-${t}`, this.off('dispose', e), t; }, t.prototype.setInterval = function(t, e) { const n = this; t = ki(this, t); const i = tn.setInterval(t, e); const r = function() { return n.clearInterval(i); }; return r.guid = `vjs-interval-${i}`, this.on('dispose', r), i; }, t.prototype.clearInterval = function(t) { tn.clearInterval(t); const e = function() {}; return e.guid = `vjs-interval-${t}`, this.off('dispose', e), t; }, t.prototype.requestAnimationFrame = function(t) { const e = this; if (this.supportsRaf_) { t = ki(this, t); const n = tn.requestAnimationFrame(t); const i = function() { return e.cancelAnimationFrame(n); }; return i.guid = `vjs-raf-${n}`, this.on('dispose', i), n; } return this.setTimeout(t, 1e3 / 60); }, t.prototype.cancelAnimationFrame = function(t) { if (this.supportsRaf_) { tn.cancelAnimationFrame(t); const e = function() {}; return e.guid = `vjs-raf-${t}`, this.off('dispose', e), t; } return this.clearTimeout(t); }, t.registerComponent = function(e, n) { if (typeof e !== 'string' || !e) throw new Error(`Illegal component name, "${e}"; must be a non-empty string.`); const i = t.getComponent('Tech'); const r = i && i.isTech(n); const o = t === n || t.prototype.isPrototypeOf(n.prototype); if (r || !o) { let s = void 0; throw s = r ? 'techs must be registered using Tech.registerTech()' : 'must be a Component subclass', new Error(`Illegal component, "${e}"; ${s}.`); }e = it(e), t.components_ || (t.components_ = {}); const a = t.getComponent('Player'); if (e === 'Player' && a && a.players) { const l = a.players; const c = Object.keys(l); if (l && c.length > 0 && c.map((t) => l[t]).every(Boolean)) throw new Error('Can not register Player component after player has been created.'); } return t.components_[e] = n, n; }, t.getComponent = function(e) { if (e) return e = it(e), t.components_ && t.components_[e] ? t.components_[e] : void 0; }, t; }()); Bi.prototype.supportsRaf_ = typeof tn.requestAnimationFrame === 'function' && typeof tn.cancelAnimationFrame === 'function', Bi.registerComponent('Component', Bi); for (var Fi = {}, Vi = [['requestFullscreen', 'exitFullscreen', 'fullscreenElement', 'fullscreenEnabled', 'fullscreenchange', 'fullscreenerror'], ['webkitRequestFullscreen', 'webkitExitFullscreen', 'webkitFullscreenElement', 'webkitFullscreenEnabled', 'webkitfullscreenchange', 'webkitfullscreenerror'], ['webkitRequestFullScreen', 'webkitCancelFullScreen', 'webkitCurrentFullScreenElement', 'webkitCancelFullScreen', 'webkitfullscreenchange', 'webkitfullscreenerror'], ['mozRequestFullScreen', 'mozCancelFullScreen', 'mozFullScreenElement', 'mozFullScreenEnabled', 'mozfullscreenchange', 'mozfullscreenerror'], ['msRequestFullscreen', 'msExitFullscreen', 'msFullscreenElement', 'msFullscreenEnabled', 'MSFullscreenChange', 'MSFullscreenError']], Hi = Vi[0], Ui = void 0, qi = !1, zi = 0; zi < Vi.length; zi++) if (Vi[zi][1] in sn) { Ui = Vi[zi]; break; } if (Ui) { for (let Wi = 0; Wi < Ui.length; Wi++)Fi[Hi[Wi]] = Ui[Wi]; qi = Ui[0] === Hi[0]; }pt.prototype.code = 0, pt.prototype.message = '', pt.prototype.status = null, pt.errorTypes = ['MEDIA_ERR_CUSTOM', 'MEDIA_ERR_ABORTED', 'MEDIA_ERR_NETWORK', 'MEDIA_ERR_DECODE', 'MEDIA_ERR_SRC_NOT_SUPPORTED', 'MEDIA_ERR_ENCRYPTED'], pt.defaultMessages = { 1: 'You aborted the media playback', 2: 'A network error caused the media download to fail part-way.', 3: 'The media playback was aborted due to a corruption problem or because the media used features your browser did not support.', 4: 'The media could not be loaded, either because the server or network failed or because the format is not supported.', 5: 'The media is encrypted and we do not have the keys to decrypt it.' }; for (let Ki = 0; Ki < pt.errorTypes.length; Ki++)pt[pt.errorTypes[Ki]] = Ki, pt.prototype[pt.errorTypes[Ki]] = Ki; const Qi = dt; const Xi = function(t) { return ['kind', 'label', 'language', 'id', 'inBandMetadataTrackDispatchType', 'mode', 'src'].reduce((e, n, i) => (t[n] && (e[n] = t[n]), e), { cues: t.cues && Array.prototype.map.call(t.cues, (t) => ({ startTime: t.startTime, endTime: t.endTime, text: t.text, id: t.id })) }); }; const $i = function(t) { const e = t.$$('track'); const n = Array.prototype.map.call(e, (t) => t.track); return Array.prototype.map.call(e, (t) => { const e = Xi(t.track); return t.src && (e.src = t.src), e; }).concat(Array.prototype.filter.call(t.textTracks(), (t) => n.indexOf(t) === -1).map(Xi)); }; const Gi = function(t, e) { return t.forEach((t) => { const n = e.addRemoteTextTrack(t).track; !t.src && t.cues && t.cues.forEach((t) => n.addCue(t)); }), e.textTracks(); }; const Yi = { textTracksToJson: $i, jsonToTextTracks: Gi, trackToJson_: Xi }; const Ji = 'vjs-modal-dialog'; const Zi = (function(t) {
 function e(n, i) { Zn(this, e); const r = ei(this, t.call(this, n, i)); return r.opened_ = r.hasBeenOpened_ = r.hasBeenFilled_ = !1, r.closeable(!r.options_.uncloseable), r.content(r.options_.content), r.contentEl_ = b('div', { className: `${Ji}-content` }, { role: 'document' }), r.descEl_ = b('p', { className: `${Ji}-description vjs-control-text`, id: r.el().getAttribute('aria-describedby') }), T(r.descEl_, r.description()), r.el_.appendChild(r.descEl_), r.el_.appendChild(r.contentEl_), r; } return ti(e, t), e.prototype.createEl = function() { return t.prototype.createEl.call(this, 'div', { className: this.buildCSSClass(), tabIndex: -1 }, { 'aria-describedby': `${this.id()}_description`, 'aria-hidden': 'true', 'aria-label': this.label(), role: 'dialog' }); }, e.prototype.dispose = function() { this.contentEl_ = null, this.descEl_ = null, this.previouslyActiveEl_ = null, t.prototype.dispose.call(this); }, e.prototype.buildCSSClass = function() { return `${Ji} vjs-hidden ${t.prototype.buildCSSClass.call(this)}`; }, e.prototype.handleKeyPress = function(t) { t.which === 27 && this.closeable() && this.close(); }, e.prototype.label = function() {
return this.localize(this.options_.label || 'Modal Window');
}, e.prototype.description = function() { let t = this.options_.description || this.localize('This is a modal window.'); return this.closeable() && (t += ` ${this.localize('This modal can be closed by pressing the Escape key or activating the close button.')}`), t; }, e.prototype.open = function() { if (!this.opened_) { const t = this.player(); this.trigger('beforemodalopen'), this.opened_ = !0, (this.options_.fillAlways || !this.hasBeenOpened_ && !this.hasBeenFilled_) && this.fill(), this.wasPlaying_ = !t.paused(), this.options_.pauseOnOpen && this.wasPlaying_ && t.pause(), this.closeable() && this.on(this.el_.ownerDocument, 'keydown', ki(this, this.handleKeyPress)), this.hadControls_ = t.controls(), t.controls(!1), this.show(), this.conditionalFocus_(), this.el().setAttribute('aria-hidden', 'false'), this.trigger('modalopen'), this.hasBeenOpened_ = !0; } }, e.prototype.opened = function(t) { return typeof t === 'boolean' && this[t ? 'open' : 'close'](), this.opened_; }, e.prototype.close = function() { if (this.opened_) { const t = this.player(); this.trigger('beforemodalclose'), this.opened_ = !1, this.wasPlaying_ && this.options_.pauseOnOpen && t.play(), this.closeable() && this.off(this.el_.ownerDocument, 'keydown', ki(this, this.handleKeyPress)), this.hadControls_ && t.controls(!0), this.hide(), this.el().setAttribute('aria-hidden', 'true'), this.trigger('modalclose'), this.conditionalBlur_(), this.options_.temporary && this.dispose(); } }, e.prototype.closeable = function(t) { if (typeof t === 'boolean') { const e = this.closeable_ = !!t; let n = this.getChild('closeButton'); if (e && !n) { const i = this.contentEl_; this.contentEl_ = this.el_, n = this.addChild('closeButton', { controlText: 'Close Modal Dialog' }), this.contentEl_ = i, this.on(n, 'close', this.close); }!e && n && (this.off(n, 'close', this.close), this.removeChild(n), n.dispose()); } return this.closeable_; }, e.prototype.fill = function() { this.fillWith(this.content()); }, e.prototype.fillWith = function(t) { const e = this.contentEl(); const n = e.parentNode; const i = e.nextSibling; this.trigger('beforemodalfill'), this.hasBeenFilled_ = !0, n.removeChild(e), this.empty(), H(e, t), this.trigger('modalfill'), i ? n.insertBefore(e, i) : n.appendChild(e); const r = this.getChild('closeButton'); r && n.appendChild(r.el_); }, e.prototype.empty = function() { this.trigger('beforemodalempty'), B(this.contentEl()), this.trigger('modalempty'); }, e.prototype.content = function(t) { return void 0 !== t && (this.content_ = t), this.content_; }, e.prototype.conditionalFocus_ = function() { const t = sn.activeElement; const e = this.player_.el_; this.previouslyActiveEl_ = null, (e.contains(t) || e === t) && (this.previouslyActiveEl_ = t, this.focus(), this.on(sn, 'keydown', this.handleKeyDown)); }, e.prototype.conditionalBlur_ = function() { this.previouslyActiveEl_ && (this.previouslyActiveEl_.focus(), this.previouslyActiveEl_ = null), this.off(sn, 'keydown', this.handleKeyDown); }, e.prototype.handleKeyDown = function(t) { if (t.which === 9) { for (var e = this.focusableEls_(), n = this.el_.querySelector(':focus'), i = void 0, r = 0; r < e.length; r++) if (n === e[r]) { i = r; break; }sn.activeElement === this.el_ && (i = 0), t.shiftKey && i === 0 ? (e[e.length - 1].focus(), t.preventDefault()) : t.shiftKey || i !== e.length - 1 || (e[0].focus(), t.preventDefault()); } }, e.prototype.focusableEls_ = function() { const t = this.el_.querySelectorAll('*'); return Array.prototype.filter.call(t, (t) => (t instanceof tn.HTMLAnchorElement || t instanceof tn.HTMLAreaElement) && t.hasAttribute('href') || (t instanceof tn.HTMLInputElement || t instanceof tn.HTMLSelectElement || t instanceof tn.HTMLTextAreaElement || t instanceof tn.HTMLButtonElement) && !t.hasAttribute('disabled') || t instanceof tn.HTMLIFrameElement || t instanceof tn.HTMLObjectElement || t instanceof tn.HTMLEmbedElement || t.hasAttribute('tabindex') && t.getAttribute('tabindex') !== -1 || t.hasAttribute('contenteditable')); }, e;
}(Bi)); Zi.prototype.options_ = { pauseOnOpen: !0, temporary: !0 }, Bi.registerComponent('ModalDialog', Zi); const tr = (function(t) { function e() { let n; const i = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : []; let r = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null; Zn(this, e); const o = ei(this, t.call(this)); if (!r && (r = o, xn)) { r = sn.createElement('custom'); for (const s in e.prototype)s !== 'constructor' && (r[s] = e.prototype[s]); }r.tracks_ = [], Object.defineProperty(r, 'length', { get() { return this.tracks_.length; } }); for (let a = 0; a < i.length; a++)r.addTrack(i[a]); return n = r, ei(o, n); } return ti(e, t), e.prototype.addTrack = function(t) { const e = this.tracks_.length; `${e}` in this || Object.defineProperty(this, e, { get() { return this.tracks_[e]; } }), this.tracks_.indexOf(t) === -1 && (this.tracks_.push(t), this.trigger({ track: t, type: 'addtrack' })); }, e.prototype.removeTrack = function(t) { for (var e = void 0, n = 0, i = this.length; n < i; n++) if (this[n] === t) { e = this[n], e.off && e.off(), this.tracks_.splice(n, 1); break; }e && this.trigger({ track: e, type: 'removetrack' }); }, e.prototype.getTrackById = function(t) { for (var e = null, n = 0, i = this.length; n < i; n++) { const r = this[n]; if (r.id === t) { e = r; break; } } return e; }, e; }(Pi)); tr.prototype.allowedEvents_ = { change: 'change', addtrack: 'addtrack', removetrack: 'removetrack' }; for (const er in tr.prototype.allowedEvents_)tr.prototype[`on${er}`] = null; const nr = function(t, e) { for (let n = 0; n < t.length; n++)Object.keys(t[n]).length && e.id !== t[n].id && (t[n].enabled = !1); }; const ir = (function(t) { function e() { let n; let i; const r = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : []; Zn(this, e); for (var o = void 0, s = r.length - 1; s >= 0; s--) if (r[s].enabled) { nr(r, r[s]); break; } if (xn) { o = sn.createElement('custom'); for (const a in tr.prototype)a !== 'constructor' && (o[a] = tr.prototype[a]); for (const l in e.prototype)l !== 'constructor' && (o[l] = e.prototype[l]); } return o = n = ei(this, t.call(this, r, o)), o.changing_ = !1, i = o, ei(n, i); } return ti(e, t), e.prototype.addTrack = function(e) { const n = this; e.enabled && nr(this, e), t.prototype.addTrack.call(this, e), e.addEventListener && e.addEventListener('enabledchange', () => { n.changing_ || (n.changing_ = !0, nr(n, e), n.changing_ = !1, n.trigger('change')); }); }, e; }(tr)); const rr = function(t, e) { for (let n = 0; n < t.length; n++)Object.keys(t[n]).length && e.id !== t[n].id && (t[n].selected = !1); }; const or = (function(t) { function e() { let n; let i; const r = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : []; Zn(this, e); for (var o = void 0, s = r.length - 1; s >= 0; s--) if (r[s].selected) { rr(r, r[s]); break; } if (xn) { o = sn.createElement('custom'); for (const a in tr.prototype)a !== 'constructor' && (o[a] = tr.prototype[a]); for (const l in e.prototype)l !== 'constructor' && (o[l] = e.prototype[l]); } return o = n = ei(this, t.call(this, r, o)), o.changing_ = !1, Object.defineProperty(o, 'selectedIndex', { get() { for (let t = 0; t < this.length; t++) if (this[t].selected) return t; return -1; }, set() {} }), i = o, ei(n, i); } return ti(e, t), e.prototype.addTrack = function(e) { const n = this; e.selected && rr(this, e), t.prototype.addTrack.call(this, e), e.addEventListener && e.addEventListener('selectedchange', () => { n.changing_ || (n.changing_ = !0, rr(n, e), n.changing_ = !1, n.trigger('change')); }); }, e; }(tr)); const sr = (function(t) { function e() { let n; let i; const r = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : []; Zn(this, e); let o = void 0; if (xn) { o = sn.createElement('custom'); for (const s in tr.prototype)s !== 'constructor' && (o[s] = tr.prototype[s]); for (const a in e.prototype)a !== 'constructor' && (o[a] = e.prototype[a]); } return o = n = ei(this, t.call(this, r, o)), i = o, ei(n, i); } return ti(e, t), e.prototype.addTrack = function(e) { if (e.mode === 'disabled' && !e.label) return !1; t.prototype.addTrack.call(this, e), e.addEventListener('modechange', ki(this, function() { this.trigger('change'); })), ['metadata', 'chapters'].indexOf(e.kind) === -1 && e.addEventListener('modechange', ki(this, function() { this.trigger('selectedlanguagechange'); })); }, e; }(tr)); const ar = (function() { function t() { const e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : []; Zn(this, t); let n = this; if (xn) { n = sn.createElement('custom'); for (const i in t.prototype)i !== 'constructor' && (n[i] = t.prototype[i]); }n.trackElements_ = [], Object.defineProperty(n, 'length', { get() { return this.trackElements_.length; } }); for (let r = 0, o = e.length; r < o; r++)n.addTrackElement_(e[r]); if (xn) return n; } return t.prototype.addTrackElement_ = function(t) { const e = this.trackElements_.length; `${e}` in this || Object.defineProperty(this, e, { get() { return this.trackElements_[e]; } }), this.trackElements_.indexOf(t) === -1 && this.trackElements_.push(t); }, t.prototype.getTrackElementByTrack_ = function(t) { for (var e = void 0, n = 0, i = this.trackElements_.length; n < i; n++) if (t === this.trackElements_[n].track) { e = this.trackElements_[n]; break; } return e; }, t.prototype.removeTrackElement_ = function(t) { for (let e = 0, n = this.trackElements_.length; e < n; e++) if (t === this.trackElements_[e]) { this.trackElements_.splice(e, 1); break; } }, t; }()); const lr = (function() { function t(e) { Zn(this, t); let n = this; if (xn) { n = sn.createElement('custom'); for (const i in t.prototype)i !== 'constructor' && (n[i] = t.prototype[i]); } if (t.prototype.setCues_.call(n, e), Object.defineProperty(n, 'length', { get() { return this.length_; } }), xn) return n; } return t.prototype.setCues_ = function(t) { const e = this.length || 0; let n = 0; const i = t.length; this.cues_ = t, this.length_ = t.length; const r = function(t) { `${t}` in this || Object.defineProperty(this, `${t}`, { get() { return this.cues_[t]; } }); }; if (e < i) for (n = e; n < i; n++)r.call(this, n); }, t.prototype.getCueById = function(t) { for (var e = null, n = 0, i = this.length; n < i; n++) { const r = this[n]; if (r.id === t) { e = r; break; } } return e; }, t; }()); const cr = { alternative: 'alternative', captions: 'captions', main: 'main', sign: 'sign', subtitles: 'subtitles', commentary: 'commentary' }; const ur = { alternative: 'alternative', descriptions: 'descriptions', main: 'main', 'main-desc': 'main-desc', translation: 'translation', commentary: 'commentary' }; const hr = { subtitles: 'subtitles', captions: 'captions', descriptions: 'descriptions', chapters: 'chapters', metadata: 'metadata' }; const pr = { disabled: 'disabled', hidden: 'hidden', showing: 'showing' }; const dr = (function(t) { function e() { let n; const i = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {}; Zn(this, e); const r = ei(this, t.call(this)); let o = r; if (xn) { o = sn.createElement('custom'); for (const s in e.prototype)s !== 'constructor' && (o[s] = e.prototype[s]); } const a = { id: i.id || `vjs_track_${q()}`, kind: i.kind || '', label: i.label || '', language: i.language || '' }; for (const l in a)!(function(t) { Object.defineProperty(o, t, { get() { return a[t]; }, set() {} }); }(l)); return n = o, ei(r, n); } return ti(e, t), e; }(Pi)); const fr = function(t) { const e = ['protocol', 'hostname', 'port', 'pathname', 'search', 'hash', 'host']; let n = sn.createElement('a'); n.href = t; const i = n.host === '' && n.protocol !== 'file:'; let r = void 0; i && (r = sn.createElement('div'), r.innerHTML = `<a href="${t}"></a>`, n = r.firstChild, r.setAttribute('style', 'display:none; position:absolute;'), sn.body.appendChild(r)); for (var o = {}, s = 0; s < e.length; s++)o[e[s]] = n[e[s]]; return o.protocol === 'http:' && (o.host = o.host.replace(/:80$/, '')), o.protocol === 'https:' && (o.host = o.host.replace(/:443$/, '')), o.protocol || (o.protocol = tn.location.protocol), i && sn.body.removeChild(r), o; }; const yr = function(t) { if (!t.match(/^https?:\/\//)) { const e = sn.createElement('div'); e.innerHTML = `<a href="${t}">x</a>`, t = e.firstChild.href; } return t; }; const gr = function(t) { if (typeof t === 'string') { const e = /^(\/?)([\s\S]*?)((?:\.{1,2}|[^\/]+?)(\.([^\.\/\?]+)))(?:[\/]*|[\?].*)$/i; const n = e.exec(t); if (n) return n.pop().toLowerCase(); } return ''; }; const vr = function(t) { const e = tn.location; const n = fr(t); return (n.protocol === ':' ? e.protocol : n.protocol) + n.host !== e.protocol + e.host; }; const mr = (Object.freeze || Object)({ parseUrl: fr, getAbsoluteURL: yr, getFileExtension: gr, isCrossOrigin: vr }); var _r = gt; var br = Object.prototype.toString; const Tr = r((t, e) => { function n(t) { return t.replace(/^\s*|\s*$/g, ''); }e = t.exports = n, e.left = function(t) { return t.replace(/^\s*/, ''); }, e.right = function(t) { return t.replace(/\s*$/, ''); }; }); const Cr = vt; var Er = Object.prototype.toString; var wr = Object.prototype.hasOwnProperty; const Sr = function(t) { return Object.prototype.toString.call(t) === '[object Array]'; }; var kr = function(t) { if (!t) return {}; const e = {}; return Cr(Tr(t).split('\n'), (t) => { const n = t.indexOf(':'); const i = Tr(t.slice(0, n)).toLowerCase(); const r = Tr(t.slice(n + 1)); typeof e[i] === 'undefined' ? e[i] = r : Sr(e[i]) ? e[i].push(r) : e[i] = [e[i], r]; }), e; }; var Ir = Tt; var Pr = Object.prototype.hasOwnProperty; const xr = wt; wt.XMLHttpRequest = tn.XMLHttpRequest || It, wt.XDomainRequest = 'withCredentials' in new wt.XMLHttpRequest() ? wt.XMLHttpRequest : tn.XDomainRequest, (function(t, e) { for (let n = 0; n < t.length; n++)e(t[n]); }(['get', 'put', 'post', 'patch', 'head', 'delete'], (t) => { wt[t === 'delete' ? 'del' : t] = function(e, n, i) { return n = Et(e, n, i), n.method = t.toUpperCase(), St(n); }; })); const Dr = function(t, e) { const n = new tn.WebVTT.Parser(tn, tn.vttjs, tn.WebVTT.StringDecoder()); const i = []; n.oncue = function(t) { e.addCue(t); }, n.onparsingerror = function(t) { i.push(t); }, n.onflush = function() { e.trigger({ type: 'loadeddata', target: e }); }, n.parse(t), i.length > 0 && (tn.console && tn.console.groupCollapsed && tn.console.groupCollapsed(`Text Track parsing errors for ${e.src}`), i.forEach((t) => ci.error(t)), tn.console && tn.console.groupEnd && tn.console.groupEnd()), n.flush(); }; const Mr = function(t, e) { const n = { uri: t }; const i = vr(t); i && (n.cors = i), xr(n, ki(this, (t, n, i) => { if (t) return ci.error(t, n); if (e.loaded_ = !0, typeof tn.WebVTT !== 'function') { if (e.tech_) { const r = function() { return Dr(i, e); }; e.tech_.on('vttjsloaded', r), e.tech_.on('vttjserror', () => { ci.error(`vttjs failed to load, stopping trying to process ${e.src}`), e.tech_.off('vttjsloaded', r); }); } } else Dr(i, e); })); }; const Rr = (function(t) { function e() { let n; let i; const r = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {}; if (Zn(this, e), !r.tech) throw new Error('A tech was not provided.'); const o = ot(r, { kind: hr[r.kind] || 'subtitles', language: r.language || r.srclang || '' }); let s = pr[o.mode] || 'disabled'; const a = o.default; o.kind !== 'metadata' && o.kind !== 'chapters' || (s = 'hidden'); const l = n = ei(this, t.call(this, o)); if (l.tech_ = o.tech, xn) for (const c in e.prototype)c !== 'constructor' && (l[c] = e.prototype[c]); l.cues_ = [], l.activeCues_ = []; const u = new lr(l.cues_); const h = new lr(l.activeCues_); let p = !1; const d = ki(l, function() { this.activeCues, p && (this.trigger('cuechange'), p = !1); }); return s !== 'disabled' && l.tech_.ready(() => { l.tech_.on('timeupdate', d); }, !0), Object.defineProperty(l, 'default', { get() { return a; }, set() {} }), Object.defineProperty(l, 'mode', { get() { return s; }, set(t) { const e = this; pr[t] && (s = t, s === 'showing' && this.tech_.ready(() => { e.tech_.on('timeupdate', d); }, !0), this.trigger('modechange')); } }), Object.defineProperty(l, 'cues', { get() { return this.loaded_ ? u : null; }, set() {} }), Object.defineProperty(l, 'activeCues', { get() { if (!this.loaded_) return null; if (this.cues.length === 0) return h; for (var t = this.tech_.currentTime(), e = [], n = 0, i = this.cues.length; n < i; n++) { const r = this.cues[n]; r.startTime <= t && r.endTime >= t ? e.push(r) : r.startTime === r.endTime && r.startTime <= t && r.startTime + 0.5 >= t && e.push(r); } if (p = !1, e.length !== this.activeCues_.length)p = !0; else for (let o = 0; o < e.length; o++) this.activeCues_.indexOf(e[o]) === -1 && (p = !0); return this.activeCues_ = e, h.setCues_(this.activeCues_), h; }, set() {} }), o.src ? (l.src = o.src, Mr(o.src, l)) : l.loaded_ = !0, i = l, ei(n, i); } return ti(e, t), e.prototype.addCue = function(t) { let e = t; if (tn.vttjs && !(t instanceof tn.vttjs.VTTCue)) { e = new tn.vttjs.VTTCue(t.startTime, t.endTime, t.text); for (const n in t)n in e || (e[n] = t[n]); e.id = t.id, e.originalCue_ = t; } for (let i = this.tech_.textTracks(), r = 0; r < i.length; r++)i[r] !== this && i[r].removeCue(e); this.cues_.push(e), this.cues.setCues_(this.cues_); }, e.prototype.removeCue = function(t) { for (let e = this.cues_.length; e--;) { const n = this.cues_[e]; if (n === t || n.originalCue_ && n.originalCue_ === t) { this.cues_.splice(e, 1), this.cues.setCues_(this.cues_); break; } } }, e; }(dr)); Rr.prototype.allowedEvents_ = { cuechange: 'cuechange' }; const Ar = (function(t) { function e() { let n; let i; const r = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {}; Zn(this, e); const o = ot(r, { kind: ur[r.kind] || '' }); const s = n = ei(this, t.call(this, o)); let a = !1; if (xn) for (const l in e.prototype)l !== 'constructor' && (s[l] = e.prototype[l]); return Object.defineProperty(s, 'enabled', { get() { return a; }, set(t) { typeof t === 'boolean' && t !== a && (a = t, this.trigger('enabledchange')); } }), o.enabled && (s.enabled = o.enabled), s.loaded_ = !0, i = s, ei(n, i); } return ti(e, t), e; }(dr)); const Or = (function(t) { function e() { let n; let i; const r = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {}; Zn(this, e); const o = ot(r, { kind: cr[r.kind] || '' }); const s = n = ei(this, t.call(this, o)); let a = !1; if (xn) for (const l in e.prototype)l !== 'constructor' && (s[l] = e.prototype[l]); return Object.defineProperty(s, 'selected', { get() { return a; }, set(t) { typeof t === 'boolean' && t !== a && (a = t, this.trigger('selectedchange')); } }), o.selected && (s.selected = o.selected), i = s, ei(n, i); } return ti(e, t), e; }(dr)); const jr = 0; const Lr = 2; const Nr = (function(t) { function e() { const n = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {}; Zn(this, e); const i = ei(this, t.call(this)); let r = void 0; let o = i; if (xn) { o = sn.createElement('custom'); for (const s in e.prototype)s !== 'constructor' && (o[s] = e.prototype[s]); } const a = new Rr(n); if (o.kind = a.kind, o.src = a.src, o.srclang = a.language, o.label = a.label, o.default = a.default, Object.defineProperty(o, 'readyState', { get() { return r; } }), Object.defineProperty(o, 'track', { get() { return a; } }), r = jr, a.addEventListener('loadeddata', () => { r = Lr, o.trigger({ type: 'load', target: o }); }), xn) { let l; return l = o, ei(i, l); } return i; } return ti(e, t), e; }(Pi)); Nr.prototype.allowedEvents_ = { load: 'load' }, Nr.NONE = jr, Nr.LOADING = 1, Nr.LOADED = Lr, Nr.ERROR = 3; const Br = { audio: { ListClass: ir, TrackClass: Ar, capitalName: 'Audio' }, video: { ListClass: or, TrackClass: Or, capitalName: 'Video' }, text: { ListClass: sr, TrackClass: Rr, capitalName: 'Text' } }; Object.keys(Br).forEach((t) => { Br[t].getterName = `${t}Tracks`, Br[t].privateName = `${t}Tracks_`; }); const Fr = { remoteText: { ListClass: sr, TrackClass: Rr, capitalName: 'RemoteText', getterName: 'remoteTextTracks', privateName: 'remoteTextTracks_' }, remoteTextEl: { ListClass: ar, TrackClass: Nr, capitalName: 'RemoteTextTrackEls', getterName: 'remoteTextTrackEls', privateName: 'remoteTextTrackEls_' } }; var Vr = ot(Br, Fr); Fr.names = Object.keys(Fr), Br.names = Object.keys(Br), Vr.names = [].concat(Fr.names).concat(Br.names); var Hr = Object.create || (function() { function t() {} return function(e) { if (arguments.length !== 1) throw new Error('Object.create shim only accepts one parameter.'); return t.prototype = e, new t(); }; }()); Pt.prototype = Hr(Error.prototype), Pt.prototype.constructor = Pt, Pt.Errors = { BadSignature: { code: 0, message: 'Malformed WebVTT signature.' }, BadTimeStamp: { code: 1, message: 'Malformed time stamp.' } }, Dt.prototype = { set(t, e) { this.get(t) || e === '' || (this.values[t] = e); }, get(t, e, n) { return n ? this.has(t) ? this.values[t] : e[n] : this.has(t) ? this.values[t] : e; }, has(t) { return t in this.values; }, alt(t, e, n) { for (let i = 0; i < n.length; ++i) if (e === n[i]) { this.set(t, e); break; } }, integer(t, e) { /^-?\d+$/.test(e) && this.set(t, parseInt(e, 10)); }, percent(t, e) { return !!(e.match(/^([\d]{1,3})(\.[\d]*)?%$/) && (e = parseFloat(e)) >= 0 && e <= 100) && (this.set(t, e), !0); } }; var Ur = { '&amp;': '&', '&lt;': '<', '&gt;': '>', '&lrm;': '‎', '&rlm;': '‏', '&nbsp;': ' ' }; var qr = { c: 'span', i: 'i', b: 'b', u: 'u', ruby: 'ruby', rt: 'rt', v: 'span', lang: 'span' }; var zr = { v: 'title', lang: 'lang' }; var Wr = { rt: 'ruby' }; var Kr = [[1470, 1470], [1472, 1472], [1475, 1475], [1478, 1478], [1488, 1514], [1520, 1524], [1544, 1544], [1547, 1547], [1549, 1549], [1563, 1563], [1566, 1610], [1645, 1647], [1649, 1749], [1765, 1766], [1774, 1775], [1786, 1805], [1807, 1808], [1810, 1839], [1869, 1957], [1969, 1969], [1984, 2026], [2036, 2037], [2042, 2042], [2048, 2069], [2074, 2074], [2084, 2084], [2088, 2088], [2096, 2110], [2112, 2136], [2142, 2142], [2208, 2208], [2210, 2220], [8207, 8207], [64285, 64285], [64287, 64296], [64298, 64310], [64312, 64316], [64318, 64318], [64320, 64321], [64323, 64324], [64326, 64449], [64467, 64829], [64848, 64911], [64914, 64967], [65008, 65020], [65136, 65140], [65142, 65276], [67584, 67589], [67592, 67592], [67594, 67637], [67639, 67640], [67644, 67644], [67647, 67669], [67671, 67679], [67840, 67867], [67872, 67897], [67903, 67903], [67968, 68023], [68030, 68031], [68096, 68096], [68112, 68115], [68117, 68119], [68121, 68147], [68160, 68167], [68176, 68184], [68192, 68223], [68352, 68405], [68416, 68437], [68440, 68466], [68472, 68479], [68608, 68680], [126464, 126467], [126469, 126495], [126497, 126498], [126500, 126500], [126503, 126503], [126505, 126514], [126516, 126519], [126521, 126521], [126523, 126523], [126530, 126530], [126535, 126535], [126537, 126537], [126539, 126539], [126541, 126543], [126545, 126546], [126548, 126548], [126551, 126551], [126553, 126553], [126555, 126555], [126557, 126557], [126559, 126559], [126561, 126562], [126564, 126564], [126567, 126570], [126572, 126578], [126580, 126583], [126585, 126588], [126590, 126590], [126592, 126601], [126603, 126619], [126625, 126627], [126629, 126633], [126635, 126651], [1114109, 1114109]]; Nt.prototype.applyStyles = function(t, e) { e = e || this.div; for (const n in t)t.hasOwnProperty(n) && (e.style[n] = t[n]); }, Nt.prototype.formatStyle = function(t, e) { return t === 0 ? 0 : t + e; }, Bt.prototype = Hr(Nt.prototype), Bt.prototype.constructor = Bt, Ft.prototype.move = function(t, e) { switch (e = e !== undefined ? e : this.lineHeight, t) { case '+x': this.left += e, this.right += e; break; case '-x': this.left -= e, this.right -= e; break; case '+y': this.top += e, this.bottom += e; break; case '-y': this.top -= e, this.bottom -= e; } }, Ft.prototype.overlaps = function(t) { return this.left < t.right && this.right > t.left && this.top < t.bottom && this.bottom > t.top; }, Ft.prototype.overlapsAny = function(t) { for (let e = 0; e < t.length; e++) if (this.overlaps(t[e])) return !0; return !1; }, Ft.prototype.within = function(t) { return this.top >= t.top && this.bottom <= t.bottom && this.left >= t.left && this.right <= t.right; }, Ft.prototype.overlapsOppositeAxis = function(t, e) { switch (e) { case '+x': return this.left < t.left; case '-x': return this.right > t.right; case '+y': return this.top < t.top; case '-y': return this.bottom > t.bottom; } }, Ft.prototype.intersectPercentage = function(t) { return Math.max(0, Math.min(this.right, t.right) - Math.max(this.left, t.left)) * Math.max(0, Math.min(this.bottom, t.bottom) - Math.max(this.top, t.top)) / (this.height * this.width); }, Ft.prototype.toCSSCompatValues = function(t) { return { top: this.top - t.top, bottom: t.bottom - this.bottom, left: this.left - t.left, right: t.right - this.right, height: this.height, width: this.width }; }, Ft.getSimpleBoxPosition = function(t) { const e = t.div ? t.div.offsetHeight : t.tagName ? t.offsetHeight : 0; const n = t.div ? t.div.offsetWidth : t.tagName ? t.offsetWidth : 0; const i = t.div ? t.div.offsetTop : t.tagName ? t.offsetTop : 0; return t = t.div ? t.div.getBoundingClientRect() : t.tagName ? t.getBoundingClientRect() : t, { left: t.left, right: t.right, top: t.top || i, height: t.height || e, bottom: t.bottom || i + (t.height || e), width: t.width || n }; }, Ht.StringDecoder = function() { return { decode(t) { if (!t) return ''; if (typeof t !== 'string') throw new Error('Error - expected string data.'); return decodeURIComponent(encodeURIComponent(t)); } }; }, Ht.convertCueToDOMTree = function(t, e) { return t && e ? At(t, e) : null; }; Ht.processCues = function(t, e, n) { if (!t || !e || !n) return null; for (;n.firstChild;)n.removeChild(n.firstChild); const i = t.document.createElement('div'); if (i.style.position = 'absolute', i.style.left = '0', i.style.right = '0', i.style.top = '0', i.style.bottom = '0', i.style.margin = '1.5%', n.appendChild(i), (function(t) { for (let e = 0; e < t.length; e++) if (t[e].hasBeenReset || !t[e].displayState) return !0; return !1; }(e))) { const r = []; const o = Ft.getSimpleBoxPosition(i); const s = Math.round(0.05 * o.height * 100) / 100; const a = { font: `${s}px sans-serif` }; !(function() { for (var n, s, l = 0; l < e.length; l++)s = e[l], n = new Bt(t, s, a), i.appendChild(n.div), Vt(t, n, o, r), s.displayState = n.div, r.push(Ft.getSimpleBoxPosition(n)); }()); } else for (let l = 0; l < e.length; l++)i.appendChild(e[l].displayState); }, Ht.Parser = function(t, e, n) { n || (n = e, e = {}), e || (e = {}), this.window = t, this.vttjs = e, this.state = 'INITIAL', this.buffer = '', this.decoder = n || new TextDecoder('utf8'), this.regionList = []; }, Ht.Parser.prototype = { reportOrThrowError(t) { if (!(t instanceof Pt)) throw t; this.onparsingerror && this.onparsingerror(t); }, parse(t) { function e() { for (var t = r.buffer, e = 0; e < t.length && t[e] !== '\r' && t[e] !== '\n';)++e; const n = t.substr(0, e); return t[e] === '\r' && ++e, t[e] === '\n' && ++e, r.buffer = t.substr(e), n; } function n(t) { const e = new Dt(); if (Mt(t, (t, n) => { switch (t) { case 'id': e.set(t, n); break; case 'width': e.percent(t, n); break; case 'lines': e.integer(t, n); break; case 'regionanchor': case 'viewportanchor': var i = n.split(','); if (i.length !== 2) break; var r = new Dt(); if (r.percent('x', i[0]), r.percent('y', i[1]), !r.has('x') || !r.has('y')) break; e.set(`${t}X`, r.get('x')), e.set(`${t}Y`, r.get('y')); break; case 'scroll': e.alt(t, n, ['up']); } }, /=/, /\s/), e.has('id')) { const n = new (r.vttjs.VTTRegion || r.window.VTTRegion)(); n.width = e.get('width', 100), n.lines = e.get('lines', 3), n.regionAnchorX = e.get('regionanchorX', 0), n.regionAnchorY = e.get('regionanchorY', 100), n.viewportAnchorX = e.get('viewportanchorX', 0), n.viewportAnchorY = e.get('viewportanchorY', 100), n.scroll = e.get('scroll', ''), r.onregion && r.onregion(n), r.regionList.push({ id: e.get('id'), region: n }); } } function i(t) { const e = new Dt(); Mt(t, (t, n) => { switch (t) { case 'MPEGT': e.integer(`${t}S`, n); break; case 'LOCA': e.set(`${t}L`, xt(n)); } }, /[^\d]:/, /,/), r.ontimestampmap && r.ontimestampmap({ MPEGTS: e.get('MPEGTS'), LOCAL: e.get('LOCAL') }); } var r = this; t && (r.buffer += r.decoder.decode(t, { stream: !0 })); try { let o; if (r.state === 'INITIAL') { if (!/\r\n|\n/.test(r.buffer)) return this; o = e(); const s = o.match(/^WEBVTT([ \t].*)?$/); if (!s || !s[0]) throw new Pt(Pt.Errors.BadSignature); r.state = 'HEADER'; } for (let a = !1; r.buffer;) { if (!/\r\n|\n/.test(r.buffer)) return this; switch (a ? a = !1 : o = e(), r.state) { case 'HEADER': /:/.test(o) ? (function(t) { t.match(/X-TIMESTAMP-MAP/) ? Mt(t, (t, e) => { switch (t) { case 'X-TIMESTAMP-MAP': i(e); } }, /=/) : Mt(t, (t, e) => { switch (t) { case 'Region': n(e); } }, /:/); }(o)) : o || (r.state = 'ID'); continue; case 'NOTE': o || (r.state = 'ID'); continue; case 'ID': if (/^NOTE($|[ \t])/.test(o)) { r.state = 'NOTE'; break; } if (!o) continue; if (r.cue = new (r.vttjs.VTTCue || r.window.VTTCue)(0, 0, ''), r.state = 'CUE', o.indexOf('--\x3e') === -1) { r.cue.id = o; continue; } case 'CUE': try { Rt(o, r.cue, r.regionList); } catch (c) { r.reportOrThrowError(c), r.cue = null, r.state = 'BADCUE'; continue; }r.state = 'CUETEXT'; continue; case 'CUETEXT': var l = o.indexOf('--\x3e') !== -1; if (!o || l && (a = !0)) { r.oncue && r.oncue(r.cue), r.cue = null, r.state = 'ID'; continue; }r.cue.text && (r.cue.text += '\n'), r.cue.text += o; continue; case 'BADCUE': o || (r.state = 'ID'); continue; } } } catch (c) { r.reportOrThrowError(c), r.state === 'CUETEXT' && r.cue && r.oncue && r.oncue(r.cue), r.cue = null, r.state = r.state === 'INITIAL' ? 'BADWEBVTT' : 'BADCUE'; } return this; }, flush() { const t = this; try { if (t.buffer += t.decoder.decode(), (t.cue || t.state === 'HEADER') && (t.buffer += '\n\n', t.parse()), t.state === 'INITIAL') throw new Pt(Pt.Errors.BadSignature); } catch (e) { t.reportOrThrowError(e); } return t.onflush && t.onflush(), this; } }; const Qr = Ht; var Xr = 'auto'; var $r = { '': !0, lr: !0, rl: !0 }; var Gr = { start: !0, middle: !0, end: !0, left: !0, right: !0 }; Wt.prototype.getCueAsHTML = function() { return WebVTT.convertCueToDOMTree(window, this.text); }; const Yr = Wt; var Jr = { '': !0, up: !0 }; const Zr = Xt; const to = r((t) => { const e = t.exports = { WebVTT: Qr, VTTCue: Yr, VTTRegion: Zr }; tn.vttjs = e, tn.WebVTT = e.WebVTT; const n = e.VTTCue; const i = e.VTTRegion; const r = tn.VTTCue; const o = tn.VTTRegion; e.shim = function() { tn.VTTCue = n, tn.VTTRegion = i; }, e.restore = function() { tn.VTTCue = r, tn.VTTRegion = o; }, tn.VTTCue || e.shim(); }); const eo = (function(t) {
 function e(n) { const i = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; const r = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function() {}; Zn(this, e), i.reportTouchActivity = !1; const o = ei(this, t.call(this, n, i, r)); return o.hasStarted_ = !1, o.on('playing', function() { this.hasStarted_ = !0; }), o.on('loadstart', function() { this.hasStarted_ = !1; }), Vr.names.forEach((t) => { const e = Vr[t]; i && i[e.getterName] && (o[e.privateName] = i[e.getterName]); }), o.featuresProgressEvents || o.manualProgressOn(), o.featuresTimeupdateEvents || o.manualTimeUpdatesOn(), ['Text', 'Audio', 'Video'].forEach((t) => { !1 === i[`native${t}Tracks`] && (o[`featuresNative${t}Tracks`] = !1); }), !1 === i.nativeCaptions || !1 === i.nativeTextTracks ? o.featuresNativeTextTracks = !1 : !0 !== i.nativeCaptions && !0 !== i.nativeTextTracks || (o.featuresNativeTextTracks = !0), o.featuresNativeTextTracks || o.emulateTextTracks(), o.autoRemoteTextTracks_ = new Vr.text.ListClass(), o.initTrackListeners(), i.nativeControlsForTouch || o.emitTapEvents(), o.constructor && (o.name_ = o.constructor.name || 'Unknown Tech'), o; } return ti(e, t), e.prototype.manualProgressOn = function() { this.on('durationchange', this.onDurationChange), this.manualProgress = !0, this.one('ready', this.trackProgress); }, e.prototype.manualProgressOff = function() { this.manualProgress = !1, this.stopTrackingProgress(), this.off('durationchange', this.onDurationChange); }, e.prototype.trackProgress = function(t) { this.stopTrackingProgress(), this.progressInterval = this.setInterval(ki(this, function() { const t = this.bufferedPercent(); this.bufferedPercent_ !== t && this.trigger('progress'), this.bufferedPercent_ = t, t === 1 && this.stopTrackingProgress(); }), 500); }, e.prototype.onDurationChange = function(t) { this.duration_ = this.duration(); }, e.prototype.buffered = function() { return ut(0, 0); }, e.prototype.bufferedPercent = function() { return ht(this.buffered(), this.duration_); }, e.prototype.stopTrackingProgress = function() { this.clearInterval(this.progressInterval); }, e.prototype.manualTimeUpdatesOn = function() { this.manualTimeUpdates = !0, this.on('play', this.trackCurrentTime), this.on('pause', this.stopTrackingCurrentTime); }, e.prototype.manualTimeUpdatesOff = function() { this.manualTimeUpdates = !1, this.stopTrackingCurrentTime(), this.off('play', this.trackCurrentTime), this.off('pause', this.stopTrackingCurrentTime); }, e.prototype.trackCurrentTime = function() { this.currentTimeInterval && this.stopTrackingCurrentTime(), this.currentTimeInterval = this.setInterval(function() { this.trigger({ type: 'timeupdate', target: this, manuallyTriggered: !0 }); }, 250); }, e.prototype.stopTrackingCurrentTime = function() { this.clearInterval(this.currentTimeInterval), this.trigger({ type: 'timeupdate', target: this, manuallyTriggered: !0 }); }, e.prototype.dispose = function() { this.clearTracks(Br.names), this.manualProgress && this.manualProgressOff(), this.manualTimeUpdates && this.manualTimeUpdatesOff(), t.prototype.dispose.call(this); }, e.prototype.clearTracks = function(t) { const e = this; t = [].concat(t), t.forEach((t) => { for (let n = e[`${t}Tracks`]() || [], i = n.length; i--;) { const r = n[i]; t === 'text' && e.removeRemoteTextTrack(r), n.removeTrack(r); } }); }, e.prototype.cleanupAutoTextTracks = function() { for (let t = this.autoRemoteTextTracks_ || [], e = t.length; e--;) { const n = t[e]; this.removeRemoteTextTrack(n); } }, e.prototype.reset = function() {}, e.prototype.error = function(t) { return t !== undefined && (this.error_ = new pt(t), this.trigger('error')), this.error_; }, e.prototype.played = function() { return this.hasStarted_ ? ut(0, 0) : ut(); }, e.prototype.setCurrentTime = function() { this.manualTimeUpdates && this.trigger({ type: 'timeupdate', target: this, manuallyTriggered: !0 }); }, e.prototype.initTrackListeners = function() { const t = this; Br.names.forEach((e) => { const n = Br[e]; const i = function() { t.trigger(`${e}trackchange`); }; const r = t[n.getterName](); r.addEventListener('removetrack', i), r.addEventListener('addtrack', i), t.on('dispose', () => { r.removeEventListener('removetrack', i), r.removeEventListener('addtrack', i); }); }); }, e.prototype.addWebVttScript_ = function() { const t = this; if (!tn.WebVTT) if (sn.body.contains(this.el())) { if (!this.options_['vtt.js'] && c(to) && Object.keys(to).length > 0) return void this.trigger('vttjsloaded'); const e = sn.createElement('script'); e.src = this.options_['vtt.js'] || 'https://vjs.zencdn.net/vttjs/0.12.4/vtt.min.js', e.onload = function() { t.trigger('vttjsloaded'); }, e.onerror = function() { t.trigger('vttjserror'); }, this.on('dispose', () => { e.onload = null, e.onerror = null; }), tn.WebVTT = !0, this.el().parentNode.appendChild(e); } else this.ready(this.addWebVttScript_); }, e.prototype.emulateTextTracks = function() { const t = this; const e = this.textTracks(); const n = this.remoteTextTracks(); const i = function(t) { return e.addTrack(t.track); }; const r = function(t) { return e.removeTrack(t.track); }; n.on('addtrack', i), n.on('removetrack', r), this.addWebVttScript_(); const o = function() { return t.trigger('texttrackchange'); }; const s = function() { o(); for (let t = 0; t < e.length; t++) { const n = e[t]; n.removeEventListener('cuechange', o), n.mode === 'showing' && n.addEventListener('cuechange', o); } }; s(), e.addEventListener('change', s), e.addEventListener('addtrack', s), e.addEventListener('removetrack', s), this.on('dispose', () => { n.off('addtrack', i), n.off('removetrack', r), e.removeEventListener('change', s), e.removeEventListener('addtrack', s), e.removeEventListener('removetrack', s); for (let t = 0; t < e.length; t++) { e[t].removeEventListener('cuechange', o); } }); }, e.prototype.addTextTrack = function(t, e, n) { if (!t) throw new Error('TextTrack kind is required but was not provided'); return $t(this, t, e, n); }, e.prototype.createRemoteTextTrack = function(t) { const e = ot(t, { tech: this }); return new Fr.remoteTextEl.TrackClass(e); }, e.prototype.addRemoteTextTrack = function() {
 const t = this; const e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {}; let n = arguments[1]; const i = this.createRemoteTextTrack(e);
return !0 !== n && !1 !== n && (ci.warn('Calling addRemoteTextTrack without explicitly setting the "manualCleanup" parameter to `true` is deprecated and default to `false` in future version of video.js'), n = !0), this.remoteTextTrackEls().addTrackElement_(i), this.remoteTextTracks().addTrack(i.track), !0 !== n && this.ready(() => t.autoRemoteTextTracks_.addTrack(i.track)), i;
}, e.prototype.removeRemoteTextTrack = function(t) { const e = this.remoteTextTrackEls().getTrackElementByTrack_(t); this.remoteTextTrackEls().removeTrackElement_(e), this.remoteTextTracks().removeTrack(t), this.autoRemoteTextTracks_.removeTrack(t); }, e.prototype.getVideoPlaybackQuality = function() { return {}; }, e.prototype.setPoster = function() {}, e.prototype.playsinline = function() {}, e.prototype.setPlaysinline = function() {}, e.prototype.canPlayType = function() { return ''; }, e.canPlayType = function() { return ''; }, e.canPlaySource = function(t, n) { return e.canPlayType(t.type); }, e.isTech = function(t) { return t.prototype instanceof e || t instanceof e || t === e; }, e.registerTech = function(t, n) { if (e.techs_ || (e.techs_ = {}), !e.isTech(n)) throw new Error(`Tech ${t} must be a Tech`); if (!e.canPlayType) throw new Error('Techs must have a static canPlayType method on them'); if (!e.canPlaySource) throw new Error('Techs must have a static canPlaySource method on them'); return t = it(t), e.techs_[t] = n, t !== 'Tech' && e.defaultTechOrder_.push(t), n; }, e.getTech = function(t) { if (t) return t = it(t), e.techs_ && e.techs_[t] ? e.techs_[t] : tn && tn.videojs && tn.videojs[t] ? (ci.warn(`The ${t} tech was added to the videojs object when it should be registered using videojs.registerTech(name, tech)`), tn.videojs[t]) : void 0; }, e;
}(Bi)); Vr.names.forEach((t) => { const e = Vr[t]; eo.prototype[e.getterName] = function() { return this[e.privateName] = this[e.privateName] || new e.ListClass(), this[e.privateName]; }; }), eo.prototype.featuresVolumeControl = !0, eo.prototype.featuresMuteControl = !0, eo.prototype.featuresFullscreenResize = !1, eo.prototype.featuresPlaybackRate = !1, eo.prototype.featuresProgressEvents = !1, eo.prototype.featuresTimeupdateEvents = !1, eo.prototype.featuresNativeTextTracks = !1, eo.withSourceHandlers = function(t) { t.registerSourceHandler = function(e, n) { let i = t.sourceHandlers; i || (i = t.sourceHandlers = []), n === undefined && (n = i.length), i.splice(n, 0, e); }, t.canPlayType = function(e) { for (let n = t.sourceHandlers || [], i = void 0, r = 0; r < n.length; r++) if (i = n[r].canPlayType(e)) return i; return ''; }, t.selectSourceHandler = function(e, n) { for (let i = t.sourceHandlers || [], r = 0; r < i.length; r++) if (i[r].canHandleSource(e, n)) return i[r]; return null; }, t.canPlaySource = function(e, n) { const i = t.selectSourceHandler(e, n); return i ? i.canHandleSource(e, n) : ''; }, ['seekable', 'duration'].forEach(function(t) { const e = this[t]; typeof e === 'function' && (this[t] = function() { return this.sourceHandler_ && this.sourceHandler_[t] ? this.sourceHandler_[t].apply(this.sourceHandler_, arguments) : e.apply(this, arguments); }); }, t.prototype), t.prototype.setSource = function(e) { let n = t.selectSourceHandler(e, this.options_); n || (t.nativeSourceHandler ? n = t.nativeSourceHandler : ci.error('No source hander found for the current source.')), this.disposeSourceHandler(), this.off('dispose', this.disposeSourceHandler), n !== t.nativeSourceHandler && (this.currentSource_ = e), this.sourceHandler_ = n.handleSource(e, this, this.options_), this.on('dispose', this.disposeSourceHandler); }, t.prototype.disposeSourceHandler = function() { this.currentSource_ && (this.clearTracks(['audio', 'video']), this.currentSource_ = null), this.cleanupAutoTextTracks(), this.sourceHandler_ && (this.sourceHandler_.dispose && this.sourceHandler_.dispose(), this.sourceHandler_ = null); }; }, Bi.registerComponent('Tech', eo), eo.registerTech('Tech', eo), eo.defaultTechOrder_ = []; var no = {}; const io = { buffered: 1, currentTime: 1, duration: 1, seekable: 1, played: 1 }; const ro = { setCurrentTime: 1 }; const oo = function Lh(t) { if (Array.isArray(t)) { let e = []; t.forEach((t) => { t = Lh(t), Array.isArray(t) ? e = e.concat(t) : l(t) && e.push(t); }), t = e; } else t = typeof t === 'string' && t.trim() ? [{ src: t }] : l(t) && typeof t.src === 'string' && t.src && t.src.trim() ? [t] : []; return t; }; const so = (function(t) { function e(n, i, r) { Zn(this, e); const o = ot({ createEl: !1 }, i); const s = ei(this, t.call(this, n, o, r)); if (i.playerOptions.sources && i.playerOptions.sources.length !== 0)n.src(i.playerOptions.sources); else for (let a = 0, l = i.playerOptions.techOrder; a < l.length; a++) { const c = it(l[a]); let u = eo.getTech(c); if (c || (u = Bi.getComponent(c)), u && u.isSupported()) { n.loadTech_(c); break; } } return s; } return ti(e, t), e; }(Bi)); Bi.registerComponent('MediaLoader', so); const ao = (function(t) {
 function e(n, i) { Zn(this, e); const r = ei(this, t.call(this, n, i)); return r.emitTapEvents(), r.enable(), r; } return ti(e, t), e.prototype.createEl = function() {
 const e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'div'; let n = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; let
i = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {}; n = a({ innerHTML: '<span aria-hidden="true" class="vjs-icon-placeholder"></span>', className: this.buildCSSClass(), tabIndex: 0 }, n), e === 'button' && ci.error(`Creating a ClickableComponent with an HTML element of ${e} is not supported; use a Button instead.`), i = a({ role: 'button', 'aria-live': 'polite' }, i), this.tabIndex_ = n.tabIndex; const r = t.prototype.createEl.call(this, e, n, i); return this.createControlTextEl(r), r;
}, e.prototype.dispose = function() { this.controlTextEl_ = null, t.prototype.dispose.call(this); }, e.prototype.createControlTextEl = function(t) { return this.controlTextEl_ = b('span', { className: 'vjs-control-text' }), t && t.appendChild(this.controlTextEl_), this.controlText(this.controlText_, t), this.controlTextEl_; }, e.prototype.controlText = function(t) { const e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.el(); if (t === undefined) return this.controlText_ || 'Need Text'; const n = this.localize(t); this.controlText_ = t, T(this.controlTextEl_, n), this.nonIconControl || e.setAttribute('title', n); }, e.prototype.buildCSSClass = function() { return `vjs-control vjs-button ${t.prototype.buildCSSClass.call(this)}`; }, e.prototype.enable = function() { this.enabled_ || (this.enabled_ = !0, this.removeClass('vjs-disabled'), this.el_.setAttribute('aria-disabled', 'false'), typeof this.tabIndex_ !== 'undefined' && this.el_.setAttribute('tabIndex', this.tabIndex_), this.on(['tap', 'click'], this.handleClick), this.on('focus', this.handleFocus), this.on('blur', this.handleBlur)); }, e.prototype.disable = function() { this.enabled_ = !1, this.addClass('vjs-disabled'), this.el_.setAttribute('aria-disabled', 'true'), typeof this.tabIndex_ !== 'undefined' && this.el_.removeAttribute('tabIndex'), this.off(['tap', 'click'], this.handleClick), this.off('focus', this.handleFocus), this.off('blur', this.handleBlur); }, e.prototype.handleClick = function(t) {}, e.prototype.handleFocus = function(t) { G(sn, 'keydown', ki(this, this.handleKeyPress)); }, e.prototype.handleKeyPress = function(e) { e.which === 32 || e.which === 13 ? (e.preventDefault(), this.trigger('click')) : t.prototype.handleKeyPress && t.prototype.handleKeyPress.call(this, e); }, e.prototype.handleBlur = function(t) { Y(sn, 'keydown', ki(this, this.handleKeyPress)); }, e;
}(Bi)); Bi.registerComponent('ClickableComponent', ao); const lo = (function(t) { function e(n, i) { Zn(this, e); const r = ei(this, t.call(this, n, i)); return r.update(), n.on('posterchange', ki(r, r.update)), r; } return ti(e, t), e.prototype.dispose = function() { this.player().off('posterchange', this.update), t.prototype.dispose.call(this); }, e.prototype.createEl = function() { const t = b('div', { className: 'vjs-poster', tabIndex: -1 }); if (!On) { this.fallbackImg_ = b('img'); const e = this.player().height() || parseInt(this.player().el().style.height); this.player().width() || parseInt(this.player().el().style.width); this.fallbackImg_.onload = function() { this.width; this.height > e && (this.style.maxHeight = `${e}px`, this.style.width = 'auto'); }; const n = b('div'); const i = b('span'); i.appendChild(this.fallbackImg_), n.appendChild(i), t.appendChild(n); } return t; }, e.prototype.update = function(t) { const e = this.player().poster(); this.setSrc(e), e ? this.show() : this.hide(); }, e.prototype.setSrc = function(t) { if (this.fallbackImg_) this.fallbackImg_.src = t; else { let e = ''; t && (e = `url("${t}")`), this.el_.style.backgroundImage = e; } }, e.prototype.handleClick = function(t) { this.player_.controls() && (this.player_.paused() ? this.player_.play() : this.player_.pause()); }, e; }(ao)); Bi.registerComponent('PosterImage', lo); const co = { monospace: 'monospace', sansSerif: 'sans-serif', serif: 'serif', monospaceSansSerif: '"Andale Mono", "Lucida Console", monospace', monospaceSerif: '"Courier New", monospace', proportionalSansSerif: 'sans-serif', proportionalSerif: 'serif', casual: '"Comic Sans MS", Impact, fantasy', script: '"Monotype Corsiva", cursive', smallcaps: '"Andale Mono", "Lucida Console", monospace, sans-serif' }; const uo = (function(t) { function e(n, i, r) { Zn(this, e); const o = ei(this, t.call(this, n, i, r)); return n.on('loadstart', ki(o, o.toggleDisplay)), n.on('texttrackchange', ki(o, o.updateDisplay)), n.on('loadstart', ki(o, o.preselectTrack)), n.ready(ki(o, function() { if (n.tech_ && n.tech_.featuresNativeTextTracks) return void this.hide(); n.on('fullscreenchange', ki(this, this.updateDisplay)); for (let t = this.options_.playerOptions.tracks || [], e = 0; e < t.length; e++) this.player_.addRemoteTextTrack(t[e], !0); this.preselectTrack(); })), o; } return ti(e, t), e.prototype.preselectTrack = function() { for (var t = { captions: 1, subtitles: 1 }, e = this.player_.textTracks(), n = this.player_.cache_.selectedLanguage, i = void 0, r = void 0, o = void 0, s = 0; s < e.length; s++) { const a = e[s]; n && n.enabled && n.language === a.language ? a.kind === n.kind ? o = a : o || (o = a) : n && !n.enabled ? (o = null, i = null, r = null) : a.default && (a.kind !== 'descriptions' || i ? a.kind in t && !r && (r = a) : i = a); }o ? o.mode = 'showing' : r ? r.mode = 'showing' : i && (i.mode = 'showing'); }, e.prototype.toggleDisplay = function() { this.player_.tech_ && this.player_.tech_.featuresNativeTextTracks ? this.hide() : this.show(); }, e.prototype.createEl = function() { return t.prototype.createEl.call(this, 'div', { className: 'vjs-text-track-display' }, { 'aria-live': 'off', 'aria-atomic': 'true' }); }, e.prototype.clearDisplay = function() { typeof tn.WebVTT === 'function' && tn.WebVTT.processCues(tn, [], this.el_); }, e.prototype.updateDisplay = function() { const t = this.player_.textTracks(); this.clearDisplay(); for (var e = null, n = null, i = t.length; i--;) { const r = t[i]; r.mode === 'showing' && (r.kind === 'descriptions' ? e = r : n = r); }n ? (this.getAttribute('aria-live') !== 'off' && this.setAttribute('aria-live', 'off'), this.updateForTrack(n)) : e && (this.getAttribute('aria-live') !== 'assertive' && this.setAttribute('aria-live', 'assertive'), this.updateForTrack(e)); }, e.prototype.updateForTrack = function(t) { if (typeof tn.WebVTT === 'function' && t.activeCues) { for (var e = this.player_.textTrackSettings.getValues(), n = [], i = 0; i < t.activeCues.length; i++)n.push(t.activeCues[i]); tn.WebVTT.processCues(tn, n, this.el_); for (let r = n.length; r--;) { const o = n[r]; if (o) { const s = o.displayState; if (e.color && (s.firstChild.style.color = e.color), e.textOpacity && re(s.firstChild, 'color', ie(e.color || '#fff', e.textOpacity)), e.backgroundColor && (s.firstChild.style.backgroundColor = e.backgroundColor), e.backgroundOpacity && re(s.firstChild, 'backgroundColor', ie(e.backgroundColor || '#000', e.backgroundOpacity)), e.windowColor && (e.windowOpacity ? re(s, 'backgroundColor', ie(e.windowColor, e.windowOpacity)) : s.style.backgroundColor = e.windowColor), e.edgeStyle && (e.edgeStyle === 'dropshadow' ? s.firstChild.style.textShadow = '2px 2px 3px #222, 2px 2px 4px #222, 2px 2px 5px #222' : e.edgeStyle === 'raised' ? s.firstChild.style.textShadow = '1px 1px #222, 2px 2px #222, 3px 3px #222' : e.edgeStyle === 'depressed' ? s.firstChild.style.textShadow = '1px 1px #ccc, 0 1px #ccc, -1px -1px #222, 0 -1px #222' : e.edgeStyle === 'uniform' && (s.firstChild.style.textShadow = '0 0 4px #222, 0 0 4px #222, 0 0 4px #222, 0 0 4px #222')), e.fontPercent && e.fontPercent !== 1) { const a = tn.parseFloat(s.style.fontSize); s.style.fontSize = `${a * e.fontPercent}px`, s.style.height = 'auto', s.style.top = 'auto', s.style.bottom = '2px'; }e.fontFamily && e.fontFamily !== 'default' && (e.fontFamily === 'small-caps' ? s.firstChild.style.fontVariant = 'small-caps' : s.firstChild.style.fontFamily = co[e.fontFamily]); } } } }, e; }(Bi)); Bi.registerComponent('TextTrackDisplay', uo); const ho = (function(t) { function e() { return Zn(this, e), ei(this, t.apply(this, arguments)); } return ti(e, t), e.prototype.createEl = function() { return t.prototype.createEl.call(this, 'div', { className: 'vjs-loading-spinner', dir: 'ltr' }); }, e; }(Bi)); Bi.registerComponent('LoadingSpinner', ho); const po = (function(t) { function e() { return Zn(this, e), ei(this, t.apply(this, arguments)); } return ti(e, t), e.prototype.createEl = function(t) { let e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; let n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {}; t = 'button', e = a({ innerHTML: '<span aria-hidden="true" class="vjs-icon-placeholder"></span>', className: this.buildCSSClass() }, e), n = a({ type: 'button', 'aria-live': 'polite' }, n); const i = Bi.prototype.createEl.call(this, t, e, n); return this.createControlTextEl(i), i; }, e.prototype.addChild = function(t) { const e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; const n = this.constructor.name; return ci.warn(`Adding an actionable (user controllable) child to a Button (${n}) is not supported; use a ClickableComponent instead.`), Bi.prototype.addChild.call(this, t, e); }, e.prototype.enable = function() { t.prototype.enable.call(this), this.el_.removeAttribute('disabled'); }, e.prototype.disable = function() { t.prototype.disable.call(this), this.el_.setAttribute('disabled', 'disabled'); }, e.prototype.handleKeyPress = function(e) { e.which !== 32 && e.which !== 13 && t.prototype.handleKeyPress.call(this, e); }, e; }(ao)); Bi.registerComponent('Button', po); const fo = (function(t) { function e(n, i) { Zn(this, e); const r = ei(this, t.call(this, n, i)); return r.mouseused_ = !1, r.on('mousedown', r.handleMouseDown), r; } return ti(e, t), e.prototype.buildCSSClass = function() { return 'vjs-big-play-button'; }, e.prototype.handleClick = function(t) { const e = this.player_.play(); if (!(this.mouseused_ && t.clientX && t.clientY)) { const n = this.player_.getChild('controlBar'); const i = n && n.getChild('playToggle'); if (!i) return void this.player_.focus(); const r = function() { return i.focus(); }; ft(e) ? e.then(r, () => {}) : this.setTimeout(r, 1); } }, e.prototype.handleKeyPress = function(e) { this.mouseused_ = !1, t.prototype.handleKeyPress.call(this, e); }, e.prototype.handleMouseDown = function(t) { this.mouseused_ = !0; }, e; }(po)); fo.prototype.controlText_ = 'Play Video', Bi.registerComponent('BigPlayButton', fo); const yo = (function(t) { function e(n, i) { Zn(this, e); const r = ei(this, t.call(this, n, i)); return r.controlText(i && i.controlText || r.localize('Close')), r; } return ti(e, t), e.prototype.buildCSSClass = function() { return `vjs-close-button ${t.prototype.buildCSSClass.call(this)}`; }, e.prototype.handleClick = function(t) { this.trigger({ type: 'close', bubbles: !1 }); }, e; }(po)); Bi.registerComponent('CloseButton', yo); const go = (function(t) { function e(n, i) { Zn(this, e); const r = ei(this, t.call(this, n, i)); return r.on(n, 'play', r.handlePlay), r.on(n, 'pause', r.handlePause), r.on(n, 'ended', r.handleEnded), r; } return ti(e, t), e.prototype.buildCSSClass = function() { return `vjs-play-control ${t.prototype.buildCSSClass.call(this)}`; }, e.prototype.handleClick = function(t) { this.player_.paused() ? this.player_.play() : this.player_.pause(); }, e.prototype.handleSeeked = function(t) { this.removeClass('vjs-ended'), this.player_.paused() ? this.handlePause(t) : this.handlePlay(t); }, e.prototype.handlePlay = function(t) { this.removeClass('vjs-ended'), this.removeClass('vjs-paused'), this.addClass('vjs-playing'), this.controlText('Pause'); }, e.prototype.handlePause = function(t) { this.removeClass('vjs-playing'), this.addClass('vjs-paused'), this.controlText('Play'); }, e.prototype.handleEnded = function(t) { this.removeClass('vjs-playing'), this.addClass('vjs-ended'), this.controlText('Replay'), this.one(this.player_, 'seeked', this.handleSeeked); }, e; }(po)); go.prototype.controlText_ = 'Play', Bi.registerComponent('PlayToggle', go); const vo = (function(t) { function e(n, i) { Zn(this, e); const r = ei(this, t.call(this, n, i)); return r.throttledUpdateContent = Ii(ki(r, r.updateContent), 25), r.on(n, 'timeupdate', r.throttledUpdateContent), r; } return ti(e, t), e.prototype.createEl = function(e) { const n = this.buildCSSClass(); const i = t.prototype.createEl.call(this, 'div', { className: `${n} vjs-time-control vjs-control` }); return this.contentEl_ = b('div', { className: `${n}-display` }, { 'aria-live': 'off' }, b('span', { className: 'vjs-control-text', textContent: this.localize(this.controlText_) })), this.updateTextNode_(), i.appendChild(this.contentEl_), i; }, e.prototype.dispose = function() { this.contentEl_ = null, this.textNode_ = null, t.prototype.dispose.call(this); }, e.prototype.updateTextNode_ = function() { if (this.contentEl_) { for (;this.contentEl_.firstChild;) this.contentEl_.removeChild(this.contentEl_.firstChild); this.textNode_ = sn.createTextNode(this.formattedTime_ || '0:00'), this.contentEl_.appendChild(this.textNode_); } }, e.prototype.formatTime_ = function(t) { return oe(t); }, e.prototype.updateFormattedTime_ = function(t) { const e = this.formatTime_(t); e !== this.formattedTime_ && (this.formattedTime_ = e, this.requestAnimationFrame(this.updateTextNode_)); }, e.prototype.updateContent = function(t) {}, e; }(Bi)); vo.prototype.controlText_ = 'Time', Bi.registerComponent('TimeDisplay', vo); const mo = (function(t) { function e(n, i) { Zn(this, e); const r = ei(this, t.call(this, n, i)); return r.on(n, 'ended', r.handleEnded), r; } return ti(e, t), e.prototype.buildCSSClass = function() { return 'vjs-current-time'; }, e.prototype.updateContent = function(t) { const e = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime(); this.updateFormattedTime_(e); }, e.prototype.handleEnded = function(t) { this.player_.duration() && this.updateFormattedTime_(this.player_.duration()); }, e; }(vo)); mo.prototype.controlText_ = 'Current Time', Bi.registerComponent('CurrentTimeDisplay', mo); const _o = (function(t) { function e(n, i) { Zn(this, e); const r = ei(this, t.call(this, n, i)); return r.on(n, 'durationchange', r.updateContent), r.on(n, 'loadedmetadata', r.throttledUpdateContent), r; } return ti(e, t), e.prototype.buildCSSClass = function() { return 'vjs-duration'; }, e.prototype.updateContent = function(t) { const e = this.player_.duration(); e && this.duration_ !== e && (this.duration_ = e, this.updateFormattedTime_(e)); }, e; }(vo)); _o.prototype.controlText_ = 'Duration Time', Bi.registerComponent('DurationDisplay', _o); const bo = (function(t) { function e() { return Zn(this, e), ei(this, t.apply(this, arguments)); } return ti(e, t), e.prototype.createEl = function() { return t.prototype.createEl.call(this, 'div', { className: 'vjs-time-control vjs-time-divider', innerHTML: '<div><span>/</span></div>' }); }, e; }(Bi)); Bi.registerComponent('TimeDivider', bo); const To = (function(t) { function e(n, i) { Zn(this, e); const r = ei(this, t.call(this, n, i)); return r.on(n, 'durationchange', r.throttledUpdateContent), r.on(n, 'ended', r.handleEnded), r; } return ti(e, t), e.prototype.buildCSSClass = function() { return 'vjs-remaining-time'; }, e.prototype.formatTime_ = function(e) { return `-${t.prototype.formatTime_.call(this, e)}`; }, e.prototype.updateContent = function(t) { this.player_.duration() && (this.player_.remainingTimeDisplay ? this.updateFormattedTime_(this.player_.remainingTimeDisplay()) : this.updateFormattedTime_(this.player_.remainingTime())); }, e.prototype.handleEnded = function(t) { this.player_.duration() && this.updateFormattedTime_(0); }, e; }(vo)); To.prototype.controlText_ = 'Remaining Time', Bi.registerComponent('RemainingTimeDisplay', To); const Co = (function(t) { function e(n, i) { Zn(this, e); const r = ei(this, t.call(this, n, i)); return r.isLoadedMetaData = !1, r.hide(), r.on(r.player(), 'durationchange', r.onDurationChange), r.on(r.player(), 'loadedmetadata', r.onLoadMetadata), n.on('loadnewvideo', ce.bind(r, r.resetStatus)), r; } return ti(e, t), e.prototype.createEl = function() { const e = t.prototype.createEl.call(this, 'div', { className: 'vjs-live-control vjs-control' }); return this.contentEl_ = b('div', { className: 'vjs-live-display', innerHTML: `<span class="vjs-control-text">${this.localize('Stream Type')}</span>${this.localize('LIVE')}` }, { 'aria-live': 'off' }), e.appendChild(this.contentEl_), e; }, e.prototype.dispose = function() { this.contentEl_ = null, t.prototype.dispose.call(this); }, e.prototype.resetStatus = function() { this.setStatus(!1); }, e.prototype.onDurationChange = function() { this.isLoadedMetaData && this.update(); }, e.prototype.onLoadMetadata = function() { this.setStatus(!0), this.update(); }, e.prototype.setStatus = function(t) { this.isLoadedMetaData = t; }, e.prototype.update = function() { this.player().duration() === Infinity ? this.show() : this.hide(); }, e; }(Bi)); Bi.registerComponent('LiveDisplay', Co); const Eo = (function(t) { function e(n, i) { Zn(this, e); const r = ei(this, t.call(this, n, i)); return r.bar = r.getChild(r.options_.barName), r.vertical(!!r.options_.vertical), r.enable(), r; } return ti(e, t), e.prototype.enabled = function() { return this.enabled_; }, e.prototype.enable = function() { this.enabled() || (this.on('mousedown', this.handleMouseDown), this.on('touchstart', this.handleMouseDown), this.on('focus', this.handleFocus), this.on('blur', this.handleBlur), this.on('click', this.handleClick), this.on(this.player_, 'controlsvisible', this.update), this.playerEvent && this.on(this.player_, this.playerEvent, this.update), this.removeClass('disabled'), this.setAttribute('tabindex', 0), this.enabled_ = !0); }, e.prototype.disable = function() { if (this.enabled()) { const t = this.bar.el_.ownerDocument; this.off('mousedown', this.handleMouseDown), this.off('touchstart', this.handleMouseDown), this.off('focus', this.handleFocus), this.off('blur', this.handleBlur), this.off('click', this.handleClick), this.off(this.player_, 'controlsvisible', this.update), this.off(t, 'mousemove', this.handleMouseMove), this.off(t, 'mouseup', this.handleMouseUp), this.off(t, 'touchmove', this.handleMouseMove), this.off(t, 'touchend', this.handleMouseUp), this.removeAttribute('tabindex'), this.addClass('disabled'), this.playerEvent && this.off(this.player_, this.playerEvent, this.update), this.enabled_ = !1; } }, e.prototype.createEl = function(e) { let n = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; let i = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {}; return n.className += ' vjs-slider', n = a({ tabIndex: 0 }, n), i = a({ role: 'slider', 'aria-valuenow': 0, 'aria-valuemin': 0, 'aria-valuemax': 100, tabIndex: 0 }, i), t.prototype.createEl.call(this, e, n, i); }, e.prototype.handleMouseDown = function(t) { const e = this.bar.el_.ownerDocument; t.preventDefault(), R(), this.addClass('vjs-sliding'), this.trigger('slideractive'), this.on(e, 'mousemove', this.handleMouseMove), this.on(e, 'mouseup', this.handleMouseUp), this.on(e, 'touchmove', this.handleMouseMove), this.on(e, 'touchend', this.handleMouseUp), this.handleMouseMove(t); }, e.prototype.handleMouseMove = function(t) {}, e.prototype.handleMouseUp = function() { const t = this.bar.el_.ownerDocument; A(), this.removeClass('vjs-sliding'), this.trigger('sliderinactive'), this.off(t, 'mousemove', this.handleMouseMove), this.off(t, 'mouseup', this.handleMouseUp), this.off(t, 'touchmove', this.handleMouseMove), this.off(t, 'touchend', this.handleMouseUp), this.update(); }, e.prototype.update = function() { if (this.el_) { let t = this.getPercent(); const e = this.bar; if (e) { (typeof t !== 'number' || t !== t || t < 0 || t === Infinity) && (t = 0); const n = `${(100 * t).toFixed(2)}%`; const i = e.el().style; return this.vertical() ? i.height = n : i.width = n, t; } } }, e.prototype.calculateDistance = function(t) { const e = L(this.el_, t); return this.vertical() ? e.y : e.x; }, e.prototype.handleFocus = function() { this.on(this.bar.el_.ownerDocument, 'keydown', this.handleKeyPress); }, e.prototype.handleKeyPress = function(t) { t.which === 37 || t.which === 40 ? (t.preventDefault(), this.stepBack()) : t.which !== 38 && t.which !== 39 || (t.preventDefault(), this.stepForward()); }, e.prototype.handleBlur = function() { this.off(this.bar.el_.ownerDocument, 'keydown', this.handleKeyPress); }, e.prototype.handleClick = function(t) { t.stopImmediatePropagation(), t.preventDefault(); }, e.prototype.vertical = function(t) { if (t === undefined) return this.vertical_ || !1; this.vertical_ = !!t, this.vertical_ ? this.addClass('vjs-slider-vertical') : this.addClass('vjs-slider-horizontal'); }, e; }(Bi)); Bi.registerComponent('Slider', Eo); const wo = (function(t) { function e(n, i) { Zn(this, e); const r = ei(this, t.call(this, n, i)); return r.partEls_ = [], r.on(n, 'progress', r.update), r; } return ti(e, t), e.prototype.createEl = function() { return t.prototype.createEl.call(this, 'div', { className: 'vjs-load-progress', innerHTML: `<span class="vjs-control-text"><span>${this.localize('Loaded')}</span>: 0%</span>` }); }, e.prototype.dispose = function() { this.partEls_ = null, t.prototype.dispose.call(this); }, e.prototype.update = function(t) { const e = this.player_.buffered(); const n = this.player_.duration(); const i = this.player_.bufferedEnd(); const r = this.partEls_; const o = function(t, e) { const n = t / e || 0; return `${100 * (n >= 1 ? 1 : n)}%`; }; this.el_.style.width = o(i, n); for (let s = 0; s < e.length; s++) { const a = e.start(s); const l = e.end(s); let c = r[s]; c || (c = this.el_.appendChild(b()), r[s] = c), c.style.left = o(a, i), c.style.width = o(l - a, i); } for (let u = r.length; u > e.length; u--) this.el_.removeChild(r[u - 1]); r.length = e.length; }, e; }(Bi)); Bi.registerComponent('LoadProgressBar', wo); const So = (function(t) { function e() { return Zn(this, e), ei(this, t.apply(this, arguments)); } return ti(e, t), e.prototype.createEl = function() { return t.prototype.createEl.call(this, 'div', { className: 'vjs-time-tooltip' }); }, e.prototype.update = function(t, e, n) { const i = O(this.el_); const r = O(this.player_.el()); const o = t.width * e; if (r && i) { const s = t.left - r.left + o; const a = t.width - o + (r.right - t.right); let l = i.width / 2; s < l ? l += l - s : a < l && (l = a), l < 0 ? l = 0 : l > i.width && (l = i.width), this.el_.style.right = `-${l}px`, T(this.el_, n); } }, e; }(Bi)); Bi.registerComponent('TimeTooltip', So); const ko = (function(t) { function e() { return Zn(this, e), ei(this, t.apply(this, arguments)); } return ti(e, t), e.prototype.createEl = function() { return t.prototype.createEl.call(this, 'div', { className: 'vjs-play-progress vjs-slider-bar', innerHTML: `<span class="vjs-control-text"><span>${this.localize('Progress')}</span>: 0%</span>` }); }, e.prototype.update = function(t, e) { const n = this; this.rafId_ && this.cancelAnimationFrame(this.rafId_), this.rafId_ = this.requestAnimationFrame(() => { const i = n.player_.scrubbing() ? n.player_.getCache().currentTime : n.player_.currentTime(); const r = oe(i, n.player_.duration()); const o = n.getChild('timeTooltip'); o && o.update(t, e, r); }); }, e; }(Bi)); ko.prototype.options_ = { children: [] }, Dn && !(Dn > 8) || dn || yn || ko.prototype.options_.children.push('timeTooltip'), Bi.registerComponent('PlayProgressBar', ko); const Io = (function(t) { function e(n, i) { Zn(this, e); const r = ei(this, t.call(this, n, i)); return r.update = Ii(ki(r, r.update), 25), r; } return ti(e, t), e.prototype.createEl = function() { return t.prototype.createEl.call(this, 'div', { className: 'vjs-mouse-display' }); }, e.prototype.update = function(t, e) { const n = this; this.rafId_ && this.cancelAnimationFrame(this.rafId_), this.rafId_ = this.requestAnimationFrame(() => { const i = n.player_.duration(); const r = oe(e * i, i); n.el_.style.left = `${t.width * e}px`, n.getChild('timeTooltip').update(t, e, r); }); }, e; }(Bi)); Io.prototype.options_ = { children: ['timeTooltip'] }, Bi.registerComponent('MouseTimeDisplay', Io); const Po = 30; const xo = (function(t) { function e(n, i) { Zn(this, e); const r = ei(this, t.call(this, n, i)); return r.update = Ii(ki(r, r.update), Po), r.on(n, 'timeupdate', r.update), r.on(n, 'ended', r.handleEnded), r.updateInterval = null, r.on(n, ['playing'], () => { r.clearInterval(r.updateInterval), r.updateInterval = r.setInterval(() => { r.requestAnimationFrame(() => { r.update(); }); }, Po); }), r.on(n, ['ended', 'pause', 'waiting'], () => { r.clearInterval(r.updateInterval); }), r.on(n, ['timeupdate', 'ended'], r.update), r; } return ti(e, t), e.prototype.createEl = function() { return t.prototype.createEl.call(this, 'div', { className: 'vjs-progress-holder' }, { 'aria-label': this.localize('Progress Bar') }); }, e.prototype.update_ = function(t, e) { const n = this.player_.duration(); this.el_.setAttribute('aria-valuenow', (100 * e).toFixed(2)), this.el_.setAttribute('aria-valuetext', this.localize('progress bar timing: currentTime={1} duration={2}', [oe(t, n), oe(n, n)], '{1} of {2}')), this.bar.update(O(this.el_), e); }, e.prototype.update = function(e) { const n = t.prototype.update.call(this); return this.update_(this.getCurrentTime_(), n), n; }, e.prototype.getCurrentTime_ = function() { return this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime(); }, e.prototype.handleEnded = function(t) { this.update_(this.player_.duration(), 1); }, e.prototype.getPercent = function() { const t = this.getCurrentTime_() / this.player_.duration(); return t >= 1 ? 1 : t; }, e.prototype.handleMouseDown = function(e) { U(e) && (this.player_.scrubbing(!0), this.videoWasPlaying = !this.player_.paused(), this.player_.pause(), t.prototype.handleMouseDown.call(this, e)); }, e.prototype.handleMouseMove = function(t) { if (U(t)) { let e = this.calculateDistance(t) * this.player_.duration(); e === this.player_.duration() && (e -= 0.1), this.player_.currentTime(e); } }, e.prototype.enable = function() { t.prototype.enable.call(this); const e = this.getChild('mouseTimeDisplay'); e && e.show(); }, e.prototype.disable = function() { t.prototype.disable.call(this); const e = this.getChild('mouseTimeDisplay'); e && e.hide(); }, e.prototype.handleMouseUp = function(e) { t.prototype.handleMouseUp.call(this, e), this.player_.scrubbing(!1), this.player_.trigger({ type: 'timeupdate', target: this, manuallyTriggered: !0 }), this.videoWasPlaying && yt(this.player_.play()); }, e.prototype.stepForward = function() { this.player_.currentTime(this.player_.currentTime() + 5); }, e.prototype.stepBack = function() { this.player_.currentTime(this.player_.currentTime() - 5); }, e.prototype.handleAction = function(t) { this.player_.paused() ? this.player_.play() : this.player_.pause(); }, e.prototype.handleKeyPress = function(e) { e.which === 32 || e.which === 13 ? (e.preventDefault(), this.handleAction(e)) : t.prototype.handleKeyPress && t.prototype.handleKeyPress.call(this, e); }, e; }(Eo)); xo.prototype.options_ = { children: ['loadProgressBar', 'playProgressBar'], barName: 'playProgressBar' }, Dn && !(Dn > 8) || dn || yn || xo.prototype.options_.children.splice(1, 0, 'mouseTimeDisplay'), xo.prototype.playerEvent = 'timeupdate', Bi.registerComponent('SeekBar', xo); const Do = (function(t) { function e(n, i) { Zn(this, e); const r = ei(this, t.call(this, n, i)); return r.handleMouseMove = Ii(ki(r, r.handleMouseMove), 25), r.throttledHandleMouseSeek = Ii(ki(r, r.handleMouseSeek), 25), r.enable(), r; } return ti(e, t), e.prototype.createEl = function() { return t.prototype.createEl.call(this, 'div', { className: 'vjs-progress-control vjs-control' }); }, e.prototype.handleMouseMove = function(t) { const e = this.getChild('seekBar'); const n = e.getChild('mouseTimeDisplay'); const i = e.el(); const r = O(i); let o = L(i, t).x; o > 1 ? o = 1 : o < 0 && (o = 0), n && n.update(r, o); }, e.prototype.handleMouseSeek = function(t) { this.getChild('seekBar').handleMouseMove(t); }, e.prototype.enabled = function() { return this.enabled_; }, e.prototype.disable = function() { this.children().forEach((t) => t.disable && t.disable()), this.enabled() && (this.off(['mousedown', 'touchstart'], this.handleMouseDown), this.off(this.el_, 'mousemove', this.handleMouseMove), this.handleMouseUp(), this.addClass('disabled'), this.enabled_ = !1); }, e.prototype.enable = function() { this.children().forEach((t) => t.enable && t.enable()), this.enabled() || (this.on(['mousedown', 'touchstart'], this.handleMouseDown), this.on(this.el_, 'mousemove', this.handleMouseMove), this.removeClass('disabled'), this.enabled_ = !0); }, e.prototype.handleMouseDown = function(t) { const e = this.el_.ownerDocument; this.on(e, 'mousemove', this.throttledHandleMouseSeek), this.on(e, 'touchmove', this.throttledHandleMouseSeek), this.on(e, 'mouseup', this.handleMouseUp), this.on(e, 'touchend', this.handleMouseUp); }, e.prototype.handleMouseUp = function(t) { const e = this.el_.ownerDocument; this.off(e, 'mousemove', this.throttledHandleMouseSeek), this.off(e, 'touchmove', this.throttledHandleMouseSeek), this.off(e, 'mouseup', this.handleMouseUp), this.off(e, 'touchend', this.handleMouseUp); }, e; }(Bi)); Do.prototype.options_ = { children: ['seekBar'] }, Bi.registerComponent('ProgressControl', Do); const Mo = (function(t) { function e(n, i) { Zn(this, e); const r = ei(this, t.call(this, n, i)); return r.on(n, 'fullscreenchange', r.handleFullscreenChange), r; } return ti(e, t), e.prototype.buildCSSClass = function() { return `vjs-fullscreen-control ${t.prototype.buildCSSClass.call(this)}`; }, e.prototype.handleFullscreenChange = function(t) { this.player_.isFullscreen() ? this.controlText('Non-Fullscreen') : this.controlText('Fullscreen'); }, e.prototype.handleClick = function(t) { this.player_.isFullscreen() ? this.player_.exitFullscreen() : this.player_.requestFullscreen(); }, e; }(po)); Mo.prototype.controlText_ = 'Fullscreen', Bi.registerComponent('FullscreenToggle', Mo); const Ro = function(t, e) { !e.tech_ || e.tech_.featuresVolumeControl || e.tech_.featuresMuteControl ? e.tech_ && e.tech_.featuresVolumeControl && t.addClass('enable-volume-control') : t.addClass('vjs-hidden'), t.on(e, 'loadstart', () => { e.tech_.featuresVolumeControl || e.tech_.featuresMuteControl ? e.tech_.featuresVolumeControl && (t.removeClass('vjs-hidden'), t.addClass('enable-volume-control')) : t.addClass('vjs-hidden'); }); }; const Ao = (function(t) {
 function e() { return Zn(this, e), ei(this, t.apply(this, arguments)); } return ti(e, t), e.prototype.createEl = function() {
return t.prototype.createEl.call(this, 'div', { className: 'vjs-volume-level', innerHTML: '<span class="vjs-control-text"></span>' });
}, e;
}(Bi)); Bi.registerComponent('VolumeLevel', Ao); const Oo = (function(t) { function e(n, i) { Zn(this, e); const r = ei(this, t.call(this, n, i)); return r.on('slideractive', r.updateLastVolume_), r.on(n, 'volumechange', r.updateARIAAttributes), n.ready(() => r.updateARIAAttributes()), r; } return ti(e, t), e.prototype.createEl = function() { return t.prototype.createEl.call(this, 'div', { className: 'vjs-volume-bar vjs-slider-bar' }, { 'aria-label': this.localize('Volume Level'), 'aria-live': 'polite' }); }, e.prototype.handleMouseDown = function(e) { U(e) && t.prototype.handleMouseDown.call(this, e); }, e.prototype.handleMouseMove = function(t) { U(t) && (this.checkMuted(), this.player_.volume(this.calculateDistance(t))); }, e.prototype.checkMuted = function() { this.player_.muted() && this.player_.muted(!1); }, e.prototype.getPercent = function() { return this.player_.muted() ? 0 : this.player_.volume(); }, e.prototype.stepForward = function() { this.checkMuted(), this.player_.volume(this.player_.volume() + 0.1); }, e.prototype.stepBack = function() { this.checkMuted(), this.player_.volume(this.player_.volume() - 0.1); }, e.prototype.updateARIAAttributes = function(t) { const e = this.player_.muted() ? 0 : this.volumeAsPercentage_(); this.el_.setAttribute('aria-valuenow', e), this.el_.setAttribute('aria-valuetext', `${e}%`); }, e.prototype.volumeAsPercentage_ = function() { return Math.round(100 * this.player_.volume()); }, e.prototype.updateLastVolume_ = function() { const t = this; const e = this.player_.volume(); this.one('sliderinactive', () => { t.player_.volume() === 0 && t.player_.lastVolume_(e); }); }, e; }(Eo)); Oo.prototype.options_ = { children: ['volumeLevel'], barName: 'volumeLevel' }, Oo.prototype.playerEvent = 'volumechange', Bi.registerComponent('VolumeBar', Oo); const jo = (function(t) { function e(n) { const i = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; Zn(this, e), i.vertical = i.vertical || !1, (typeof i.volumeBar === 'undefined' || c(i.volumeBar)) && (i.volumeBar = i.volumeBar || {}, i.volumeBar.vertical = i.vertical); const r = ei(this, t.call(this, n, i)); return Ro(r, n), r.throttledHandleMouseMove = Ii(ki(r, r.handleMouseMove), 25), r.on('mousedown', r.handleMouseDown), r.on('touchstart', r.handleMouseDown), r.on(r.volumeBar, ['focus', 'slideractive'], () => { r.volumeBar.addClass('vjs-slider-active'), r.addClass('vjs-slider-active'), r.trigger('slideractive'); }), r.on(r.volumeBar, ['blur', 'sliderinactive'], () => { r.volumeBar.removeClass('vjs-slider-active'), r.removeClass('vjs-slider-active'), r.trigger('sliderinactive'); }), r; } return ti(e, t), e.prototype.createEl = function() { let e = 'vjs-volume-horizontal'; return this.options_.vertical && (e = 'vjs-volume-vertical'), t.prototype.createEl.call(this, 'div', { className: `vjs-volume-control vjs-control ${e}` }); }, e.prototype.handleMouseDown = function(t) { const e = this.el_.ownerDocument; this.on(e, 'mousemove', this.throttledHandleMouseMove), this.on(e, 'touchmove', this.throttledHandleMouseMove), this.on(e, 'mouseup', this.handleMouseUp), this.on(e, 'touchend', this.handleMouseUp); }, e.prototype.handleMouseUp = function(t) { const e = this.el_.ownerDocument; this.off(e, 'mousemove', this.throttledHandleMouseMove), this.off(e, 'touchmove', this.throttledHandleMouseMove), this.off(e, 'mouseup', this.handleMouseUp), this.off(e, 'touchend', this.handleMouseUp); }, e.prototype.handleMouseMove = function(t) { this.volumeBar.handleMouseMove(t); }, e; }(Bi)); jo.prototype.options_ = { children: ['volumeBar'] }, Bi.registerComponent('VolumeControl', jo); const Lo = (function(t) { function e(n, i) { Zn(this, e); const r = ei(this, t.call(this, n, i)); return Ro(r, n), r.on(n, ['loadstart', 'volumechange'], r.update), r; } return ti(e, t), e.prototype.buildCSSClass = function() { return `vjs-mute-control ${t.prototype.buildCSSClass.call(this)}`; }, e.prototype.handleClick = function(t) { const e = this.player_.volume(); const n = this.player_.lastVolume_(); if (e === 0) { const i = n < 0.1 ? 0.1 : n; this.player_.volume(i), this.player_.muted(!1); } else this.player_.muted(!this.player_.muted()); }, e.prototype.update = function(t) { this.updateIcon_(), this.updateControlText_(); }, e.prototype.updateIcon_ = function() { const t = this.player_.volume(); let e = 3; t === 0 || this.player_.muted() ? e = 0 : t < 0.33 ? e = 1 : t < 0.67 && (e = 2); for (let n = 0; n < 4; n++)S(this.el_, `vjs-vol-${n}`); w(this.el_, `vjs-vol-${e}`); }, e.prototype.updateControlText_ = function() { const t = this.player_.muted() || this.player_.volume() === 0; const e = t ? 'Unmute' : 'Mute'; this.controlText() !== e && this.controlText(e); }, e; }(po)); Lo.prototype.controlText_ = 'Mute', Bi.registerComponent('MuteToggle', Lo); const No = (function(t) { function e(n) { const i = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; Zn(this, e), typeof i.inline !== 'undefined' ? i.inline = i.inline : i.inline = !0, (typeof i.volumeControl === 'undefined' || c(i.volumeControl)) && (i.volumeControl = i.volumeControl || {}, i.volumeControl.vertical = !i.inline); const r = ei(this, t.call(this, n, i)); return Ro(r, n), r.on(r.volumeControl, ['slideractive'], r.sliderActive_), r.on(r.muteToggle, 'focus', r.sliderActive_), r.on(r.volumeControl, ['sliderinactive'], r.sliderInactive_), r.on(r.muteToggle, 'blur', r.sliderInactive_), r; } return ti(e, t), e.prototype.sliderActive_ = function() { yn || dn || this.addClass('vjs-slider-active'); }, e.prototype.sliderInactive_ = function() { yn || dn || this.removeClass('vjs-slider-active'); }, e.prototype.createEl = function() { let e = 'vjs-volume-panel-horizontal'; return this.options_.inline || (e = 'vjs-volume-panel-vertical'), t.prototype.createEl.call(this, 'div', { className: `vjs-volume-panel vjs-control ${e}` }); }, e; }(Bi)); No.prototype.options_ = { children: ['muteToggle', 'volumeControl'] }, Bi.registerComponent('VolumePanel', No); const Bo = (function(t) { function e(n, i) { Zn(this, e); const r = ei(this, t.call(this, n, i)); return i && (r.menuButton_ = i.menuButton), r.focusedChild_ = -1, r.on('keydown', r.handleKeyPress), r; } return ti(e, t), e.prototype.addItem = function(t) { this.addChild(t), t.on('click', ki(this, function(e) { this.menuButton_ && (this.menuButton_.unpressButton(), t.name() !== 'CaptionSettingsMenuItem' && this.menuButton_.focus()); })); }, e.prototype.createEl = function() { const e = this.options_.contentElType || 'ul'; this.contentEl_ = b(e, { className: 'vjs-menu-content' }), this.contentEl_.setAttribute('role', 'menu'); const n = t.prototype.createEl.call(this, 'div', { append: this.contentEl_, className: 'vjs-menu' }); return n.appendChild(this.contentEl_), G(n, 'click', (t) => { t.preventDefault(), t.stopImmediatePropagation(); }), n; }, e.prototype.dispose = function() { this.contentEl_ = null, t.prototype.dispose.call(this); }, e.prototype.handleKeyPress = function(t) { t.which === 37 || t.which === 40 ? (t.preventDefault(), this.stepForward()) : t.which !== 38 && t.which !== 39 || (t.preventDefault(), this.stepBack()); }, e.prototype.stepForward = function() { let t = 0; this.focusedChild_ !== undefined && (t = this.focusedChild_ + 1), this.focus(t); }, e.prototype.stepBack = function() { let t = 0; this.focusedChild_ !== undefined && (t = this.focusedChild_ - 1), this.focus(t); }, e.prototype.focus = function() { let t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0; const e = this.children().slice(); e.length && e[0].className && /vjs-menu-title/.test(e[0].className) && e.shift(), e.length > 0 && (t < 0 ? t = 0 : t >= e.length && (t = e.length - 1), this.focusedChild_ = t, e[t].el_.focus()); }, e; }(Bi)); Bi.registerComponent('Menu', Bo); const Fo = (function(t) { function e(n) { const i = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; Zn(this, e); const r = ei(this, t.call(this, n, i)); r.menuButton_ = new po(n, i), r.menuButton_.controlText(r.controlText_), r.menuButton_.el_.setAttribute('aria-haspopup', 'true'); const o = po.prototype.buildCSSClass(); return r.menuButton_.el_.className = `${r.buildCSSClass()} ${o}`, r.menuButton_.removeClass('vjs-control'), r.addChild(r.menuButton_), r.update(), r.enabled_ = !0, r.on(r.menuButton_, 'tap', r.handleClick), r.on(r.menuButton_, 'click', r.handleClick), r.on(r.menuButton_, 'focus', r.handleFocus), r.on(r.menuButton_, 'blur', r.handleBlur), r.on('keydown', r.handleSubmenuKeyPress), r; } return ti(e, t), e.prototype.update = function() { const t = this.createMenu(); this.menu && (this.menu.dispose(), this.removeChild(this.menu)), this.menu = t, this.addChild(t), this.buttonPressed_ = !1, this.menuButton_.el_.setAttribute('aria-expanded', 'false'), this.items && this.items.length <= this.hideThreshold_ ? this.hide() : this.show(); }, e.prototype.createMenu = function() { const t = new Bo(this.player_, { menuButton: this }); if (this.hideThreshold_ = 0, this.options_.title) { const e = b('li', { className: 'vjs-menu-title', innerHTML: it(this.options_.title), tabIndex: -1 }); this.hideThreshold_ += 1, t.children_.unshift(e), C(e, t.contentEl()); } if (this.items = this.createItems(), this.items) for (let n = 0; n < this.items.length; n++)t.addItem(this.items[n]); return t; }, e.prototype.createItems = function() {}, e.prototype.createEl = function() { return t.prototype.createEl.call(this, 'div', { className: this.buildWrapperCSSClass() }, {}); }, e.prototype.buildWrapperCSSClass = function() { let e = 'vjs-menu-button'; return !0 === this.options_.inline ? e += '-inline' : e += '-popup', `vjs-menu-button ${e} ${po.prototype.buildCSSClass()} ${t.prototype.buildCSSClass.call(this)}`; }, e.prototype.buildCSSClass = function() { let e = 'vjs-menu-button'; return !0 === this.options_.inline ? e += '-inline' : e += '-popup', `vjs-menu-button ${e} ${t.prototype.buildCSSClass.call(this)}`; }, e.prototype.controlText = function(t) { const e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.menuButton_.el(); return this.menuButton_.controlText(t, e); }, e.prototype.handleClick = function(t) { this.one(this.menu.contentEl(), 'mouseleave', ki(this, function(t) { this.unpressButton(), this.el_.blur(); })), this.buttonPressed_ ? this.unpressButton() : this.pressButton(); }, e.prototype.focus = function() { this.menuButton_.focus(); }, e.prototype.blur = function() { this.menuButton_.blur(); }, e.prototype.handleFocus = function() { G(sn, 'keydown', ki(this, this.handleKeyPress)); }, e.prototype.handleBlur = function() { Y(sn, 'keydown', ki(this, this.handleKeyPress)); }, e.prototype.handleKeyPress = function(t) { t.which === 27 || t.which === 9 ? (this.buttonPressed_ && this.unpressButton(), t.which !== 9 && (t.preventDefault(), this.menuButton_.el_.focus())) : t.which !== 38 && t.which !== 40 || this.buttonPressed_ || (this.pressButton(), t.preventDefault()); }, e.prototype.handleSubmenuKeyPress = function(t) { t.which !== 27 && t.which !== 9 || (this.buttonPressed_ && this.unpressButton(), t.which !== 9 && (t.preventDefault(), this.menuButton_.el_.focus())); }, e.prototype.pressButton = function() { if (this.enabled_) { if (this.buttonPressed_ = !0, this.menu.lockShowing(), this.menuButton_.el_.setAttribute('aria-expanded', 'true'), dn && m()) return; this.menu.focus(); } }, e.prototype.unpressButton = function() { this.enabled_ && (this.buttonPressed_ = !1, this.menu.unlockShowing(), this.menuButton_.el_.setAttribute('aria-expanded', 'false')); }, e.prototype.disable = function() { this.unpressButton(), this.enabled_ = !1, this.addClass('vjs-disabled'), this.menuButton_.disable(); }, e.prototype.enable = function() { this.enabled_ = !0, this.removeClass('vjs-disabled'), this.menuButton_.enable(); }, e; }(Bi)); Bi.registerComponent('MenuButton', Fo); const Vo = (function(t) { function e(n, i) { Zn(this, e); const r = i.tracks; const o = ei(this, t.call(this, n, i)); if (o.items.length <= 1 && o.hide(), !r) return ei(o); const s = ki(o, o.update); return r.addEventListener('removetrack', s), r.addEventListener('addtrack', s), o.player_.on('ready', s), o.player_.on('dispose', () => { r.removeEventListener('removetrack', s), r.removeEventListener('addtrack', s); }), o; } return ti(e, t), e; }(Fo)); Bi.registerComponent('TrackButton', Vo); const Ho = (function(t) { function e(n, i) { Zn(this, e); const r = ei(this, t.call(this, n, i)); return r.selectable = i.selectable, r.selected(i.selected), r.selectable ? r.el_.setAttribute('role', 'menuitemcheckbox') : r.el_.setAttribute('role', 'menuitem'), r; } return ti(e, t), e.prototype.createEl = function(e, n, i) { return this.nonIconControl = !0, t.prototype.createEl.call(this, 'li', a({ className: 'vjs-menu-item', innerHTML: `<span class="vjs-menu-item-text">${this.localize(this.options_.label)}</span>`, tabIndex: -1 }, n), i); }, e.prototype.handleClick = function(t) { this.selected(!0); }, e.prototype.selected = function(t) { this.selectable && (t ? (this.addClass('vjs-selected'), this.el_.setAttribute('aria-checked', 'true'), this.controlText(', selected')) : (this.removeClass('vjs-selected'), this.el_.setAttribute('aria-checked', 'false'), this.controlText(''))); }, e; }(ao)); Bi.registerComponent('MenuItem', Ho); const Uo = (function(t) { function e(n, i) { Zn(this, e); const r = i.track; const o = n.textTracks(); i.label = r.label || r.language || 'Unknown', i.selected = r.mode === 'showing'; const s = ei(this, t.call(this, n, i)); s.track = r; const a = function() { for (var t = arguments.length, e = Array(t), n = 0; n < t; n++)e[n] = arguments[n]; s.handleTracksChange.apply(s, e); }; const l = function() { for (var t = arguments.length, e = Array(t), n = 0; n < t; n++)e[n] = arguments[n]; s.handleSelectedLanguageChange.apply(s, e); }; if (n.on(['loadstart', 'texttrackchange'], a), o.addEventListener('change', a), o.addEventListener('selectedlanguagechange', l), s.on('dispose', () => { n.off(['loadstart', 'texttrackchange'], a), o.removeEventListener('change', a), o.removeEventListener('selectedlanguagechange', l); }), o.onchange === undefined) { let c = void 0; s.on(['tap', 'click'], () => { if (Jn(tn.Event) !== 'object') try { c = new tn.Event('change'); } catch (t) {}c || (c = sn.createEvent('Event'), c.initEvent('change', !0, !0)), o.dispatchEvent(c); }); } return s.handleTracksChange(), s; } return ti(e, t), e.prototype.handleClick = function(e) { const n = this.track.kind; let i = this.track.kinds; const r = this.player_.textTracks(); if (i || (i = [n]), t.prototype.handleClick.call(this, e), r) for (let o = 0; o < r.length; o++) { const s = r[o]; s === this.track && i.indexOf(s.kind) > -1 ? s.mode !== 'showing' && (s.mode = 'showing') : s.mode !== 'disabled' && (s.mode = 'disabled'); } }, e.prototype.handleTracksChange = function(t) { this.selected(this.track.mode === 'showing'); }, e.prototype.handleSelectedLanguageChange = function(t) { if (this.track.mode === 'showing') { const e = this.player_.cache_.selectedLanguage; if (e && e.enabled && e.language === this.track.language && e.kind !== this.track.kind) return; this.player_.cache_.selectedLanguage = { enabled: !0, language: this.track.language, kind: this.track.kind }; } }, e.prototype.dispose = function() { this.track = null, t.prototype.dispose.call(this); }, e; }(Ho)); Bi.registerComponent('TextTrackMenuItem', Uo); const qo = (function(t) { function e(n, i) { return Zn(this, e), i.track = { player: n, kind: i.kind, kinds: i.kinds, default: !1, mode: 'disabled' }, i.kinds || (i.kinds = [i.kind]), i.label ? i.track.label = i.label : i.track.label = `${i.kinds.join(' and ')} off`, i.selectable = !0, ei(this, t.call(this, n, i)); } return ti(e, t), e.prototype.handleTracksChange = function(t) { for (var e = this.player().textTracks(), n = !0, i = 0, r = e.length; i < r; i++) { const o = e[i]; if (this.options_.kinds.indexOf(o.kind) > -1 && o.mode === 'showing') { n = !1; break; } } this.selected(n); }, e.prototype.handleSelectedLanguageChange = function(t) { for (var e = this.player().textTracks(), n = !0, i = 0, r = e.length; i < r; i++) { const o = e[i]; if (['captions', 'descriptions', 'subtitles'].indexOf(o.kind) > -1 && o.mode === 'showing') { n = !1; break; } }n && (this.player_.cache_.selectedLanguage = { enabled: !1 }); }, e; }(Uo)); Bi.registerComponent('OffTextTrackMenuItem', qo); const zo = (function(t) { function e(n) { const i = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; return Zn(this, e), i.tracks = n.textTracks(), ei(this, t.call(this, n, i)); } return ti(e, t), e.prototype.createItems = function() { const t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : []; const e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Uo; let n = void 0; this.label_ && (n = `${this.label_} off`), t.push(new qo(this.player_, { kinds: this.kinds_, kind: this.kind_, label: n })), this.hideThreshold_ += 1; const i = this.player_.textTracks(); Array.isArray(this.kinds_) || (this.kinds_ = [this.kind_]); for (let r = 0; r < i.length; r++) { const o = i[r]; if (this.kinds_.indexOf(o.kind) > -1) { const s = new e(this.player_, { track: o, selectable: !0 }); s.addClass(`vjs-${o.kind}-menu-item`), t.push(s); } } return t; }, e; }(Vo)); Bi.registerComponent('TextTrackButton', zo); const Wo = (function(t) { function e(n, i) { Zn(this, e); const r = i.track; const o = i.cue; const s = n.currentTime(); i.selectable = !0, i.label = o.text, i.selected = o.startTime <= s && s < o.endTime; const a = ei(this, t.call(this, n, i)); return a.track = r, a.cue = o, r.addEventListener('cuechange', ki(a, a.update)), a; } return ti(e, t), e.prototype.handleClick = function(e) { t.prototype.handleClick.call(this), this.player_.currentTime(this.cue.startTime), this.update(this.cue.startTime); }, e.prototype.update = function(t) { const e = this.cue; const n = this.player_.currentTime(); this.selected(e.startTime <= n && n < e.endTime); }, e; }(Ho)); Bi.registerComponent('ChaptersTrackMenuItem', Wo); const Ko = (function(t) { function e(n, i, r) { return Zn(this, e), ei(this, t.call(this, n, i, r)); } return ti(e, t), e.prototype.buildCSSClass = function() { return `vjs-chapters-button ${t.prototype.buildCSSClass.call(this)}`; }, e.prototype.buildWrapperCSSClass = function() { return `vjs-chapters-button ${t.prototype.buildWrapperCSSClass.call(this)}`; }, e.prototype.update = function(e) { this.track_ && (!e || e.type !== 'addtrack' && e.type !== 'removetrack') || this.setTrack(this.findChaptersTrack()), t.prototype.update.call(this); }, e.prototype.setTrack = function(t) { if (this.track_ !== t) { if (this.updateHandler_ || (this.updateHandler_ = this.update.bind(this)), this.track_) { const e = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_); e && e.removeEventListener('load', this.updateHandler_), this.track_ = null; } if (this.track_ = t, this.track_) { this.track_.mode = 'hidden'; const n = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_); n && n.addEventListener('load', this.updateHandler_); } } }, e.prototype.findChaptersTrack = function() { for (let t = this.player_.textTracks() || [], e = t.length - 1; e >= 0; e--) { const n = t[e]; if (n.kind === this.kind_) return n; } }, e.prototype.getMenuCaption = function() { return this.track_ && this.track_.label ? this.track_.label : this.localize(it(this.kind_)); }, e.prototype.createMenu = function() { return this.options_.title = this.getMenuCaption(), t.prototype.createMenu.call(this); }, e.prototype.createItems = function() { const t = []; if (!this.track_) return t; const e = this.track_.cues; if (!e) return t; for (let n = 0, i = e.length; n < i; n++) { const r = e[n]; const o = new Wo(this.player_, { track: this.track_, cue: r }); t.push(o); } return t; }, e; }(zo)); Ko.prototype.kind_ = 'chapters', Ko.prototype.controlText_ = 'Chapters', Bi.registerComponent('ChaptersButton', Ko); const Qo = (function(t) { function e(n, i, r) { Zn(this, e); const o = ei(this, t.call(this, n, i, r)); const s = n.textTracks(); const a = ki(o, o.handleTracksChange); return s.addEventListener('change', a), o.on('dispose', () => { s.removeEventListener('change', a); }), o; } return ti(e, t), e.prototype.handleTracksChange = function(t) { for (var e = this.player().textTracks(), n = !1, i = 0, r = e.length; i < r; i++) { const o = e[i]; if (o.kind !== this.kind_ && o.mode === 'showing') { n = !0; break; } }n ? this.disable() : this.enable(); }, e.prototype.buildCSSClass = function() { return `vjs-descriptions-button ${t.prototype.buildCSSClass.call(this)}`; }, e.prototype.buildWrapperCSSClass = function() { return `vjs-descriptions-button ${t.prototype.buildWrapperCSSClass.call(this)}`; }, e; }(zo)); Qo.prototype.kind_ = 'descriptions', Qo.prototype.controlText_ = 'Descriptions', Bi.registerComponent('DescriptionsButton', Qo); const Xo = (function(t) { function e(n, i, r) { return Zn(this, e), ei(this, t.call(this, n, i, r)); } return ti(e, t), e.prototype.buildCSSClass = function() { return `vjs-subtitles-button ${t.prototype.buildCSSClass.call(this)}`; }, e.prototype.buildWrapperCSSClass = function() { return `vjs-subtitles-button ${t.prototype.buildWrapperCSSClass.call(this)}`; }, e; }(zo)); Xo.prototype.kind_ = 'subtitles', Xo.prototype.controlText_ = 'Subtitles', Bi.registerComponent('SubtitlesButton', Xo); const $o = (function(t) { function e(n, i) { Zn(this, e), i.track = { player: n, kind: i.kind, label: `${i.kind} settings`, selectable: !1, default: !1, mode: 'disabled' }, i.selectable = !1, i.name = 'CaptionSettingsMenuItem'; const r = ei(this, t.call(this, n, i)); return r.addClass('vjs-texttrack-settings'), r.controlText(`, opens ${i.kind} settings dialog`), r; } return ti(e, t), e.prototype.handleClick = function(t) { this.player().getChild('textTrackSettings').open(); }, e; }(Uo)); Bi.registerComponent('CaptionSettingsMenuItem', $o); const Go = (function(t) { function e(n, i, r) { return Zn(this, e), ei(this, t.call(this, n, i, r)); } return ti(e, t), e.prototype.buildCSSClass = function() { return `vjs-captions-button ${t.prototype.buildCSSClass.call(this)}`; }, e.prototype.buildWrapperCSSClass = function() { return `vjs-captions-button ${t.prototype.buildWrapperCSSClass.call(this)}`; }, e.prototype.createItems = function() { const e = []; return this.player().tech_ && this.player().tech_.featuresNativeTextTracks || (e.push(new $o(this.player_, { kind: this.kind_ })), this.hideThreshold_ += 1), t.prototype.createItems.call(this, e); }, e; }(zo)); Go.prototype.kind_ = 'captions', Go.prototype.controlText_ = 'Captions', Bi.registerComponent('CaptionsButton', Go); const Yo = (function(t) { function e() { return Zn(this, e), ei(this, t.apply(this, arguments)); } return ti(e, t), e.prototype.createEl = function(e, n, i) { let r = `<span class="vjs-menu-item-text">${this.localize(this.options_.label)}`; return this.options_.track.kind === 'captions' && (r += `\n        <span aria-hidden="true" class="vjs-icon-placeholder"></span>\n        <span class="vjs-control-text"> ${this.localize('Captions')}</span>\n      `), r += '</span>', t.prototype.createEl.call(this, e, a({ innerHTML: r }, n), i); }, e; }(Uo)); Bi.registerComponent('SubsCapsMenuItem', Yo); const Jo = (function(t) { function e(n) { const i = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; Zn(this, e); const r = ei(this, t.call(this, n, i)); return r.label_ = 'subtitles', ['en', 'en-us', 'en-ca', 'fr-ca'].indexOf(r.player_.language_) > -1 && (r.label_ = 'captions'), r.menuButton_.controlText(it(r.label_)), r; } return ti(e, t), e.prototype.buildCSSClass = function() { return `vjs-subs-caps-button ${t.prototype.buildCSSClass.call(this)}`; }, e.prototype.buildWrapperCSSClass = function() { return `vjs-subs-caps-button ${t.prototype.buildWrapperCSSClass.call(this)}`; }, e.prototype.createItems = function() { let e = []; return this.player().tech_ && this.player().tech_.featuresNativeTextTracks || (e.push(new $o(this.player_, { kind: this.label_ })), this.hideThreshold_ += 1), e = t.prototype.createItems.call(this, e, Yo); }, e; }(zo)); Jo.prototype.kinds_ = ['captions', 'subtitles'], Jo.prototype.controlText_ = 'Subtitles', Bi.registerComponent('SubsCapsButton', Jo); const Zo = (function(t) { function e(n, i) { Zn(this, e); const r = i.track; const o = n.audioTracks(); i.label = r.label || r.language || 'Unknown', i.selected = r.enabled; const s = ei(this, t.call(this, n, i)); s.track = r; const a = function() { for (var t = arguments.length, e = Array(t), n = 0; n < t; n++)e[n] = arguments[n]; s.handleTracksChange.apply(s, e); }; return o.addEventListener('change', a), s.on('dispose', () => { o.removeEventListener('change', a); }), s; } return ti(e, t), e.prototype.handleClick = function(e) { const n = this.player_.audioTracks(); t.prototype.handleClick.call(this, e); for (let i = 0; i < n.length; i++) { const r = n[i]; r.enabled = r === this.track; } }, e.prototype.handleTracksChange = function(t) { this.selected(this.track.enabled); }, e; }(Ho)); Bi.registerComponent('AudioTrackMenuItem', Zo); const ts = (function(t) { function e(n) { const i = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; return Zn(this, e), i.tracks = n.audioTracks(), ei(this, t.call(this, n, i)); } return ti(e, t), e.prototype.buildCSSClass = function() { return `vjs-audio-button ${t.prototype.buildCSSClass.call(this)}`; }, e.prototype.buildWrapperCSSClass = function() { return `vjs-audio-button ${t.prototype.buildWrapperCSSClass.call(this)}`; }, e.prototype.createItems = function() { const t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : []; this.hideThreshold_ = 1; for (let e = this.player_.audioTracks(), n = 0; n < e.length; n++) { const i = e[n]; t.push(new Zo(this.player_, { track: i, selectable: !0 })); } return t; }, e; }(Vo)); ts.prototype.controlText_ = 'Audio Track', Bi.registerComponent('AudioTrackButton', ts); const es = (function(t) { function e(n, i) { Zn(this, e); const r = i.rate; const o = parseFloat(r, 10); i.label = r, i.selected = o === 1, i.selectable = !0; const s = ei(this, t.call(this, n, i)); return s.label = r, s.rate = o, s.on(n, 'ratechange', s.update), s; } return ti(e, t), e.prototype.handleClick = function(e) { t.prototype.handleClick.call(this), this.player().playbackRate(this.rate); }, e.prototype.update = function(t) { this.selected(this.player().playbackRate() === this.rate); }, e; }(Ho)); es.prototype.contentElType = 'button', Bi.registerComponent('PlaybackRateMenuItem', es); const ns = (function(t) { function e(n, i) { Zn(this, e); const r = ei(this, t.call(this, n, i)); return r.updateVisibility(), r.updateLabel(), r.on(n, 'loadstart', r.updateVisibility), r.on(n, 'ratechange', r.updateLabel), r; } return ti(e, t), e.prototype.createEl = function() { const e = t.prototype.createEl.call(this); return this.labelEl_ = b('div', { className: 'vjs-playback-rate-value', innerHTML: '1x' }), e.appendChild(this.labelEl_), e; }, e.prototype.dispose = function() { this.labelEl_ = null, t.prototype.dispose.call(this); }, e.prototype.buildCSSClass = function() { return `vjs-playback-rate ${t.prototype.buildCSSClass.call(this)}`; }, e.prototype.buildWrapperCSSClass = function() { return `vjs-playback-rate ${t.prototype.buildWrapperCSSClass.call(this)}`; }, e.prototype.createMenu = function() { const t = new Bo(this.player()); const e = this.playbackRates(); if (e) for (let n = e.length - 1; n >= 0; n--)t.addChild(new es(this.player(), { rate: `${e[n]}x` })); return t; }, e.prototype.updateARIAAttributes = function() { this.el().setAttribute('aria-valuenow', this.player().playbackRate()); }, e.prototype.handleClick = function(t) { for (var e = this.player().playbackRate(), n = this.playbackRates(), i = n[0], r = 0; r < n.length; r++) if (n[r] > e) { i = n[r]; break; } this.player().playbackRate(i); }, e.prototype.playbackRates = function() { return this.options_.playbackRates || this.options_.playerOptions && this.options_.playerOptions.playbackRates; }, e.prototype.playbackRateSupported = function() { return this.player().tech_ && this.player().tech_.featuresPlaybackRate && this.playbackRates() && this.playbackRates().length > 0; }, e.prototype.updateVisibility = function(t) { this.playbackRateSupported() ? this.removeClass('vjs-hidden') : this.addClass('vjs-hidden'); }, e.prototype.updateLabel = function(t) { this.playbackRateSupported() && (this.labelEl_.innerHTML = `${this.player().playbackRate()}x`); }, e; }(Fo)); ns.prototype.controlText_ = 'Playback Rate', Bi.registerComponent('PlaybackRateMenuButton', ns); const is = (function(t) { function e() { return Zn(this, e), ei(this, t.apply(this, arguments)); } return ti(e, t), e.prototype.buildCSSClass = function() { return `vjs-spacer ${t.prototype.buildCSSClass.call(this)}`; }, e.prototype.createEl = function() { return t.prototype.createEl.call(this, 'div', { className: this.buildCSSClass() }); }, e; }(Bi)); Bi.registerComponent('Spacer', is); const rs = (function(t) { function e() { return Zn(this, e), ei(this, t.apply(this, arguments)); } return ti(e, t), e.prototype.buildCSSClass = function() { return `vjs-custom-control-spacer ${t.prototype.buildCSSClass.call(this)}`; }, e.prototype.createEl = function() { const e = t.prototype.createEl.call(this, { className: this.buildCSSClass() }); return e.innerHTML = ' ', e; }, e; }(is)); Bi.registerComponent('CustomControlSpacer', rs); const os = (function(t) { function e() { return Zn(this, e), ei(this, t.apply(this, arguments)); } return ti(e, t), e.prototype.createEl = function() { return t.prototype.createEl.call(this, 'div', { className: 'vjs-control-bar', dir: 'ltr' }, { role: 'group' }); }, e; }(Bi)); os.prototype.options_ = { children: ['playToggle', 'volumePanel', 'currentTimeDisplay', 'timeDivider', 'durationDisplay', 'progressControl', 'liveDisplay', 'remainingTimeDisplay', 'customControlSpacer', 'playbackRateMenuButton', 'chaptersButton', 'descriptionsButton', 'subsCapsButton', 'fullscreenToggle'] }, Bi.registerComponent('ControlBar', os); const ss = (function(t) { function e(n, i) { Zn(this, e); const r = ei(this, t.call(this, n, i)); return r.on(n, 'error', r.open), r; } return ti(e, t), e.prototype.buildCSSClass = function() { return `vjs-error-display ${t.prototype.buildCSSClass.call(this)}`; }, e.prototype.content = function() { const t = this.player().error(); return t ? this.localize(t.message) : ''; }, e; }(Zi)); ss.prototype.options_ = ot(Zi.prototype.options_, { pauseOnOpen: !1, fillAlways: !0, temporary: !1, uncloseable: !0 }), Bi.registerComponent('ErrorDisplay', ss); const as = ['#000', 'Black']; const ls = ['#00F', 'Blue']; const cs = ['#0FF', 'Cyan']; const us = ['#0F0', 'Green']; const hs = ['#F0F', 'Magenta']; const ps = ['#F00', 'Red']; const ds = ['#FFF', 'White']; const fs = ['#FF0', 'Yellow']; const ys = ['1', 'Opaque']; const gs = ['0.5', 'Semi-Transparent']; const vs = ['0', 'Transparent']; const ms = { backgroundColor: { selector: '.vjs-bg-color > select', id: 'captions-background-color-%s', label: 'Color', options: [as, ds, ps, us, ls, fs, hs, cs] }, backgroundOpacity: { selector: '.vjs-bg-opacity > select', id: 'captions-background-opacity-%s', label: 'Transparency', options: [ys, gs, vs] }, color: { selector: '.vjs-fg-color > select', id: 'captions-foreground-color-%s', label: 'Color', options: [ds, as, ps, us, ls, fs, hs, cs] }, edgeStyle: { selector: '.vjs-edge-style > select', id: '%s', label: 'Text Edge Style', options: [['none', 'None'], ['raised', 'Raised'], ['depressed', 'Depressed'], ['uniform', 'Uniform'], ['dropshadow', 'Dropshadow']] }, fontFamily: { selector: '.vjs-font-family > select', id: 'captions-font-family-%s', label: 'Font Family', options: [['proportionalSansSerif', 'Proportional Sans-Serif'], ['monospaceSansSerif', 'Monospace Sans-Serif'], ['proportionalSerif', 'Proportional Serif'], ['monospaceSerif', 'Monospace Serif'], ['casual', 'Casual'], ['script', 'Script'], ['small-caps', 'Small Caps']] }, fontPercent: { selector: '.vjs-font-percent > select', id: 'captions-font-size-%s', label: 'Font Size', options: [['0.50', '50%'], ['0.75', '75%'], ['1.00', '100%'], ['1.25', '125%'], ['1.50', '150%'], ['1.75', '175%'], ['2.00', '200%'], ['3.00', '300%'], ['4.00', '400%']], default: 2, parser(t) { return t === '1.00' ? null : Number(t); } }, textOpacity: { selector: '.vjs-text-opacity > select', id: 'captions-foreground-opacity-%s', label: 'Transparency', options: [ys, gs] }, windowColor: { selector: '.vjs-window-color > select', id: 'captions-window-color-%s', label: 'Color' }, windowOpacity: { selector: '.vjs-window-opacity > select', id: 'captions-window-opacity-%s', label: 'Transparency', options: [vs, gs, ys] } }; ms.windowColor.options = ms.backgroundColor.options; const _s = (function(t) {
 function e(n, i) { Zn(this, e), i.temporary = !1; const r = ei(this, t.call(this, n, i)); return r.updateDisplay = ki(r, r.updateDisplay), r.fill(), r.hasBeenOpened_ = r.hasBeenFilled_ = !0, r.endDialog = b('p', { className: 'vjs-control-text', textContent: r.localize('End of dialog window.') }), r.el().appendChild(r.endDialog), r.setDefaults(), i.persistTextTrackSettings === undefined && (r.options_.persistTextTrackSettings = r.options_.playerOptions.persistTextTrackSettings), r.on(r.$('.vjs-done-button'), 'click', () => { r.saveSettings(), r.close(); }), r.on(r.$('.vjs-default-button'), 'click', () => { r.setDefaults(), r.updateDisplay(); }), o(ms, (t) => { r.on(r.$(t.selector), 'change', r.updateDisplay); }), r.options_.persistTextTrackSettings && r.restoreSettings(), r; } return ti(e, t), e.prototype.dispose = function() { this.endDialog = null, t.prototype.dispose.call(this); }, e.prototype.createElSelect_ = function(t) { const e = this; const n = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ''; const i = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'label'; const r = ms[t]; const o = r.id.replace('%s', this.id_); return [`<${i} id="${o}" class="${i === 'label' ? 'vjs-label' : ''}">`, this.localize(r.label), `</${i}>`, `<select aria-labelledby="${n !== '' ? `${n} ` : ''}${o}">`].concat(r.options.map((t) => { const i = `${o}-${t[1]}`; return [`<option id="${i}" value="${t[0]}" `, `aria-labelledby="${n !== '' ? `${n} ` : ''}${o} ${i}">`, e.localize(t[1]), '</option>'].join(''); })).concat('</select>').join(''); }, e.prototype.createElFgColor_ = function() { const t = `captions-text-legend-${this.id_}`; return ['<fieldset class="vjs-fg-color vjs-track-setting">', `<legend id="${t}">`, this.localize('Text'), '</legend>', this.createElSelect_('color', t), '<span class="vjs-text-opacity vjs-opacity">', this.createElSelect_('textOpacity', t), '</span>', '</fieldset>'].join(''); }, e.prototype.createElBgColor_ = function() { const t = `captions-background-${this.id_}`; return ['<fieldset class="vjs-bg-color vjs-track-setting">', `<legend id="${t}">`, this.localize('Background'), '</legend>', this.createElSelect_('backgroundColor', t), '<span class="vjs-bg-opacity vjs-opacity">', this.createElSelect_('backgroundOpacity', t), '</span>', '</fieldset>'].join(''); }, e.prototype.createElWinColor_ = function() { const t = `captions-window-${this.id_}`; return ['<fieldset class="vjs-window-color vjs-track-setting">', `<legend id="${t}">`, this.localize('Window'), '</legend>', this.createElSelect_('windowColor', t), '<span class="vjs-window-opacity vjs-opacity">', this.createElSelect_('windowOpacity', t), '</span>', '</fieldset>'].join(''); }, e.prototype.createElColors_ = function() { return b('div', { className: 'vjs-track-settings-colors', innerHTML: [this.createElFgColor_(), this.createElBgColor_(), this.createElWinColor_()].join('') }); }, e.prototype.createElFont_ = function() {
 return b('div', { className: 'vjs-track-settings-font">',
innerHTML: ['<fieldset class="vjs-font-percent vjs-track-setting">', this.createElSelect_('fontPercent', '', 'legend'), '</fieldset>', '<fieldset class="vjs-edge-style vjs-track-setting">', this.createElSelect_('edgeStyle', '', 'legend'), '</fieldset>', '<fieldset class="vjs-font-family vjs-track-setting">', this.createElSelect_('fontFamily', '', 'legend'), '</fieldset>'].join('') });
}, e.prototype.createElControls_ = function() { const t = this.localize('restore all settings to the default values'); return b('div', { className: 'vjs-track-settings-controls', innerHTML: [`<button class="vjs-default-button" title="${t}">`, this.localize('Reset'), `<span class="vjs-control-text"> ${t}</span>`, '</button>', `<button class="vjs-done-button">${this.localize('Done')}</button>`].join('') }); }, e.prototype.content = function() { return [this.createElColors_(), this.createElFont_(), this.createElControls_()]; }, e.prototype.label = function() { return this.localize('Caption Settings Dialog'); }, e.prototype.description = function() { return this.localize('Beginning of dialog window. Escape will cancel and close the window.'); }, e.prototype.buildCSSClass = function() { return `${t.prototype.buildCSSClass.call(this)} vjs-text-track-settings`; }, e.prototype.getValues = function() { const t = this; return s(ms, (e, n, i) => { const r = ae(t.$(n.selector), n.parser); return r !== undefined && (e[i] = r), e; }, {}); }, e.prototype.setValues = function(t) { const e = this; o(ms, (n, i) => { le(e.$(n.selector), t[i], n.parser); }); }, e.prototype.setDefaults = function() { const t = this; o(ms, (e) => { const n = e.hasOwnProperty('default') ? e.default : 0; t.$(e.selector).selectedIndex = n; }); }, e.prototype.restoreSettings = function() { let t = void 0; try { t = JSON.parse(tn.localStorage.getItem('vjs-text-track-settings')); } catch (e) { ci.warn(e); }t && this.setValues(t); }, e.prototype.saveSettings = function() { if (this.options_.persistTextTrackSettings) { const t = this.getValues(); try { Object.keys(t).length ? tn.localStorage.setItem('vjs-text-track-settings', JSON.stringify(t)) : tn.localStorage.removeItem('vjs-text-track-settings'); } catch (e) { ci.warn(e); } } }, e.prototype.updateDisplay = function() { const t = this.player_.getChild('textTrackDisplay'); t && t.updateDisplay(); }, e.prototype.conditionalBlur_ = function() { this.previouslyActiveEl_ = null, this.off(sn, 'keydown', this.handleKeyDown); const t = this.player_.controlBar; const e = t && t.subsCapsButton; const n = t && t.captionsButton; e ? e.focus() : n && n.focus(); }, e;
}(Zi)); Bi.registerComponent('TextTrackSettings', _s); const bs = ni(["Text Tracks are being loaded from another origin but the crossorigin attribute isn't used.\n            This may prevent text tracks from loading."], ["Text Tracks are being loaded from another origin but the crossorigin attribute isn't used.\n            This may prevent text tracks from loading."]); const Ts = (function(t) { function e(n, i, r) { Zn(this, e); const o = ei(this, t.call(this, n, i, r)); const s = i.source; let a = !1; if (s && (o.el_.currentSrc !== s.src || i.tag && i.tag.initNetworkState_ === 3) ? o.setSource(s) : o.handleLateInit_(o.el_), o.el_.hasChildNodes()) { for (var l = o.el_.childNodes, c = l.length, u = []; c--;) { const h = l[c]; h.nodeName.toLowerCase() === 'track' && (o.featuresNativeTextTracks ? (o.remoteTextTrackEls().addTrackElement_(h), o.remoteTextTracks().addTrack(h.track), o.textTracks().addTrack(h.track), a || o.el_.hasAttribute('crossorigin') || !vr(h.src) || (a = !0)) : u.push(h)); } for (let p = 0; p < u.length; p++)o.el_.removeChild(u[p]); } return o.proxyNativeTracks_(), o.featuresNativeTextTracks && a && ci.warn(ui(bs)), o.restoreMetadataTracksInIOSNativePlayer_(), (An || hn || wn) && !0 === i.nativeControlsForTouch && o.setControls(!0), o.proxyWebkitFullscreen_(), o.triggerReady(), o; } return ti(e, t), e.prototype.dispose = function() { e.disposeMediaElement(this.el_), this.options_ = null, t.prototype.dispose.call(this); }, e.prototype.restoreMetadataTracksInIOSNativePlayer_ = function() { const t = this.textTracks(); let e = void 0; const n = function() { e = []; for (let n = 0; n < t.length; n++) { const i = t[n]; i.kind === 'metadata' && e.push({ track: i, storedMode: i.mode }); } }; n(), t.addEventListener('change', n), this.on('dispose', () => t.removeEventListener('change', n)); const i = function r() { for (let n = 0; n < e.length; n++) { const i = e[n]; i.track.mode === 'disabled' && i.track.mode !== i.storedMode && (i.track.mode = i.storedMode); }t.removeEventListener('change', r); }; this.on('webkitbeginfullscreen', () => { t.removeEventListener('change', n), t.removeEventListener('change', i), t.addEventListener('change', i); }), this.on('webkitendfullscreen', () => { t.removeEventListener('change', n), t.addEventListener('change', n), t.removeEventListener('change', i); }); }, e.prototype.proxyNativeTracks_ = function() { const t = this; Br.names.forEach((e) => { const n = Br[e]; const i = t.el()[n.getterName]; const r = t[n.getterName](); if (t[`featuresNative${n.capitalName}Tracks`] && i && i.addEventListener) { const o = { change(t) { r.trigger({ type: 'change', target: r, currentTarget: r, srcElement: r }); }, addtrack(t) { r.addTrack(t.track); }, removetrack(t) { r.removeTrack(t.track); } }; const s = function() { for (var t = [], e = 0; e < r.length; e++) { for (var n = !1, o = 0; o < i.length; o++) if (i[o] === r[e]) { n = !0; break; }n || t.push(r[e]); } for (;t.length;)r.removeTrack(t.shift()); }; Object.keys(o).forEach((e) => { const n = o[e]; i.addEventListener(e, n), t.on('dispose', (t) => i.removeEventListener(e, n)); }), t.on('loadstart', s), t.on('dispose', (e) => t.off('loadstart', s)); } }); }, e.prototype.createEl = function() { let t = this.options_.tag; if (!t || !this.options_.playerElIngest && !this.movingMediaElementInDOM) { if (t) { const n = t.cloneNode(!0); t.parentNode && t.parentNode.insertBefore(n, t), e.disposeMediaElement(t), t = n; } else { t = sn.createElement('video'); const i = this.options_.tag && P(this.options_.tag); const r = ot({}, i); An && !0 === this.options_.nativeControlsForTouch || delete r.controls, I(t, a(r, { id: this.options_.techId, class: 'vjs-tech' })); }t.playerId = this.options_.playerId; } typeof this.options_.preload !== 'undefined' && D(t, 'preload', this.options_.preload); for (let o = ['loop', 'muted', 'playsinline', 'autoplay'], s = 0; s < o.length; s++) { const l = o[s]; const c = this.options_[l]; void 0 !== c && (c ? D(t, l, l) : M(t, l), t[l] = c); } return t; }, e.prototype.handleLateInit_ = function(t) { if (t.networkState !== 0 && t.networkState !== 3) { if (t.readyState === 0) { let e = !1; const n = function() { e = !0; }; this.on('loadstart', n); const i = function() { e || this.trigger('loadstart'); }; return this.on('loadedmetadata', i), void this.ready(function() { this.off('loadstart', n), this.off('loadedmetadata', i), e || this.trigger('loadstart'); }); } const r = ['loadstart']; r.push('loadedmetadata'), t.readyState >= 2 && r.push('loadeddata'), t.readyState >= 3 && r.push('canplay'), t.readyState >= 4 && r.push('canplaythrough'), this.ready(function() { r.forEach(function(t) { this.trigger(t); }, this); }); } }, e.prototype.setCurrentTime = function(t) { try { this.el_.currentTime = t; } catch (e) { ci(e, 'Video is not ready. (Video.js)'); } }, e.prototype.duration = function() { const t = this; if (this.el_.duration === Infinity && yn && In && this.el_.currentTime === 0) { const e = function n() { t.el_.currentTime > 0 && (t.el_.duration === Infinity && t.trigger('durationchange'), t.off('timeupdate', n)); }; return this.on('timeupdate', e), NaN; } return this.el_.duration || NaN; }, e.prototype.width = function() { return this.el_.offsetWidth; }, e.prototype.height = function() { return this.el_.offsetHeight; }, e.prototype.proxyWebkitFullscreen_ = function() { const t = this; if ('webkitDisplayingFullscreen' in this.el_) { const e = function() { this.trigger('fullscreenchange', { isFullscreen: !1 }); }; const n = function() { 'webkitPresentationMode' in this.el_ && this.el_.webkitPresentationMode !== 'picture-in-picture' && (this.one('webkitendfullscreen', e), this.trigger('fullscreenchange', { isFullscreen: !0 })); }; this.on('webkitbeginfullscreen', n), this.on('dispose', () => { t.off('webkitbeginfullscreen', n), t.off('webkitendfullscreen', e); }); } }, e.prototype.supportsFullScreen = function() { if (typeof this.el_.webkitEnterFullScreen === 'function') { const t = tn.navigator && tn.navigator.userAgent || ''; if (/Android/.test(t) || !/Chrome|Mac OS X 10.5/.test(t)) return !0; } return !1; }, e.prototype.enterFullScreen = function() { const t = this.el_; t.paused && t.networkState <= t.HAVE_METADATA ? (this.el_.play(), this.setTimeout(() => { t.pause(), t.webkitEnterFullScreen(); }, 0)) : t.webkitEnterFullScreen(); }, e.prototype.exitFullScreen = function() { this.el_.webkitExitFullScreen(); }, e.prototype.src = function(t) { if (t === undefined) return this.el_.src; this.setSrc(t); }, e.prototype.reset = function() { e.resetMediaElement(this.el_); }, e.prototype.currentSrc = function() { return this.currentSource_ ? this.currentSource_.src : this.el_.currentSrc; }, e.prototype.setControls = function(t) { this.el_.controls = !!t; }, e.prototype.addTextTrack = function(e, n, i) { return this.featuresNativeTextTracks ? this.el_.addTextTrack(e, n, i) : t.prototype.addTextTrack.call(this, e, n, i); }, e.prototype.createRemoteTextTrack = function(e) { if (!this.featuresNativeTextTracks) return t.prototype.createRemoteTextTrack.call(this, e); const n = sn.createElement('track'); return e.kind && (n.kind = e.kind), e.label && (n.label = e.label), (e.language || e.srclang) && (n.srclang = e.language || e.srclang), e.default && (n.default = e.default), e.id && (n.id = e.id), e.src && (n.src = e.src), n; }, e.prototype.addRemoteTextTrack = function(e, n) { const i = t.prototype.addRemoteTextTrack.call(this, e, n); return this.featuresNativeTextTracks && this.el().appendChild(i), i; }, e.prototype.removeRemoteTextTrack = function(e) { if (t.prototype.removeRemoteTextTrack.call(this, e), this.featuresNativeTextTracks) for (let n = this.$$('track'), i = n.length; i--;)e !== n[i] && e !== n[i].track || this.el().removeChild(n[i]); }, e.prototype.getVideoPlaybackQuality = function() { if (typeof this.el().getVideoPlaybackQuality === 'function') return this.el().getVideoPlaybackQuality(); const t = {}; return typeof this.el().webkitDroppedFrameCount !== 'undefined' && typeof this.el().webkitDecodedFrameCount !== 'undefined' && (t.droppedVideoFrames = this.el().webkitDroppedFrameCount, t.totalVideoFrames = this.el().webkitDecodedFrameCount), tn.performance && typeof tn.performance.now === 'function' ? t.creationTime = tn.performance.now() : tn.performance && tn.performance.timing && typeof tn.performance.timing.navigationStart === 'number' && (t.creationTime = tn.Date.now() - tn.performance.timing.navigationStart), t; }, e; }(eo)); if (g()) { Ts.TEST_VID = sn.createElement('video'); const Cs = sn.createElement('track'); Cs.kind = 'captions', Cs.srclang = 'en', Cs.label = 'English', Ts.TEST_VID.appendChild(Cs); }Ts.isSupported = function() { try { Ts.TEST_VID.volume = 0.5; } catch (t) { return !1; } return !(!Ts.TEST_VID || !Ts.TEST_VID.canPlayType); }, Ts.canPlayType = function(t) { return Ts.TEST_VID.canPlayType(t); }, Ts.canPlaySource = function(t, e) { return Ts.canPlayType(t.type); }, Ts.canControlVolume = function() { try { const t = Ts.TEST_VID.volume; return Ts.TEST_VID.volume = t / 2 + 0.1, t !== Ts.TEST_VID.volume; } catch (e) { return !1; } }, Ts.canControlMute = function() { try { const t = Ts.TEST_VID.muted; return Ts.TEST_VID.muted = !0, t !== Ts.TEST_VID.muted; } catch (e) { return !1; } }, Ts.canControlPlaybackRate = function() { if (yn && In && Pn < 58) return !1; try { const t = Ts.TEST_VID.playbackRate; return Ts.TEST_VID.playbackRate = t / 2 + 0.1, t !== Ts.TEST_VID.playbackRate; } catch (e) { return !1; } }, Ts.supportsNativeTextTracks = function() { return Rn; }, Ts.supportsNativeVideoTracks = function() { return !(!Ts.TEST_VID || !Ts.TEST_VID.videoTracks); }, Ts.supportsNativeAudioTracks = function() { return !(!Ts.TEST_VID || !Ts.TEST_VID.audioTracks); }, Ts.Events = ['loadstart', 'suspend', 'abort', 'error', 'emptied', 'stalled', 'loadedmetadata', 'loadeddata', 'canplay', 'canplaythrough', 'playing', 'waiting', 'seeking', 'seeked', 'ended', 'durationchange', 'timeupdate', 'progress', 'play', 'pause', 'ratechange', 'resize', 'volumechange'], Ts.prototype.featuresVolumeControl = Ts.canControlVolume(), Ts.prototype.featuresMuteControl = Ts.canControlMute(), Ts.prototype.featuresPlaybackRate = Ts.canControlPlaybackRate(), Ts.prototype.movingMediaElementInDOM = !dn, Ts.prototype.featuresFullscreenResize = !0, Ts.prototype.featuresProgressEvents = !0, Ts.prototype.featuresTimeupdateEvents = !0, Ts.prototype.featuresNativeTextTracks = Ts.supportsNativeTextTracks(), Ts.prototype.featuresNativeVideoTracks = Ts.supportsNativeVideoTracks(), Ts.prototype.featuresNativeAudioTracks = Ts.supportsNativeAudioTracks(); const Es = Ts.TEST_VID && Ts.TEST_VID.constructor.prototype.canPlayType; const ws = /^application\/(?:x-|vnd\.apple\.)mpegurl/i; const Ss = /^video\/mp4/i; Ts.patchCanPlayType = function() { gn >= 4 && !Sn ? Ts.TEST_VID.constructor.prototype.canPlayType = function(t) { return t && ws.test(t) ? 'maybe' : Es.call(this, t); } : En && (Ts.TEST_VID.constructor.prototype.canPlayType = function(t) { return t && Ss.test(t) ? 'maybe' : Es.call(this, t); }); }, Ts.unpatchCanPlayType = function() { const t = Ts.TEST_VID.constructor.prototype.canPlayType; return Ts.TEST_VID.constructor.prototype.canPlayType = Es, t; }, Ts.patchCanPlayType(), Ts.disposeMediaElement = function(t) { if (t) { for (t.parentNode && t.parentNode.removeChild(t); t.hasChildNodes();)t.removeChild(t.firstChild); t.removeAttribute('src'), typeof t.load === 'function' && (function() { try { t.load(); } catch (e) {} }()); } }, Ts.resetMediaElement = function(t) { if (t) { for (let e = t.querySelectorAll('source'), n = e.length; n--;)t.removeChild(e[n]); t.removeAttribute('src'), typeof t.load === 'function' && (function() { try { t.load(); } catch (e) {} }()); } }, ['muted', 'defaultMuted', 'autoplay', 'controls', 'loop', 'playsinline'].forEach((t) => { Ts.prototype[t] = function() { return this.el_[t] || this.el_.hasAttribute(t); }; }), ['muted', 'defaultMuted', 'autoplay', 'loop', 'playsinline'].forEach((t) => { Ts.prototype[`set${it(t)}`] = function(e) { this.el_[t] = e, e ? this.el_.setAttribute(t, t) : this.el_.removeAttribute(t); }; }), ['paused', 'currentTime', 'buffered', 'volume', 'poster', 'preload', 'error', 'seeking', 'seekable', 'ended', 'playbackRate', 'defaultPlaybackRate', 'played', 'networkState', 'readyState', 'videoWidth', 'videoHeight'].forEach((t) => { Ts.prototype[t] = function() { return this.el_[t]; }; }), ['volume', 'src', 'poster', 'preload', 'playbackRate', 'defaultPlaybackRate'].forEach((t) => { Ts.prototype[`set${it(t)}`] = function(e) { this.el_[t] = e; }; }), ['pause', 'load', 'play'].forEach((t) => { Ts.prototype[t] = function() { return this.el_[t](); }; }), eo.withSourceHandlers(Ts), Ts.nativeSourceHandler = {}, Ts.nativeSourceHandler.canPlayType = function(t) { try { return Ts.TEST_VID.canPlayType(t); } catch (e) { return ''; } }, Ts.nativeSourceHandler.canHandleSource = function(t, e) { if (t.type) return Ts.nativeSourceHandler.canPlayType(t.type); if (t.src) { const n = gr(t.src); return Ts.nativeSourceHandler.canPlayType(`video/${n}`); } return ''; }, Ts.nativeSourceHandler.handleSource = function(t, e, n) { e.setSrc(t.src); }, Ts.nativeSourceHandler.dispose = function() {}, Ts.registerSourceHandler(Ts.nativeSourceHandler), eo.registerTech('Html5', Ts); const ks = ni(["\n        Using the tech directly can be dangerous. I hope you know what you're doing.\n        See https://github.com/videojs/video.js/issues/2617 for more info.\n      "], ["\n        Using the tech directly can be dangerous. I hope you know what you're doing.\n        See https://github.com/videojs/video.js/issues/2617 for more info.\n      "]); const Is = ['progress', 'abort', 'suspend', 'emptied', 'stalled', 'loadedmetadata', 'loadeddata', 'timeupdate', 'ratechange', 'resize', 'volumechange', 'texttrackchange']; var Ps = (function(t) {
 function e(n, i, r) { if (Zn(this, e), n.id = n.id || `vjs_video_${q()}`, i = a(e.getTagSettings(n), i), i.initChildren = !1, i.createEl = !1, i.evented = !1, i.reportTouchActivity = !1, !i.language) if (typeof n.closest === 'function') { const o = n.closest('[lang]'); o && o.getAttribute && (i.language = o.getAttribute('lang')); } else for (let s = n; s && s.nodeType === 1;) { if (P(s).hasOwnProperty('lang')) { i.language = s.getAttribute('lang'); break; }s = s.parentNode; } const l = ei(this, t.call(this, null, i, r)); if (l.isReady_ = !1, l.hasStarted_ = !1, l.userActive_ = !1, !l.options_ || !l.options_.techOrder || !l.options_.techOrder.length) throw new Error('No techOrder specified. Did you overwrite videojs.options instead of just changing the properties you want to override?'); if (l.tag = n, l.tagAttributes = n && P(n), l.language(l.options_.language), i.languages) { const c = {}; Object.getOwnPropertyNames(i.languages).forEach((t) => { c[t.toLowerCase()] = i.languages[t]; }), l.languages_ = c; } else l.languages_ = e.prototype.options_.languages; l.cache_ = {}, l.poster_ = i.poster || '', l.controls_ = !!i.controls, l.cache_.lastVolume = 1, n.controls = !1, n.removeAttribute('controls'), l.scrubbing_ = !1, l.el_ = l.createEl(), et(l, { eventBusKey: 'el_' }); const u = ot(l.options_); if (i.plugins) { const h = i.plugins; Object.keys(h).forEach(function(t) { if (typeof this[t] !== 'function') throw new Error(`plugin "${t}" does not exist`); this[t](h[t]); }, l); } return l.options_.playerOptions = u, l.middleware_ = [], l.initChildren(), l.isAudio(n.nodeName.toLowerCase() === 'audio'), l.controls() ? l.addClass('vjs-controls-enabled') : l.addClass('vjs-controls-disabled'), l.el_.setAttribute('role', 'region'), l.isAudio() ? l.el_.setAttribute('aria-label', l.localize('Audio Player')) : l.el_.setAttribute('aria-label', l.localize('Video Player')), l.isAudio() && l.addClass('vjs-audio'), l.flexNotSupported_() && l.addClass('vjs-no-flex'), dn || yn || l.addClass('vjs-workinghover'), e.players[l.id_] = l, l.userActive(!0), l.reportUserActivity(), l.listenForUserActivity_(), l.on('fullscreenchange', l.handleFullscreenChange_), l.on('stageclick', l.handleStageClick_), l.changingSrc_ = !1, l.playWaitingForReady_ = !1, l.playOnLoadstart_ = null, l.forceAutoplayInChrome_(), l; } return ti(e, t), e.prototype.dispose = function() { this.trigger('dispose'), this.off('dispose'), this.styleEl_ && this.styleEl_.parentNode && (this.styleEl_.parentNode.removeChild(this.styleEl_), this.styleEl_ = null), e.players[this.id_] = null, this.tag && this.tag.player && (this.tag.player = null), this.el_ && this.el_.player && (this.el_.player = null), this.tech_ && this.tech_.dispose(), this.playerElIngest_ && (this.playerElIngest_ = null), this.tag && (this.tag = null), t.prototype.dispose.call(this); }, e.prototype.createEl = function() { let e = this.tag; let n = void 0; let i = this.playerElIngest_ = e.parentNode && e.parentNode.hasAttribute && e.parentNode.hasAttribute('data-vjs-player'); const r = this.tag.tagName.toLowerCase() === 'video-js'; i ? n = this.el_ = e.parentNode : r || (n = this.el_ = t.prototype.createEl.call(this, 'div')); const o = P(e); if (r) { for (n = this.el_ = e, e = this.tag = sn.createElement('video'); n.children.length;)e.appendChild(n.firstChild); E(n, 'video-js') || w(n, 'video-js'), n.appendChild(e), i = this.playerElIngest_ = n; } if (e.setAttribute('tabindex', '-1'), e.removeAttribute('width'), e.removeAttribute('height'), Object.getOwnPropertyNames(o).forEach((t) => { t === 'class' ? (n.className += ` ${o[t]}`, r && (e.className += ` ${o[t]}`)) : (n.setAttribute(t, o[t]), r && e.setAttribute(t, o[t])); }), e.playerId = e.id, e.id += '_html5_api', e.className = 'vjs-tech', e.player = n.player = this, this.addClass('vjs-paused'), !0 !== tn.VIDEOJS_NO_DYNAMIC_STYLE) { this.styleEl_ = wi('vjs-styles-dimensions'); const s = pi('.vjs-styles-defaults'); const a = pi('head'); a.insertBefore(this.styleEl_, s ? s.nextSibling : a.firstChild); } this.width(this.options_.width), this.height(this.options_.height), this.fluid(this.options_.fluid), this.aspectRatio(this.options_.aspectRatio); for (let l = e.getElementsByTagName('a'), c = 0; c < l.length; c++) { const u = l.item(c); w(u, 'vjs-hidden'), u.setAttribute('hidden', 'hidden'); } return e.initNetworkState_ = e.networkState, e.parentNode && !i && e.parentNode.insertBefore(n, e), C(e, n), this.children_.unshift(e), this.el_.setAttribute('lang', this.language_), this.el_ = n, n; }, e.prototype.width = function(t, e) { return this.dimension('width', t, e); }, e.prototype.height = function(t, e) { return this.dimension('height', t, e); }, e.prototype.dimension = function(t, e, n) { const i = `${t}_`; if (e === undefined) return this[i] || 0; if (e === '') return this[i] = undefined, void this.updateStyleEl_(); const r = parseFloat(e); if (isNaN(r)) return void ci.error(`Improper value "${e}" supplied for for ${t}`); this[i] = r, this.updateStyleEl_(), this.isReady_ && !n && this.trigger('playerresize'); }, e.prototype.fluid = function(t) { if (t === undefined) return !!this.fluid_; this.fluid_ = !!t, t ? this.addClass('vjs-fluid') : this.removeClass('vjs-fluid'), this.updateStyleEl_(); }, e.prototype.aspectRatio = function(t) { if (t === undefined) return this.aspectRatio_; if (!/^\d+\:\d+$/.test(t)) throw new Error('Improper value supplied for aspect ratio. The format should be width:height, for example 16:9.'); this.aspectRatio_ = t, this.fluid(!0), this.updateStyleEl_(); }, e.prototype.updateStyleEl_ = function() { if (!0 === tn.VIDEOJS_NO_DYNAMIC_STYLE) { const t = typeof this.width_ === 'number' ? this.width_ : this.options_.width; const e = typeof this.height_ === 'number' ? this.height_ : this.options_.height; const n = this.tech_ && this.tech_.el(); return void (n && (t >= 0 && (n.width = t), e >= 0 && (n.height = e))); } let i = void 0; let r = void 0; let o = void 0; let s = void 0; o = this.aspectRatio_ !== undefined && this.aspectRatio_ !== 'auto' ? this.aspectRatio_ : this.videoWidth() > 0 ? `${this.videoWidth()}:${this.videoHeight()}` : '16:9'; const a = o.split(':'); const l = a[1] / a[0]; i = this.width_ !== undefined ? this.width_ : this.height_ !== undefined ? this.height_ / l : this.videoWidth() || 300, r = this.height_ !== undefined ? this.height_ : i * l, s = /^[^a-zA-Z]/.test(this.id()) ? `dimensions-${this.id()}` : `${this.id()}-dimensions`, this.addClass(s), Si(this.styleEl_, `\n      .${s} {\n        width: ${i}px;\n        height: ${r}px;\n      }\n\n      .${s}.vjs-fluid {\n        padding-top: ${100 * l}%;\n      }\n    `); }, e.prototype.loadTech_ = function(t, e) { const n = this; this.tech_ && this.unloadTech_(); const i = it(t); const r = t.charAt(0).toLowerCase() + t.slice(1); i !== 'Html5' && this.tag && (eo.getTech('Html5').disposeMediaElement(this.tag), this.tag.player = null, this.tag = null), this.techName_ = i, this.isReady_ = !1; const o = { source: e, nativeControlsForTouch: this.options_.nativeControlsForTouch, playerId: this.id(), techId: `${this.id()}_${i}_api`, autoplay: this.options_.autoplay, playsinline: this.options_.playsinline, preload: this.options_.preload, loop: this.options_.loop, muted: this.options_.muted, poster: this.poster(), language: this.language(), playerElIngest: this.playerElIngest_ || !1, 'vtt.js': this.options_['vtt.js'], swf: this.options_.swf, hlsConfig: this.options_.hlsConfig, dashConfig: this.options_.dashConfig }; Vr.names.forEach((t) => { const e = Vr[t]; o[e.getterName] = n[e.privateName]; }), a(o, this.options_[i]), a(o, this.options_[r]), a(o, this.options_[t.toLowerCase()]), this.tag && (o.tag = this.tag), e && e.src === this.cache_.src && this.cache_.currentTime > 0 && (o.startTime = this.cache_.currentTime); const s = eo.getTech(t); if (!s) throw new Error(`No Tech named '${i}' exists! '${i}' should be registered using videojs.registerTech()'`); this.tech_ = new s(this, o), this.tech_.ready(ki(this, this.handleTechReady_), !0), Yi.jsonToTextTracks(this.textTracksJson_ || [], this.tech_), Is.forEach((t) => { n.on(n.tech_, t, n[`handleTech${it(t)}_`]); }), this.on(this.tech_, 'loadstart', this.handleTechLoadStart_), this.on(this.tech_, 'waiting', this.handleTechWaiting_), this.on(this.tech_, 'canplay', this.handleTechCanPlay_), this.on(this.tech_, 'canplaythrough', this.handleTechCanPlayThrough_), this.on(this.tech_, 'playing', this.handleTechPlaying_), this.on(this.tech_, 'ended', this.handleTechEnded_), this.on(this.tech_, 'seeking', this.handleTechSeeking_), this.on(this.tech_, 'seeked', this.handleTechSeeked_), this.on(this.tech_, 'play', this.handleTechPlay_), this.on(this.tech_, 'firstplay', this.handleTechFirstPlay_), this.on(this.tech_, 'pause', this.handleTechPause_), this.on(this.tech_, 'durationchange', this.handleTechDurationChange_), this.on(this.tech_, 'fullscreenchange', this.handleTechFullscreenChange_), this.on(this.tech_, 'error', this.handleTechError_), this.on(this.tech_, 'loadedmetadata', this.updateStyleEl_), this.on(this.tech_, 'posterchange', this.handleTechPosterChange_), this.on(this.tech_, 'textdata', this.handleTechTextData_), this.on(this.tech_, 'x5videoexitfullscreen', this.handleX5ExitFullscreen_), this.usingNativeControls(this.techGet_('controls')), this.controls() && !this.usingNativeControls() && this.addTechControlsListeners_(), this.tech_.el().parentNode === this.el() || i === 'Html5' && this.tag || C(this.tech_.el(), this.el()), this.tag && (this.tag.player = null, this.tag = null); }, e.prototype.unloadTech_ = function() { const t = this; Vr.names.forEach((e) => { const n = Vr[e]; t[n.privateName] = t[n.getterName](); }), this.textTracksJson_ = Yi.textTracksToJson(this.tech_), this.isReady_ = !1, this.tech_.dispose(), this.tech_ = !1; }, e.prototype.tech = function(t) { return t === undefined && ci.warn(ui(ks)), this.tech_; }, e.prototype.addTechControlsListeners_ = function() { this.tech_ && (this.removeTechControlsListeners_(), this.on(this.tech_, 'mousedown', this.handleTechClick_), this.on(this.tech_, 'touchstart', this.handleTechTouchStart_), this.on(this.tech_, 'touchmove', this.handleTechTouchMove_), this.on(this.tech_, 'touchend', this.handleTechTouchEnd_), this.on(this.tech_, 'tap', this.handleTechTap_)); }, e.prototype.removeTechControlsListeners_ = function() { this.tech_ && (this.off(this.tech_, 'tap', this.handleTechTap_), this.off(this.tech_, 'touchstart', this.handleTechTouchStart_), this.off(this.tech_, 'touchmove', this.handleTechTouchMove_), this.off(this.tech_, 'touchend', this.handleTechTouchEnd_), this.off(this.tech_, 'mousedown', this.handleTechClick_)); }, e.prototype.handleTechReady_ = function() { if (this.triggerReady(), this.cache_.volume && this.techCall_('setVolume', this.cache_.volume), this.handleTechPosterChange_(), this.handleTechDurationChange_(), (this.src() || this.currentSrc()) && this.tag && this.options_.autoplay && this.paused()) try { delete this.tag.poster; } catch (t) { ci('deleting tag.poster throws in some browsers', t); } }, e.prototype.handleTechLoadStart_ = function() { this.removeClass('vjs-ended'), this.removeClass('vjs-seeking'), this.error(null), this.paused() ? (this.hasStarted(!1), this.trigger('loadstart')) : (this.trigger('loadstart'), this.trigger('firstplay')); }, e.prototype.hasStarted = function(t) { if (t === undefined) return this.hasStarted_; t !== this.hasStarted_ && (this.hasStarted_ = t, this.hasStarted_ ? (this.addClass('vjs-has-started'), this.trigger('firstplay')) : this.removeClass('vjs-has-started')); }, e.prototype.handleTechPlay_ = function() { this.removeClass('vjs-ended'), this.removeClass('vjs-paused'), this.addClass('vjs-playing'), this.hasStarted(!0), this.trigger('play'); }, e.prototype.handleTechWaiting_ = function() { const t = this; this.addClass('vjs-waiting'), this.trigger('waiting'), this.one('timeupdate', () => t.removeClass('vjs-waiting')); }, e.prototype.handleTechCanPlay_ = function() { this.removeClass('vjs-waiting'), this.trigger('canplay'); }, e.prototype.handleTechCanPlayThrough_ = function() { this.removeClass('vjs-waiting'), this.trigger('canplaythrough'); }, e.prototype.handleTechPlaying_ = function() { this.removeClass('vjs-waiting'), this.trigger('playing'); }, e.prototype.handleTechSeeking_ = function() { this.addClass('vjs-seeking'), this.trigger('seeking'); }, e.prototype.handleTechSeeked_ = function() { this.removeClass('vjs-seeking'), this.trigger('seeked'); }, e.prototype.handleTechFirstPlay_ = function() { this.options_.starttime && (ci.warn('Passing the `starttime` option to the player will be deprecated in 6.0'), this.currentTime(this.options_.starttime)), this.addClass('vjs-has-started'), this.trigger('firstplay'); }, e.prototype.handleTechPause_ = function() { this.removeClass('vjs-playing'), this.addClass('vjs-paused'), this.trigger('pause'); }, e.prototype.handleTechEnded_ = function() { this.addClass('vjs-ended'), this.options_.loop ? (this.currentTime(0), this.play()) : this.paused() || this.pause(), this.trigger('ended'); }, e.prototype.handleTechDurationChange_ = function() { this.duration(this.techGet_('duration')); }, e.prototype.handleTechClick_ = function(t) { U(t) && this.controls_ && (this.paused() ? this.play() : this.pause()); }, e.prototype.handleTechTap_ = function() { this.userActive(!this.userActive()); }, e.prototype.handleTechTouchStart_ = function() { this.userWasActive = this.userActive(); }, e.prototype.handleTechTouchMove_ = function() { this.userWasActive && this.reportUserActivity(); }, e.prototype.handleTechTouchEnd_ = function(t) { t.preventDefault(); }, e.prototype.handleFullscreenChange_ = function() { this.isFullscreen() ? this.addClass('vjs-fullscreen') : this.removeClass('vjs-fullscreen'); }, e.prototype.handleStageClick_ = function() { this.reportUserActivity(); }, e.prototype.toggleFullscreenClass_ = function() { this.isFullscreen() ? this.addClass('vjs-fullscreen') : this.removeClass('vjs-fullscreen'); }, e.prototype.documentFullscreenChange_ = function(t) { const e = Fi; this.isFullscreen(sn[e.fullscreenElement]), !1 === this.isFullscreen() && Y(sn, e.fullscreenchange, ki(this, this.documentFullscreenChange_)), qi || this.trigger('fullscreenchange'); }, e.prototype.handleTechFullscreenChange_ = function(t, e) { e && this.isFullscreen(e.isFullscreen), this.trigger('fullscreenchange'); }, e.prototype.handleTechError_ = function() { const t = this.tech_.error(); this.error(t); }, e.prototype.handleTechTextData_ = function() { let t = null; arguments.length > 1 && (t = arguments[1]), this.trigger('textdata', t); }, e.prototype.handleX5ExitFullscreen_ = function() { this.removeClass('vjs-fullscreen'), this.isFullscreen_ = !this.isFullscreen_; }, e.prototype.getCache = function() { return this.cache_; }, e.prototype.techCall_ = function(t, e) { this.ready(function() { if (t in ro) return te(this.middleware_, this.tech_, t, e); try { this.tech_ && this.tech_[t](e); } catch (n) { throw ci(n), n; } }, !0); }, e.prototype.techGet_ = function(t) { if (this.tech_ && this.tech_.isReady_) { if (t in io) return Zt(this.middleware_, this.tech_, t); try { return this.tech_[t](); } catch (e) { if (this.tech_[t] === undefined) throw ci(`Video.js: ${t} method not defined for ${this.techName_} playback technology.`, e), e; if (e.name === 'TypeError') throw ci(`Video.js: ${t} unavailable on ${this.techName_} playback technology element.`, e), this.tech_.isReady_ = !1, e; throw ci(e), e; } } }, e.prototype.play = function() { const t = this; if (this.playOnLoadstart_ && this.off('loadstart', this.playOnLoadstart_), this.isReady_) { if (!this.changingSrc_ && (this.src() || this.currentSrc())) return this.techGet_('play'); this.playOnLoadstart_ = function() { t.playOnLoadstart_ = null, yt(t.play()); }, this.one('loadstart', this.playOnLoadstart_); } else { if (this.playWaitingForReady_) return; this.playWaitingForReady_ = !0, this.ready(() => { t.playWaitingForReady_ = !1, yt(t.play()); }); } }, e.prototype.pause = function() { this.techCall_('pause'); }, e.prototype.paused = function() { return !1 !== this.techGet_('paused'); }, e.prototype.played = function() { return this.techGet_('played') || ut(0, 0); }, e.prototype.scrubbing = function(t) { if (void 0 === t) return this.scrubbing_; this.scrubbing_ = !!t, t ? this.addClass('vjs-scrubbing') : this.removeClass('vjs-scrubbing'); }, e.prototype.currentTime = function(t) { return void 0 !== t ? (t < 0 && (t = 0), void this.techCall_('setCurrentTime', t)) : (this.cache_.currentTime = this.techGet_('currentTime') || 0, this.cache_.currentTime); }, e.prototype.duration = function(t) { if (t === undefined) return this.cache_.duration !== undefined ? this.cache_.duration : NaN; t = parseFloat(t), t <= 0 && (t = Infinity), t !== this.cache_.duration && (this.cache_.duration = t, t === Infinity ? this.addClass('vjs-live') : this.removeClass('vjs-live'), this.trigger('durationchange')); }, e.prototype.remainingTime = function() { return this.duration() - this.currentTime(); }, e.prototype.remainingTimeDisplay = function() { return Math.floor(this.duration()) - Math.floor(this.currentTime()); }, e.prototype.buffered = function() { let t = this.techGet_('buffered'); return t && t.length || (t = ut(0, 0)), t; }, e.prototype.bufferedPercent = function() { return ht(this.buffered(), this.duration()); }, e.prototype.bufferedEnd = function() { const t = this.buffered(); const e = this.duration(); let n = t.end(t.length - 1); return n > e && (n = e), n; }, e.prototype.volume = function(t) { let e = void 0; return t !== undefined ? (e = Math.max(0, Math.min(1, parseFloat(t))), this.cache_.volume = e, this.techCall_('setVolume', e), void (e > 0 && this.lastVolume_(e))) : (e = parseFloat(this.techGet_('volume')), isNaN(e) ? 1 : e); }, e.prototype.muted = function(t) { return t !== undefined ? void this.techCall_('setMuted', t) : this.techGet_('muted') || !1; }, e.prototype.defaultMuted = function(t) { return t !== undefined ? this.techCall_('setDefaultMuted', t) : this.techGet_('defaultMuted') || !1; }, e.prototype.lastVolume_ = function(t) { return t !== undefined && t !== 0 ? void (this.cache_.lastVolume = t) : this.cache_.lastVolume; }, e.prototype.supportsFullScreen = function() { return this.techGet_('supportsFullScreen') || !1; }, e.prototype.isFullscreen = function(t) { return t !== undefined ? (this.isFullscreen_ = !!t, void this.toggleFullscreenClass_()) : !!this.isFullscreen_; }, e.prototype.requestFullscreen = function() { const t = Fi; this.isFullscreen(!0), t.requestFullscreen ? (G(sn, t.fullscreenchange, ki(this, this.documentFullscreenChange_)), this.el_[t.requestFullscreen]()) : this.tech_.supportsFullScreen() ? this.techCall_('enterFullScreen') : (this.enterFullWindow(), this.trigger('fullscreenchange')); }, e.prototype.exitFullscreen = function() { const t = Fi; this.isFullscreen(!1), t.requestFullscreen ? sn[t.exitFullscreen]() : this.tech_.supportsFullScreen() ? this.techCall_('exitFullScreen') : (this.exitFullWindow(), this.trigger('fullscreenchange')); }, e.prototype.enterFullWindow = function() {
 this.isFullWindow = !0, this.docOrigOverflow = sn.documentElement.style.overflow,
G(sn, 'keydown', ki(this, this.fullWindowOnEscKey)), sn.documentElement.style.overflow = 'hidden', w(sn.body, 'vjs-full-window'), this.trigger('enterFullWindow');
}, e.prototype.fullWindowOnEscKey = function(t) { t.keyCode === 27 && (!0 === this.isFullscreen() ? this.exitFullscreen() : this.exitFullWindow()); }, e.prototype.exitFullWindow = function() { this.isFullWindow = !1, Y(sn, 'keydown', this.fullWindowOnEscKey), sn.documentElement.style.overflow = this.docOrigOverflow, S(sn.body, 'vjs-full-window'), this.trigger('exitFullWindow'); }, e.prototype.canPlayType = function(t) { for (let e = void 0, n = 0, i = this.options_.techOrder; n < i.length; n++) { const r = i[n]; let o = eo.getTech(r); if (o || (o = Bi.getComponent(r)), o) { if (o.isSupported() && (e = o.canPlayType(t))) return e; } else ci.error(`The "${r}" tech is undefined. Skipped browser support check for that tech.`); } return ''; }, e.prototype.selectSource = function(t) { const e = this; const n = this.options_.techOrder.map((t) => [t, eo.getTech(t)]).filter((t) => { const e = t[0]; const n = t[1]; return n ? n.isSupported() : (ci.error(`The "${e}" tech is undefined. Skipped browser support check for that tech.`), !1); }); const i = function(t, e, n) { let i = void 0; return t.some((t) => e.some((e) => { if (i = n(t, e)) return !0; })), i; }; const r = function(t, n) { const i = t[0]; if (t[1].canPlaySource(n, e.options_[i.toLowerCase()])) return { source: n, tech: i }; }; return (this.options_.sourceOrder ? i(t, n, (function(t) { return function(e, n) { return t(n, e); }; }(r))) : i(n, t, r)) || !1; }, e.prototype.src = function(t) { const e = this; if (void 0 === t) return this.cache_.src || this.techGet_('src'); const n = oo(t); if (!n.length) return void this.setTimeout(function() { this.error({ code: 4, message: this.localize(this.options_.notSupportedMessage) }); }, 0); this.cache_.sources = n, this.changingSrc_ = !0, this.cache_.source = n[0], Yt(this, n[0], (t, i) => { if (e.middleware_ = i, e.src_(t)) return n.length > 1 ? e.src(n.slice(1)) : (e.setTimeout(function() { this.error({ code: 4, message: this.localize(this.options_.notSupportedMessage) }); }, 0), void e.triggerReady()); e.changingSrc_ = !1, e.cache_.src = t.src, Jt(i, e.tech_); }); }, e.prototype.src_ = function(t) { const e = this.selectSource([t]); return !e || (rt(e.tech, this.techName_) ? (this.ready(function() { this.tech_.constructor.prototype.hasOwnProperty('setSource') ? this.techCall_('setSource', t) : this.techCall_('src', t.src), this.options_.preload === 'auto' && this.load(); }, !0), !1) : (this.changingSrc_ = !0, this.loadTech_(e.tech, e.source), !1)); }, e.prototype.load = function() { this.techCall_('load'); }, e.prototype.reset = function() { this.loadTech_(this.options_.techOrder[0], null), this.techCall_('reset'); }, e.prototype.currentSources = function() { const t = this.currentSource(); const e = []; return Object.keys(t).length !== 0 && e.push(t), this.cache_.sources || e; }, e.prototype.currentSource = function() { return this.cache_.source || {}; }, e.prototype.currentSrc = function() { return this.currentSource() && this.currentSource().src || ''; }, e.prototype.currentType = function() { return this.currentSource() && this.currentSource().type || ''; }, e.prototype.preload = function(t) { return t !== undefined ? (this.techCall_('setPreload', t), void (this.options_.preload = t)) : this.techGet_('preload'); }, e.prototype.autoplay = function(t) { return t !== undefined ? (this.techCall_('setAutoplay', t), this.options_.autoplay = t, void this.ready(this.forceAutoplayInChrome_)) : this.techGet_('autoplay', t); }, e.prototype.forceAutoplayInChrome_ = function() { this.paused() && (this.autoplay() || this.options_.autoplay) && In && !yn && this.play(); }, e.prototype.playsinline = function(t) { return t !== undefined ? (this.techCall_('setPlaysinline', t), this.options_.playsinline = t, this) : this.techGet_('playsinline'); }, e.prototype.loop = function(t) { return t !== undefined ? (this.techCall_('setLoop', t), void (this.options_.loop = t)) : this.techGet_('loop'); }, e.prototype.poster = function(t) { if (t === undefined) return this.poster_; t || (t = ''), this.poster_ = t, this.trigger('posterchange'); }, e.prototype.handleTechPosterChange_ = function() { !this.poster_ && this.tech_ && this.tech_.poster && (this.poster_ = this.tech_.poster() || '', this.trigger('posterchange')); }, e.prototype.controls = function(t) { if (t === undefined) return !!this.controls_; t = !!t, this.controls_ !== t && (this.controls_ = t, this.usingNativeControls() && this.techCall_('setControls', t), this.controls_ ? (this.removeClass('vjs-controls-disabled'), this.addClass('vjs-controls-enabled'), this.trigger('controlsenabled'), this.usingNativeControls() || this.addTechControlsListeners_()) : (this.removeClass('vjs-controls-enabled'), this.addClass('vjs-controls-disabled'), this.trigger('controlsdisabled'), this.usingNativeControls() || this.removeTechControlsListeners_())); }, e.prototype.usingNativeControls = function(t) { if (t === undefined) return !!this.usingNativeControls_; t = !!t, this.usingNativeControls_ !== t && (this.usingNativeControls_ = t, this.usingNativeControls_ ? (this.addClass('vjs-using-native-controls'), this.trigger('usingnativecontrols')) : (this.removeClass('vjs-using-native-controls'), this.trigger('usingcustomcontrols'))); }, e.prototype.error = function(t) { return t === undefined ? this.error_ || null : t === null ? (this.error_ = t, this.removeClass('vjs-error'), void (this.errorDisplay && this.errorDisplay.close())) : (this.error_ = new pt(t), this.addClass('vjs-error'), ci.error(`(CODE:${this.error_.code} ${pt.errorTypes[this.error_.code]})`, this.error_.message, this.error_), void this.trigger({ type: 'error', data: this.error_ })); }, e.prototype.reportUserActivity = function(t) { this.userActivity_ = !0; }, e.prototype.userActive = function(t) { if (t === undefined) return this.userActive_; if ((t = !!t) !== this.userActive_) { if (this.userActive_ = t, this.userActive_) return this.userActivity_ = !0, this.removeClass('vjs-user-inactive'), this.addClass('vjs-user-active'), void this.trigger('useractive'); this.tech_ && this.tech_.one('mousemove', (t) => { t.stopPropagation(), t.preventDefault(); }), this.userActivity_ = !1, this.removeClass('vjs-user-active'), this.addClass('vjs-user-inactive'), this.trigger('userinactive'); } }, e.prototype.listenForUserActivity_ = function() { let t = void 0; let e = void 0; let n = void 0; const i = ki(this, this.reportUserActivity); const r = function(t) { t.screenX === e && t.screenY === n || (e = t.screenX, n = t.screenY, i()); }; const o = function() { i(), this.clearInterval(t), t = this.setInterval(i, 250); }; const s = function(e) { i(), this.clearInterval(t); }; this.on('mousedown', o), this.on('mousemove', r), this.on('mouseup', s), this.on('keydown', i), this.on('keyup', i); let a = void 0; this.setInterval(function() { if (this.userActivity_) { this.userActivity_ = !1, this.userActive(!0), this.clearTimeout(a); const t = this.options_.inactivityTimeout; t <= 0 || (a = this.setTimeout(function() { this.userActivity_ || this.userActive(!1); }, t)); } }, 250); }, e.prototype.playbackRate = function(t) { return t !== undefined ? void this.techCall_('setPlaybackRate', t) : this.tech_ && this.tech_.featuresPlaybackRate ? this.techGet_('playbackRate') : 1; }, e.prototype.defaultPlaybackRate = function(t) { return t !== undefined ? this.techCall_('setDefaultPlaybackRate', t) : this.tech_ && this.tech_.featuresPlaybackRate ? this.techGet_('defaultPlaybackRate') : 1; }, e.prototype.isAudio = function(t) { return t !== undefined ? void (this.isAudio_ = !!t) : !!this.isAudio_; }, e.prototype.addTextTrack = function(t, e, n) { if (this.tech_) return this.tech_.addTextTrack(t, e, n); }, e.prototype.addRemoteTextTrack = function(t, e) { if (this.tech_) return this.tech_.addRemoteTextTrack(t, e); }, e.prototype.removeRemoteTextTrack = function() { const t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {}; const e = t.track; const n = e === undefined ? arguments[0] : e; if (this.tech_) return this.tech_.removeRemoteTextTrack(n); }, e.prototype.getVideoPlaybackQuality = function() { return this.techGet_('getVideoPlaybackQuality'); }, e.prototype.videoWidth = function() { return this.tech_ && this.tech_.videoWidth && this.tech_.videoWidth() || 0; }, e.prototype.videoHeight = function() { return this.tech_ && this.tech_.videoHeight && this.tech_.videoHeight() || 0; }, e.prototype.language = function(t) { if (t === undefined) return this.language_; this.language_ = String(t).toLowerCase(); }, e.prototype.languages = function() { return ot(e.prototype.options_.languages, this.languages_); }, e.prototype.toJSON = function() { const t = ot(this.options_); const e = t.tracks; t.tracks = []; for (let n = 0; n < e.length; n++) { let i = e[n]; i = ot(i), i.player = undefined, t.tracks[n] = i; } return t; }, e.prototype.createModal = function(t, e) { const n = this; e = e || {}, e.content = t || ''; const i = new Zi(this, e); return this.addChild(i), i.on('dispose', () => { n.removeChild(i); }), i.open(), i; }, e.getTagSettings = function(t) { const e = { sources: [], tracks: [] }; const n = P(t); const i = n['data-setup']; if (E(t, 'vjs-fluid') && (n.fluid = !0), i !== null) { const r = Qi(i || '{}'); const o = r[0]; const s = r[1]; o && ci.error(o), a(n, s); } if (a(e, n), t.hasChildNodes()) for (let l = t.childNodes, c = 0, u = l.length; c < u; c++) { const h = l[c]; const p = h.nodeName.toLowerCase(); p === 'source' ? e.sources.push(P(h)) : p === 'track' && e.tracks.push(P(h)); } return e; }, e.prototype.flexNotSupported_ = function() { const t = sn.createElement('i'); return !('flexBasis' in t.style || 'webkitFlexBasis' in t.style || 'mozFlexBasis' in t.style || 'msFlexBasis' in t.style || 'msFlexOrder' in t.style); }, e;
}(Bi)); Vr.names.forEach((t) => { const e = Vr[t]; Ps.prototype[e.getterName] = function() { return this.tech_ ? this.tech_[e.getterName]() : (this[e.privateName] = this[e.privateName] || new e.ListClass(), this[e.privateName]); }; }), Ps.players = {}; const xs = tn.navigator; Ps.prototype.options_ = { techOrder: eo.defaultTechOrder_, html5: {}, flash: {}, inactivityTimeout: 2e3, playbackRates: [], children: ['mediaLoader', 'posterImage', 'textTrackDisplay', 'loadingSpinner', 'bigPlayButton', 'controlBar', 'errorDisplay', 'textTrackSettings', 'videoStatisticPanel'], language: xs && (xs.languages && xs.languages[0] || xs.userLanguage || xs.language) || 'en', languages: {}, notSupportedMessage: 'No compatible source was found for this media.' }, ['ended', 'seeking', 'seekable', 'networkState', 'readyState'].forEach((t) => { Ps.prototype[t] = function() { return this.techGet_(t); }; }), Is.forEach((t) => { Ps.prototype[`handleTech${it(t)}_`] = function() { return this.trigger(t); }; }), Bi.registerComponent('Player', Ps); const Ds = {}; const Ms = function(t) { return Ds.hasOwnProperty(t); }; const Rs = function(t) { return Ms(t) ? Ds[t] : undefined; }; const As = function(t, e) { t.activePlugins_ = t.activePlugins_ || {}, t.activePlugins_[e] = !0; }; const Os = function(t, e, n) { const i = `${n ? 'before' : ''}pluginsetup`; t.trigger(i, e), t.trigger(`${i}:${e.name}`, e); }; const js = function(t, e) { const n = function() { Os(this, { name: t, plugin: e, instance: null }, !0); const n = e.apply(this, arguments); return As(this, t), Os(this, { name: t, plugin: e, instance: n }), n; }; return Object.keys(e).forEach((t) => { n[t] = e[t]; }), n; }; const Ls = function(t, e) { return e.prototype.name = t, function() { Os(this, { name: t, plugin: e, instance: null }, !0); for (var n = arguments.length, i = Array(n), r = 0; r < n; r++)i[r] = arguments[r]; const o = new (Function.prototype.bind.apply(e, [null].concat([this].concat(i))))(); return this[t] = function() { return o; }, Os(this, o.getEventHash()), o; }; }; const Ns = (function() { function t(e) { if (Zn(this, t), this.constructor === t) throw new Error('Plugin must be sub-classed; not directly instantiated.'); this.player = e, et(this), delete this.trigger, nt(this, this.constructor.defaultState), As(e, this.name), this.dispose = ki(this, this.dispose), e.on('dispose', this.dispose); } return t.prototype.version = function() { return this.constructor.VERSION; }, t.prototype.getEventHash = function() { const t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {}; return t.name = this.name, t.plugin = this.constructor, t.instance = this, t; }, t.prototype.trigger = function(t) { const e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; return J(this.eventBusEl_, t, this.getEventHash(e)); }, t.prototype.handleStateChanged = function(t) {}, t.prototype.dispose = function() { const t = this.name; const e = this.player; this.trigger('dispose'), this.off(), e.off('dispose', this.dispose), e.activePlugins_[t] = !1, this.player = this.state = null, e[t] = Ls(t, Ds[t]); }, t.isBasic = function(e) { const n = typeof e === 'string' ? Rs(e) : e; return typeof n === 'function' && !t.prototype.isPrototypeOf(n.prototype); }, t.registerPlugin = function(e, n) { if (typeof e !== 'string') throw new Error(`Illegal plugin name, "${e}", must be a string, was ${void 0 === e ? 'undefined' : Jn(e)}.`); if (Ms(e))ci.warn(`A plugin named "${e}" already exists. You may want to avoid re-registering plugins!`); else if (Ps.prototype.hasOwnProperty(e)) throw new Error(`Illegal plugin name, "${e}", cannot share a name with an existing player method!`); if (typeof n !== 'function') throw new Error(`Illegal plugin for "${e}", must be a function, was ${void 0 === n ? 'undefined' : Jn(n)}.`); return Ds[e] = n, e !== 'plugin' && (t.isBasic(n) ? Ps.prototype[e] = js(e, n) : Ps.prototype[e] = Ls(e, n)), n; }, t.deregisterPlugin = function(t) { if (t === 'plugin') throw new Error('Cannot de-register base plugin.'); Ms(t) && (delete Ds[t], delete Ps.prototype[t]); }, t.getPlugins = function() { const t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Object.keys(Ds); let e = void 0; return t.forEach((t) => { const n = Rs(t); n && (e = e || {}, e[t] = n); }), e; }, t.getPluginVersion = function(t) { const e = Rs(t); return e && e.VERSION || ''; }, t; }()); Ns.getPlugin = Rs, Ns.BASE_PLUGIN_NAME = 'plugin', Ns.registerPlugin('plugin', Ns), Ps.prototype.usingPlugin = function(t) { return !!this.activePlugins_ && !0 === this.activePlugins_[t]; }, Ps.prototype.hasPlugin = function(t) { return !!Ms(t); }; const Bs = function(t, e) { if (typeof e !== 'function' && e !== null) throw new TypeError(`Super expression must either be null or a function, not ${void 0 === e ? 'undefined' : Jn(e)}`); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, enumerable: !1, writable: !0, configurable: !0 } }), e && (t.super_ = e); }; const Fs = function(t) { const e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; let n = function() { t.apply(this, arguments); }; let i = {}; (void 0 === e ? 'undefined' : Jn(e)) === 'object' ? (e.constructor !== Object.prototype.constructor && (n = e.constructor), i = e) : typeof e === 'function' && (n = e), Bs(n, t); for (const r in i)i.hasOwnProperty(r) && (n.prototype[r] = i[r]); return n; }; if (typeof HTMLVideoElement === 'undefined' && g() && (sn.createElement('video'), sn.createElement('audio'), sn.createElement('track'), sn.createElement('video-js')), ce.hooks_ = {}, ce.hooks = function(t, e) { return ce.hooks_[t] = ce.hooks_[t] || [], e && (ce.hooks_[t] = ce.hooks_[t].concat(e)), ce.hooks_[t]; }, ce.hook = function(t, e) { ce.hooks(t, e); }, ce.hookOnce = function(t, e) { ce.hooks(t, [].concat(e).map((e) => function n() { return ce.removeHook(t, n), e.apply(undefined, arguments); })); }, ce.removeHook = function(t, e) { const n = ce.hooks(t).indexOf(e); return !(n <= -1) && (ce.hooks_[t] = ce.hooks_[t].slice(), ce.hooks_[t].splice(n, 1), !0); }, !0 !== tn.VIDEOJS_NO_DYNAMIC_STYLE && g()) { let Vs = pi('.vjs-styles-defaults'); if (!Vs) { Vs = wi('vjs-styles-defaults'); const Hs = pi('head'); Hs && Hs.insertBefore(Vs, Hs.firstChild), Si(Vs, '\n      .video-js {\n        width: 300px;\n        height: 150px;\n      }\n\n      .vjs-fluid {\n        padding-top: 56.25%\n      }\n    '); } }tt(1, ce), ce.VERSION = '6.6.2', ce.options = Ps.prototype.options_, ce.getPlayers = function() { return Ps.players; }, ce.players = Ps.players, ce.getComponent = Bi.getComponent, ce.registerComponent = function(t, e) { eo.isTech(e) && ci.warn(`The ${t} tech was registered as a component. It should instead be registered using videojs.registerTech(name, tech)`), Bi.registerComponent.call(Bi, t, e); }, ce.getTech = eo.getTech, ce.registerTech = eo.registerTech, ce.use = Gt, ce.browser = Yn, ce.TOUCH_ENABLED = An, ce.extend = Fs, ce.mergeOptions = ot, ce.bind = ki, ce.registerPlugin = Ns.registerPlugin, ce.plugin = function(t, e) { return ci.warn('videojs.plugin() is deprecated; use videojs.registerPlugin() instead'), Ns.registerPlugin(t, e); }, ce.getPlugins = Ns.getPlugins, ce.getPlugin = Ns.getPlugin, ce.getPluginVersion = Ns.getPluginVersion, ce.addLanguage = function(t, e) { let n; return t = (`${t}`).toLowerCase(), ce.options.languages = ot(ce.options.languages, (n = {}, n[t] = e, n)), ce.options.languages[t]; }, ce.log = ci, ce.createTimeRange = ce.createTimeRanges = ut, ce.formatTime = oe, ce.parseUrl = fr, ce.isCrossOrigin = vr, ce.EventTarget = Pi, ce.on = G, ce.one = Z, ce.off = Y, ce.trigger = J, ce.xhr = xr, ce.TextTrack = Rr, ce.AudioTrack = Ar, ce.VideoTrack = Or, ['isEl', 'isTextNode', 'createEl', 'hasClass', 'addClass', 'removeClass', 'toggleClass', 'setAttributes', 'getAttributes', 'emptyEl', 'appendContent', 'insertContent'].forEach((t) => { ce[t] = function() { return ci.warn(`videojs.${t}() is deprecated; use videojs.dom.${t}() instead`), fi[t].apply(null, arguments); }; }), ce.computedStyle = p, ce.dom = fi, ce.url = mr; const Us = { m3u8: 'application/x-mpegURL', flv: 'video/flv', mp4: 'video/mp4', webm: 'video/webm', rtmp: 'rtmp/flv', mpd: 'application/dash+xml' }; const qs = 'https://drm.vod2.myqcloud.com/getlicense/v1'; var zs = function(t) { return encodeURIComponent(t).replace(/[!'()*]/g, (t) => `%${t.charCodeAt(0).toString(16).toUpperCase()}`); }; const Ws = Object.getOwnPropertySymbols; const Ks = Object.prototype.hasOwnProperty; const Qs = Object.prototype.propertyIsEnumerable; const Xs = (function() { try { if (!Object.assign) return !1; const t = new String('abc'); if (t[5] = 'de', Object.getOwnPropertyNames(t)[0] === '5') return !1; for (var e = {}, n = 0; n < 10; n++)e[`_${String.fromCharCode(n)}`] = n; if (Object.getOwnPropertyNames(e).map((t) => e[t]).join('') !== '0123456789') return !1; const i = {}; return 'abcdefghijklmnopqrst'.split('').forEach((t) => { i[t] = t; }), Object.keys({ ...i }).join('') === 'abcdefghijklmnopqrst'; } catch (r) { return !1; } }()) ? Object.assign : function(t, e) { for (var n, i, r = ue(t), o = 1; o < arguments.length; o++) { n = Object(arguments[o]); for (const s in n)Ks.call(n, s) && (r[s] = n[s]); if (Ws) { i = Ws(n); for (let a = 0; a < i.length; a++)Qs.call(n, i[a]) && (r[i[a]] = n[i[a]]); } } return r; }; var $s = new RegExp('%[a-f0-9]{2}', 'gi'); var Gs = new RegExp('(%[a-f0-9]{2})+', 'gi'); var Ys = function(t) { if (typeof t !== 'string') throw new TypeError(`Expected \`encodedURI\` to be of type \`string\`, got \`${typeof t}\``); try { return t = t.replace(/\+/g, ' '), decodeURIComponent(t); } catch (e) { return de(t); } }; const Js = me; const Zs = _e; const ta = function(t, e) {
 e = { encode: !0, strict: !0, arrayFormat: 'none', ...e }, !1 === e.sort && (e.sort = function() {}); const n = fe(e); return t ? Object.keys(t).sort(e.sort).map((i) => { const r = t[i]; if (r === undefined) return ''; if (r === null) return ge(i, e); if (Array.isArray(r)) { const o = []; return r.slice().forEach((t) => { t !== undefined && o.push(n(i, t, o.length)); }), o.join('&'); } return `${ge(i, e)}=${ge(r, e)}`; }).filter((t) => t.length > 0)
.join('&') : '';
}; const ea = function(t, e) { return { url: t.split('?')[0] || '', query: _e(me(t), e) }; }; var na = { extract: Js, parse: Zs, stringify: ta, parseUrl: ea }; var ia = 0; const ra = (function(e) {
 function n(i, r, o) { Zn(this, n), ci('MediaAsyncLoader initializing'), !(r.playerOptions && r.playerOptions.psign && t && t.isSupported()) || ce.browser.IS_TBS || ce.browser.IS_MQQB || ce.browser.IS_SAFARI || ce.browser.IE_VERSION && ce.browser.IE_VERSION < 11 || (r.playerOptions.overlayKey = xe(), r.playerOptions.overlayIv = xe(), r.playerOptions.dKeyDebug = r.dKeyDebug || !1); const s = ot({ createEl: !1 }, r); const a = ei(this, e.call(this, i, s, o)); const l = s.playerOptions || s; return a.getInfo(l), i.loadVideoByID = ki(a, a.loadVideoByID), ci('MediaAsyncLoader initialized'), a; } return ti(n, e), n.prototype.getInfo = function(t) { t && t.fileID && t.appID && (t.playDefinition ? this.getInfoV3(t) : t.sign || t.ssign ? this.getInfoV2(t) : this.getInfoV4(t)); }, n.prototype.getInfoV2 = function(t) { const e = this.player(); let n = this.assemblyPath('getplayinfo', t.appID, t.fileID); const i = t.t; const r = t.us; const o = t.exper; const s = t.sign; let a = {}; t.ssign ? a.super_sign = t.ssign : s && (a = { t: i, sign: s }, (r || r == 0) && (a.us = r), (o || o == 0) && (a.exper = o, e.trigger({ type: 'feature', data: 'exper' })), e.trigger({ type: 'feature', data: 'key' })), t.playerID && (a.playerid = t.playerID), this.requestTimestamp = +(new Date()).getTime(), e.trigger({ type: 'playcgistart', data: { time: this.requestTimestamp, url: n } }), ci('playcgi loading'); const l = na.stringify(a); l && (n += (~n.indexOf('?') ? '&' : '?') + l, n = n.replace('?&', '?')), this.getInfoRetryTimes = 0, this.getInfoRequest = function(t) { t && (n = n.replace('//playvideo.qcloud.com', '//bkplayvideo.qcloud.com')), Dn && Dn < 10 ? be(n, { param: a, timeout: 3e3, prefix: 'TcCallBack' }, ki(this, this.onResult)) : xr({ url: n, timeout: 3e3 }, ki(this, this.onResult)); }, this.getInfoRequest(); }, n.prototype.onResult = function(t, e, n) { try { n ? e = JSON.parse(n) : t || e || (t = new Error('ServerError')); } catch (l) { t = new Error('ServerError'); } const i = this.player(); if (t) { if (ci('playcgi loaded failure'), this.getInfoRetryTimes < 3) return this.getInfoRetryTimes++, void this.getInfoRequest(); if (this.getInfoRetryTimes < 6) return this.getInfoRetryTimes++, void this.getInfoRequest({ isBackup: !0 }); i.trigger({ type: 'playcgiend', data: { time: +(new Date()).getTime(), startTime: this.requestTimestamp, error: t, result: e } }); let r = 12; switch (t.message) { case 'XMLHttpRequest timeout': case 'Timeout': r = 10; break; case 'ServerError': r = 11; } this.player().error({ code: r }); } else { if (i.trigger({ type: 'playcgiend', data: { time: +(new Date()).getTime(), startTime: this.requestTimestamp, error: t, result: e } }), e.code != 0) return ci('playcgi loaded failure'), void this.player().error({ code: e.code }); ci('playcgi loaded success'); const o = e.coverInfo; const s = e.videoInfo; const a = e.playerInfo; this.setPoster(o), this.setLogo(a), this.setSrc(e), this.setPatch(a), this.setVttThumbnail(e), this.setDots(e), this.setOriginDuration(s), this.setPlayList(a); } }, n.prototype.getInfoV3 = function(t) { const e = this.player(); let n = this.assemblyPathV3('getplayinfo', t.appID, t.fileID, t.playDefinition); const i = t.t; const r = t.us; const o = t.rlimit; const s = t.sign; let a = {}; t.ssign ? a.super_sign = t.ssign : s && (a = { t: i, sign: s }, (r || r == 0) && (a.us = r), o && (a.rlimit = o), e.trigger({ type: 'feature', data: 'key' })), t.playerID && (a.playerid = t.playerID), this.requestTimestamp = +(new Date()).getTime(), e.trigger({ type: 'playcgistart', data: { time: this.requestTimestamp, url: n } }), ci('playcgi v3 loading'); const l = na.stringify(a); l && (n += (~n.indexOf('?') ? '&' : '?') + l, n = n.replace('?&', '?')), this.getInfoRetryTimes = 0, this.getInfoRequest = function(t) { t && (n = n.replace('//playvideo.qcloud.com', '//bkplayvideo.qcloud.com')), Dn && Dn < 10 ? be(n, { param: a, timeout: 3e3, prefix: 'TcCallBack' }, ki(this, this.onResultV3)) : xr({ url: n, timeout: 3e3 }, ki(this, this.onResultV3)); }, this.getInfoRequest(); }, n.prototype.onResultV3 = function(t, e, n) { try { n ? e = JSON.parse(n) : t || e.body || (t = new Error('ServerError')); } catch (a) { t = new Error('ServerError'); } const i = this.player(); if (t) { if (ci('playcgi v3 loaded failure'), this.getInfoRetryTimes < 3) return this.getInfoRetryTimes++, void this.getInfoRequest(); if (this.getInfoRetryTimes < 6) return this.getInfoRetryTimes++, void this.getInfoRequest({ isBackup: !0 }); i.trigger({ type: 'playcgiend', data: { time: +(new Date()).getTime(), startTime: this.requestTimestamp, error: t, result: e } }); let r = 12; switch (t.message) { case 'XMLHttpRequest timeout': case 'Timeout': r = 10; break; case 'ServerError': r = 11; } this.player().error({ code: r }); } else { if (i.trigger({ type: 'playcgiend', data: { time: +(new Date()).getTime(), startTime: this.requestTimestamp, error: t, result: e } }), e.code != 0) return ci('playcgi v3 loaded failure'), void this.player().error({ code: e.code }); ci('playcgi v3 loaded success'); const o = e.mediaInfo; const s = e.playerInfo; this.setPoster({ coverUrl: o.basicInfo.coverUrl }), this.setLogo(s), this.setSrcV3(o), this.setPatch(s), this.setVttThumbnail(o), this.setDots(o); } }, n.prototype.setSrcV3 = function(t, e) { const n = this; const i = this.player(); const r = i.options_.plugins; const o = i.DRM().options || r.DRM; let s = void 0; let a = void 0; let l = void 0; const c = []; const u = {}; const h = {}; if (e = e || (o ? o.skipPlan : ''), t.previewStreamingInfo && t.previewStreamingInfo.previewStreamingList.length > 0)t.previewStreamingInfo.previewStreamingList.forEach((t, e) => { t.mineType = n.getMIMEType(t.url), u[gr(t.url)] = t; }); else { if (!(t.dynamicStreamingInfo.adaptiveStreamingInfoList && t.dynamicStreamingInfo.adaptiveStreamingInfoList.length > 0)) return void this.player().error({ code: 13, message: 'no video stream' }); if (t.dynamicStreamingInfo.adaptiveStreamingInfoList.forEach((t, e) => { t.mineType = n.getMIMEType(t.url), h[t.drmType.toLowerCase() || gr(t.url)] = t; }), o && o.token ? (s = o.token, l = o.certificateUri, e = Mn && !l ? 'fairplay' : e, a = tn.encodeURIComponent(s)) : e = 'all', (In || Sn) && tn.navigator.requestMediaKeySystemAccess && h.widevine && e != 'widevine' && e != 'all' ? (c.push({ src: Ce(h.widevine.url), type: this.getMIMEType(h.widevine.url), keySystems: { 'com.widevine.alpha': { serverURL: `${qs}?token=${a}&drmType=${h.widevine.drmType}` } } }), ci('DRM source widevine', c)) : Mn && !_n && h.fairplay && e != 'fairplay' && e != 'all' && (c.push({ src: Ce(h.fairplay.url), type: this.getMIMEType(h.fairplay.url), keySystems: { 'com.apple.fps.1_0': { certificateUri: l, licenseUri: `${qs}?token=${a}&drmType=${h.fairplay.drmType}` } } }), ci('DRM source fairplay', c)), h.simpleaes && e != 'all') { const p = h.simpleaes.url.split('/'); p[p.length - 1] = `voddrm.token.${a}.${p[p.length - 1]}`, c.push({ src: Ce(p.join('/')), type: this.getMIMEType(h.simpleaes.url) }), ci('DRM source simpleaes', c); }h.m3u8 && c.push({ src: Ce(h.m3u8.url), type: this.getMIMEType(h.m3u8.url) }), h.mpd && c.push({ src: Ce(h.mpd.url), type: this.getMIMEType(h.mpd.url) }); } if (!(c.length > 0)) return void this.player().error({ code: 4 }); i.src(c); const d = function(e) { return ci('DRM init Error', c), e.data.code !== 5 && e.data.code !== 2 || !c[0].keySystems['com.widevine.alpha'] ? e.data.code === 3 && c[0].keySystems['com.apple.fps.1_0'] ? void n.setSrcV3(t, 'fairplay') : e.data.code === 14 || e.data.code === 3 ? void n.setSrcV3(t, 'all') : void 0 : void n.setSrcV3(t, 'widevine'); }; e !== 'all' && (tn.setTimeout(() => { i.one('error', d); }, 0), i.one('playing', (t) => {})); }, n.prototype.getInfoV4 = function(t) { const e = this.player(); let n = this.assemblyPathV4('getplayinfo', t.appID, t.fileID); const i = t.t; const r = t.us; const o = t.rlimit; const s = t.psign; const a = t.exper; let l = {}; t.ssign ? l.super_sign = t.ssign : s && (l = { t: i, psign: s }, (r || r == 0) && (l.us = r), o && (l.rlimit = o), a && (l.exper = a)), t.playerConfig && (l.pcfg = t.playerConfig), t.playerID && (l.playerid = t.playerID), this.requestTimestamp = +(new Date()).getTime(), e.trigger({ type: 'playcgistart', data: { time: this.requestTimestamp, url: n } }), ci('playcgi v4 loading'); const c = na.stringify(l); c && (n += (~n.indexOf('?') ? '&' : '?') + c, n = n.replace('?&', '?'), t.overlayKey && t.overlayIv && (n += `&overlayKey=${t.overlayKey}&overlayIv=${t.overlayIv}`)), this.getInfoRetryTimes = 0, this.getInfoRequest = function(t) { t && (n = n.replace('//playvideo.qcloud.com', '//bkplayvideo.qcloud.com')), Dn && Dn < 10 ? be(n, { param: l, timeout: 3e3, prefix: 'TcCallBack' }, ki(this, this.onResultV4)) : xr({ url: n, timeout: 3e3 }, ki(this, this.onResultV4)); }, this.getInfoRequest(); }, n.prototype.onResultV4 = function(t, e, n) { try { n ? e = JSON.parse(n) : t || e.body || (t = new Error('ServerError')); } catch (c) { t = new Error('ServerError'); } const i = this.player(); if (t) { if (ci('playcgi v4 loaded failure'), this.getInfoRetryTimes < 3) return this.getInfoRetryTimes++, void this.getInfoRequest(); if (this.getInfoRetryTimes < 6) return this.getInfoRetryTimes++, void this.getInfoRequest({ isBackup: !0 }); i.trigger({ type: 'playcgiend', data: { time: +(new Date()).getTime(), startTime: this.requestTimestamp, error: t, result: e } }); let r = 12; switch (t.message) { case 'XMLHttpRequest timeout': case 'Timeout': r = 10; break; case 'ServerError': r = 11; } this.player().error({ code: r }); } else { if (i.trigger({ type: 'playcgiend', data: { time: +(new Date()).getTime(), startTime: this.requestTimestamp, error: t, result: e } }), e.code != 0) { if (ci('playcgi v4 loaded failure'), e.code >= 2e3 && e.code < 3e3) { if (this.getInfoRetryTimes < 3) return this.getInfoRetryTimes++, void this.getInfoRequest(); if (this.getInfoRetryTimes < 6) return this.getInfoRetryTimes++, void this.getInfoRequest({ isBackup: !0 }); } return void this.player().error({ code: e.code }); } if (ci('playcgi v4 loaded success', e), e.version === 4) { const o = e.media; this.setPoster({ coverUrl: o.basicInfo.coverUrl }), this.setSrcV4(o), this.setVttThumbnailV4(o), this.setDots(o), this.setOriginDurationV4(o); } else if (e.version === 2) { const s = e.coverInfo; const a = e.videoInfo; const l = e.playerInfo; this.setPoster(s), this.setLogo(l), this.setSrc(e), this.setPatch(l), this.setVttThumbnail(e), this.setDots(e), this.setOriginDuration(a); } } }, n.prototype.setSrcV4 = function(t) { const e = this.player(); const n = e.options_; let i = void 0; let r = void 0; if (!t.streamingInfo) return void this.player().error({ code: 13, message: 'no stream info' }); if (t.streamingInfo) { if (n.hlsConfig ? (n.hlsConfig.startLevel || (n.hlsConfig.startLevel = 5), n.psign && (n.hlsConfig.overlayKey = e.options_.playerOptions.overlayKey, n.hlsConfig.overlayIv = e.options_.playerOptions.overlayIv, n.hlsConfig.dKeyDebug = e.options_.dKeyDebug)) : n.psign && e.options_.playerOptions.overlayKey ? n.hlsConfig = { overlayKey: e.options_.playerOptions.overlayKey, overlayIv: e.options_.playerOptions.overlayIv, dKeyDebug: e.options_.dKeyDebug, startLevel: 5 } : n.hlsConfig = { startLevel: 5 }, t.streamingInfo.plainOutput && (i = t.streamingInfo.plainOutput.url, r = t.streamingInfo.plainOutput.subStreams), t.streamingInfo.drmOutput && Array.isArray(t.streamingInfo.drmOutput)) { const o = t.streamingInfo.drmOutput; if (o[0].type === 'SimpleAES') { const s = o[0].url.split('/'); s[s.length - 1] = `voddrm.token.${t.streamingInfo.drmToken}.${s[s.length - 1]}`, i = s.join('/'), r = o[0].subStreams; } }i ? e.src([{ src: Ce(i), type: Us.m3u8 }]) : this.player().error({ code: 13, message: 'no stream info' }), this.setQualityLabelList(r); } }, n.prototype.setQualityLabelList = function(t) { this.player().QualitySwitcher().setOptions({ qualityLabelList: { video: t } }); }, n.prototype.setLogo = function(t) { const e = this.player(); t.logoPic ? (e.logoImage.update({ img: { url: Ce(t.logoPic), position: t.logoLocation }, link: Ce(t.logoUrl) }), e.trigger({ type: 'feature', data: 'logo' })) : e.logoImage.reset(); }, n.prototype.setPoster = function(t) { const e = this.player(); t && t.coverUrl ? e.poster(Ce(t.coverUrl)) : e.options_.playerOptions.poster || e.poster(''); }, n.prototype.setDots = function(t) { const e = this.player(); if (e.options_.dots = null, t.keyFrameDescInfo && t.keyFrameDescInfo.keyFrameDescList && t.keyFrameDescInfo.keyFrameDescList.length > 0) { const n = t.keyFrameDescInfo.keyFrameDescList; e.options_.dots = n; } const i = e.options_.plugins; i && i.ProgressMarker && i.ProgressMarker.markers && i.ProgressMarker.markers.length > 0 && (e.options_.dots = e.options_.dots.concat(i.ProgressMarker.markers)), e.ProgressMarker().init(); }, n.prototype.setSrc = function(t) { const e = this.player(); const n = t.videoInfo; if ((e.options_.definition != null || e.options_.definition != undefined) && n.transcodeList && n.transcodeList.length > 0) { e.trigger({ type: 'feature', data: 'definition' }); const i = this.getSrcByDefinition(n, e.options_.definition); if (i) return e.src({ src: Ce(i.url), type: this.getMIMEType(i.url) }), !0; } if (e.MultiResolution().reset(), n.masterPlayList)e.src(this.getMasterSouces(n)), e.MultiResolution().store(this.getMultiResolutionData(t)); else if (n.transcodeList && n.transcodeList.length > 0) { const r = this.getMultiResolutionData(t); if (r.showOrder.length > 0)e.MultiResolution().init(r); else { const o = n.transcodeList[0].url; e.src({ src: Ce(o), type: this.getMIMEType(o) }); } } else n.sourceVideo && this.getMIMEType(n.sourceVideo.url) ? e.src({ src: Ce(n.sourceVideo.url), type: this.getMIMEType(n.sourceVideo.url) }) : this.player().error({ code: 13 }); }, n.prototype.setPatch = function(t) { const e = this.player(); t.patchInfo ? e.ImagePatch().init(t.patchInfo) : e.ImagePatch().reset(); }, n.prototype.setVttThumbnail = function(t) { const e = this.player(); t.imageSpriteInfo && t.imageSpriteInfo.imageSpriteList ? e.ready(ki(this, () => { e.VttThumbnail().init({ vttUrl: Ce(t.imageSpriteInfo.imageSpriteList[0].webVttUrl) }); })) : e.VttThumbnail().reset(); }, n.prototype.setVttThumbnailV4 = function(t) { const e = this.player(); t.imageSpriteInfo && t.imageSpriteInfo.webVttUrl ? e.ready(ki(this, () => { e.VttThumbnail().init({ vttUrl: Ce(t.imageSpriteInfo.webVttUrl) }); })) : e.VttThumbnail().reset(); }, n.prototype.setOriginDuration = function(t) { const e = this.player(); if (e.options_.exper > 0) { const n = t.sourceVideo ? t.sourceVideo.floatDuration : t.transcodeList[0].floatDuration; e.one('play', () => { e.duration(n); }); } }, n.prototype.setOriginDurationV4 = function(t) { const e = this; const n = this.player(); n.cache_.originDuration = t.basicInfo.duration, n.off('durationchange', this.keepOriginDuration), n.one('durationchange', (t) => { n.duration() > 0 && Math.floor(n.cache_.originDuration) !== Math.floor(n.duration()) && (e.keepOriginDuration(t), n.on('durationchange', e.keepOriginDuration)); }); }, n.prototype.keepOriginDuration = function(t) { const e = this.player(); const n = e.cache_.originDuration; Math.floor(n) !== Math.floor(e.duration()) && (ci('试看视频'), e.duration(Math.round(n))); }, n.prototype.getMasterSouces = function(t) { const e = t.masterPlayList; const n = []; return n.push({ src: Ce(e.url), type: Us.m3u8 }), n; }, n.prototype.getMultiResolutionData = function(t) { const e = { sources: {}, labels: {}, showOrder: [], defaultRes: '' }; const n = []; let i = t.videoInfo.transcodeList; const r = this; return t.playerInfo.videoClassification.forEach((t, o) => { i.length > 0 && (i = i.filter((i) => { if (!(t.definitionList.indexOf(i.definition) > -1)) return !0; n[t.id] || (e.showOrder.push(t.id), e.labels[t.id] = t.name, n[t.id] = []), n[t.id].push({ src: Ce(i.url), type: r.getMIMEType(i.url) }); })); }), e.sources = n, e.defaultRes = t.playerInfo.defaultVideoClassification || Object.keys(n)[0], e; }, n.prototype.getSrcByDefinition = function(t, e) { const n = t.transcodeList; const i = t.sourceVideo; if (e == 0) return i; for (let r = 0; r < n.length; r++) if (n[r].definition == e) return n[r]; }, n.prototype.getMIMEType = function(t) { const e = Us[gr(t)]; return e || (ci.error(`MIME type no found! Ext = ${gr(t)}`), ''); }, n.prototype.assemblyPath = function(t, e, n) {
 let i = tn.location.protocol;
return i != 'http:' && i != 'https:' && (i = 'https:'), `${i}//playvideo.qcloud.com/${t}/v2/${e}/${n}`;
}, n.prototype.assemblyPathV3 = function(t, e, n, i) { let r = tn.location.protocol; return r != 'http:' && r != 'https:' && (r = 'https:'), `${r}//playvideo.qcloud.com/${t}/v3/${e}/${n}/${i}`; }, n.prototype.assemblyPathV4 = function(t, e, n) { let i = tn.location.protocol; return i != 'http:' && i != 'https:' && (i = 'https:'), `${i}//playvideo.qcloud.com/${t}/v4/${e}/${n}`; }, n.prototype.customHost = function(t) { const e = this.player(); e.options_.customHost && /^(?=^.{3,255}$)[a-zA-Z0-9][-a-zA-Z0-9]{0,62}(\.[a-zA-Z0-9][-a-zA-Z0-9]{0,62})+$/.test(e.options_.customHost) && (t.masterPlayList && (t.masterPlayList.url = Ee(t.masterPlayList.url, e.options_.customHost)), t.sourceVideo && (t.sourceVideo.url = Ee(t.sourceVideo.url, e.options_.customHost)), t.transcodeList.length > 0 && t.transcodeList.forEach((t, n) => { t.url = Ee(t.url, e.options_.customHost); }), e.trigger({ type: 'feature', data: 'customHost' })); }, n.prototype.loadVideoByID = function(e) { const n = this.player(); n.trigger({ type: 'loadnewvideo' }), !(e.psign && t && t.isSupported()) || ce.browser.IS_TBS || ce.browser.IS_MQQB || ce.browser.IS_SAFARI || ce.browser.IE_VERSION && ce.browser.IE_VERSION < 11 || (e.overlayKey = n.options_.playerOptions.overlayKey, e.overlayIv = n.options_.playerOptions.overlayIv), n.hasStarted(!1), this.getInfo(e), n.duration(0), n.playbackRate(1), n.options_.appID = e.appID, n.options_.fileID = e.fileID, n.bigPlayButton && n.bigPlayButton.show(), n.options_.plugins.ContinuePlay && n.ContinuePlay().init(); }, n.prototype.setPlayList = function(t) { this.player().options_.plugins.PlayList || t.playlist && t.playlist.data instanceof Array && t.playlist.data.length > 0 && this.player_.PlayList(t.playlist); }, n;
}(Bi)); Bi.registerComponent('MediaAsyncLoader', ra); const oa = (ce.getComponent('Component'), ce.getComponent('ClickableComponent')); const sa = ['left-top', 'left-bottom', 'right-top', 'right-bottom']; const aa = (function(t) { function e(n, i) { Zn(this, e); const r = ei(this, t.call(this, n, i)); return n.on('logochange', ce.bind(r, function(t) { this.update(t.data); })), i.img && r.update(i), r; } return ti(e, t), e.prototype.createEl = function() { const t = ce.dom.createEl('div', { className: 'tcp-logo vjs-hidden' }); const e = ce.dom.createEl('a', { className: 'tcp-logo-link', target: '_blank' }); const n = ce.dom.createEl('img', { className: 'tcp-logo-img' }); return this.linkEl_ = e, this.imgEl_ = n, e.appendChild(n), t.appendChild(e), t; }, e.prototype.update = function(t) { const e = t.img; const n = t.link; this.setImg(e), this.setHref(n), this.options_ = ce.mergeOptions(this.options_, t), this.show(); }, e.prototype.setImg = function(t) { if (this.imgEl_) { this.imgEl_.src = t.url; const e = sa[t.position] || t.position || 'left-top'; ce.dom.addClass(this.el_, e); } }, e.prototype.setHref = function(t) { this.linkEl_ && t && (this.linkEl_.href = t); }, e.prototype.reset = function() { this.hide(), this.imgEl_.removeAttribute('src'), this.linkEl_.removeAttribute('href'); }, e; }(oa)); ce.registerComponent('LogoImage', aa); const la = ce.getComponent('Component'); const ca = ce.getComponent('Button'); const ua = (function(t) { function e(n, i) { Zn(this, e); const r = ei(this, t.call(this, n, i)); return r.init(i), r; } return ti(e, t), e.prototype.createEl = function() { return ce.dom.createEl('div', { className: 'tcp-continue-play-tips' }); }, e.prototype.close = function() { this.hide(); }, e.prototype.init = function(t) { const e = this.addChild('closeButton', { controlText: 'Close' }); this.on(e, 'close', this.close), this.addChild('ContinuePlayTipsContent', t); const n = this.addChild('ContinuePlayButton', t); this.on(n, ['tap', 'click'], this.close), this.setTimeout(function() { this.close(); }, 3500); }, e; }(la)); ce.registerComponent('ContinuePlayTips', ua); const ha = (function(t) { function e(n, i) { return Zn(this, e), ei(this, t.call(this, n, i)); } return ti(e, t), e.prototype.createEl = function() { const t = ce.dom.createEl('span', { className: 'tcp-continue-play-tips-content' }); const e = ce.dom.createEl('span', { className: 'tcp-text', textContent: this.localize(this.options_.text || 'Last time play at ') }); const n = ce.dom.createEl('span', { className: 'tcp-time', textContent: ce.formatTime(this.options_.time) }); return this.textEl_ = e, this.timeEl_ = n, t.appendChild(e), t.appendChild(n), t; }, e; }(la)); ce.registerComponent('ContinuePlayTipsContent', ha); const pa = (function(t) { function e(n, i) { return Zn(this, e), ei(this, t.call(this, n, i)); } return ti(e, t), e.prototype.createEl = function() { return t.prototype.createEl.call(this, 'button', { className: 'tcp-continue-play-buttom', textContent: this.localize(this.options_.btnText || 'Resume play') }); }, e.prototype.handleClick = function() { this.options_.resumeCallback.call(); }, e; }(ca)); ce.registerComponent('ContinuePlayButton', pa); const da = ce.getComponent('Component'); const fa = (function(t) { function e(n, i) { Zn(this, e); const r = ei(this, t.call(this, n, i)); return r.playing = !1, r.timeoutID = undefined, r.levelSwitch = n.options_.plugins.ContextMenu.levelSwitch, r.init(), n.on('playing', ce.bind(r, () => { r.playing = !0; })), n.on('resolutionswitching', ce.bind(r, (t) => { if (r.playing) if (t.data.label)r.switchHandler(r.createSwitching(t.data.label), 2e3); else { const e = r.player().QualitySwitcher().options.qualityData; if (e) { const n = e.video.filter((e) => t.data.newQuality === e.id)[0]; r.switchHandler(r.createSwitching(n.label), 2e3); } } })), n.on('resolutionswitched', ce.bind(r, () => { r.playing && r.switchHandler(r.createSwitched(), 2e3); })), n.on('levelSwitchError', ce.bind(r, () => { r.switchHandler(r.createSwitchError(), 2e3); })), r; } return ti(e, t), e.prototype.switchHandler = function(t, e) { const n = this; this.timeoutID && clearTimeout(this.timeoutID), this.textNode.innerText = t, this.show(), this.timeoutID = setTimeout(() => { n.hide(); }, e); }, e.prototype.createEl = function() { const t = ce.dom.createEl('div', { className: 'tcp-switch vjs-hidden' }); return this.textNode = ce.dom.createEl('div', { innerText: '' }), t.appendChild(this.textNode), t; }, e.prototype.init = function() { const t = this.addChild('closeButton', { controlText: 'Close' }); this.on(t, 'close', this.hide); }, e.prototype.createSwitching = function(t) { return this.levelSwitch.switchingText ? this.levelSwitch.switchingText + t : `正在为您切换至${t}`; }, e.prototype.createSwitched = function() { return this.levelSwitch.switchedText ? this.levelSwitch.switchedText : '切换成功'; }, e.prototype.createSwitchError = function() { return this.levelSwitch.switchErrorText ? this.levelSwitch.switchErrorText : '切换失败'; }, e.prototype.show = function() { t.prototype.show.call(this), this.popped = !0; }, e.prototype.hide = function() { t.prototype.hide.call(this), this.popped = !1; }, e; }(da)); ce.registerComponent('LevelSwitchTips', fa); const ya = ce.getComponent('Component'); const ga = { fileID: 'file ID', requestID: 'request ID', mediaType: 'media type', mimeType: 'mime type', provider: 'provider', resolution: 'resolution', rate: 'rate', frames: 'frames', buffer: 'buffer', connectionSpeed: 'connection speed', info: 'info' }; const va = (function(t) { function e(n, i) { Zn(this, e); const r = ei(this, t.call(this, n, i)); return r.display = !1, r.displayData = 'loading', r; } return ti(e, t), e.prototype.createEl = function() { const t = ce.dom.createEl('div', { className: 'tcp-statistic-line vjs-hidden' }); const e = ce.dom.createEl('span', { className: 'tcp-statistic-title', innerText: `${ga[this.options_.key]}:` }); const n = ce.dom.createEl('span', { className: 'tcp-statistic-data', innerText: this.options_.data }); return t.appendChild(e), t.appendChild(n), t; }, e.prototype.updateTextNode_ = function() { for (var t = this.el_.lastChild; t.firstChild;)t.removeChild(t.firstChild); this.displayData && this.show(), this.textNode_ = sn.createTextNode(this.displayData || ''), t.appendChild(this.textNode_); }, e.prototype.updateContent = function(t) { t !== this.displayData && (this.displayData = t, this.requestAnimationFrame(this.updateTextNode_)); }, e.prototype.isDisplay = function() { return this.display; }, e.prototype.show = function() { t.prototype.show.call(this), this.display = !0, this.popped = !0; }, e.prototype.hide = function() { t.prototype.hide.call(this), this.display = !1, this.popped = !1; }, e.prototype.reset = function() { t.prototype.hide.call(this), this.display = !1, this.displayData = ''; }, e; }(ya)); ce.registerComponent('VideoTextItem', va); const ma = { enableRecoverMediaError: !0, recoverMediaErrorMaxRetry: 5, fragLoadingMaxRetry: 3 }; const _a = (function() { function e(n, i, r) { Zn(this, e); const o = new t(ce.mergeOptions(ma, r.hlsConfig)); const s = i.el(); this.Hls = t, this.tech = i, this.hls = o, this.switchStatus = '', this.manifests = [], this.hlsjsErrorHandler = this.errorHandlerFactory(), o.on(t.Events.ERROR, this.onError.bind(this)), o.on(t.Events.MANIFEST_PARSED, ce.bind(this, this.onMetaData)), o.on(t.Events.LEVEL_LOADED, this.onLevelLoaded.bind(this)); for (const a in t.Events)o.on(t.Events[a], ce.bind(this, this.onEvent)); o.attachMedia(s), o.loadSource(n.src); } return e.prototype.switchQuality = function(t) { t.id != this.hls.currentLevel && (this.switchStatus = 'switching', this.switchData = t, this.tech.trigger({ type: 'hlsresolutionswitching', data: this.switchData }), this.hls.nextLevel = t.id); }, e.prototype.dispose = function() { this.hls.destroy(); }, e.prototype.onEvent = function(e, n) { this.tech.trigger({ type: e, data: n }); const i = this.tech.player(); switch (e) { case t.Events.MANIFEST_LOADED: this.manifests.push(n.networkDetails.response || n.networkDetails.responseText); break; case t.Events.LEVEL_SWITCHING: break; case t.Events.LEVEL_SWITCHED: this.switchStatus == 'switching' && (this.switchStatus = 'switched', this.tech.trigger({ type: 'hlsresolutionswitched', data: this.switchData }), this.switchData = null); break; case t.Events.LEVEL_SWITCH_ERROR: i.trigger({ type: 'levelSwitchError' }); } }, e.prototype.onMetaData = function(t, e) { const n = []; const i = this.hls; const r = this; if (e.levels.length > 1) { const o = { id: -1, label: 'auto', selected: i.manualLevel === -1 }; n.push(o), e.levels.forEach((t, e) => { const o = {}; o.id = e, o.selected = e === i.manualLevel, o.label = r.getLevelLabel(t), n.push(o); }); const s = { qualityData: { video: n }, callbacks: { video: ce.bind(this, this.switchQuality) } }; this.tech.setTimeout(function() { this.trigger({ type: 'masterplaylistchange', data: s }); }, 1); } }, e.prototype.getLevelLabel = function(t) { return t.height ? `${t.height}p` : t.width ? `${Math.round(9 * t.width / 16)}p` : t.bitrate ? `${t.bitrate / 1e3}kbps` : 0; }, e.prototype.onLevelLoaded = function(t, e) { this._duration = e.details.live ? Infinity : e.details.totalduration; }, e.prototype.onError = function(e, n) { const i = this.tech.player(); if (n.fatal) switch (n.type) { case t.ErrorTypes.NETWORK_ERROR: i.error({ code: 14, source: n }); break; case t.ErrorTypes.MEDIA_ERROR: this.hls.config.enableRecoverMediaError ? this.hlsjsErrorHandler(n) : i.error({ code: 15, source: n }); break; case t.ErrorTypes.MUX_ERROR: i.error({ code: 16, source: n }); break; case t.ErrorTypes.OTHER_ERROR: default: i.error({ code: 17, source: n }); } else switch (n.details) { case t.ErrorDetails.KEY_LOAD_ERROR: } }, e.prototype.errorHandlerFactory = function() { const t = this.hls; const e = this.tech.player(); let n = null; let i = null; let r = 0; return function(o) { const s = Date.now(); r == t.config.recoverMediaErrorMaxRetry ? e.error({ code: 15, source: o }) : (!n || s - n > 2e3 ? (n = s, t.recoverMediaError()) : (!i || s - i > 2e3) && (i = s, t.swapAudioCodec(), t.recoverMediaError()), r++); }; }, e.prototype.duration = function() { return this._duration; }, e; }()); const ba = /^application\/(x-mpegURL|vnd\.apple\.mpegURL)$/i; const Ta = /\.m3u8/i; var Ca = { name: 'hlsSourceHandler', canHandleSource(t) { return t.skipHlsJs || t.keySystems && t.keySystems['com.apple.fps.1_0'] ? '' : ba.test(t.type) ? 'probably' : Ta.test(t.src) ? 'maybe' : ''; }, handleSource(t, e, n) { return e.hlsProvider ? (e.hlsProvider.dispose(), e.hlsProvider = null) : n.hlsConfig && !1 === n.hlsConfig.autoStartLoad && e.on('play', function() { this.player().hasStarted() || this.hlsProvider.hls.startLoad(); }), e.hlsProvider = new _a(t, e, n), e.hlsProvider; }, canPlayType(t) { return ba.test(t) ? 'probably' : ''; } }; Ge.mountHlsProvider = Me, Me(); const Ea = (function() { function t(n, i, r) { const o = this; if (Zn(this, t), r = r || i.options_, this.player = ce(r.playerId), this.player.dash = this.player.dash || {}, this.tech_ = i, this.el_ = i.el(), this.elParent_ = this.el_.parentNode, this.hasFiniteDuration_ = !1, n.src) { i.isReady_ = !1, t.updateSourceData && (ce.log.warn('updateSourceData has been deprecated. Please switch to using hook("updatesource", callback).'), n = t.updateSourceData(n)), t.hooks('updatesource').forEach((t) => { n = t(n); }); const s = n.src; this.keySystemOptions_ = t.buildDashJSProtData(n.keySystemOptions || n.keySystems), this.player.dash.mediaPlayer = e.MediaPlayer().create(), this.mediaPlayer_ = this.player.dash.mediaPlayer, t.useVideoJSDebug && (ce.log.warn('useVideoJSDebug has been deprecated. Please switch to using hook("beforeinitialize", callback).'), t.useVideoJSDebug(this.mediaPlayer_)), t.beforeInitialize && (ce.log.warn('beforeInitialize has been deprecated. Please switch to using hook("beforeinitialize", callback).'), t.beforeInitialize(this.player, this.mediaPlayer_)), t.hooks('beforeinitialize').forEach((t) => { t(o.player, o.mediaPlayer_); }), this.mediaPlayer_.initialize(), this.retriggerError_ = function(t) { if (t.error === 'capability' && t.event === 'mediasource')o.player.error({ code: 4, message: 'The media cannot be played because it requires a feature that your browser does not support.' }); else if (t.error !== 'manifestError' || t.event.id !== 'createParser' && t.event.id !== 'codec' && t.event.id !== 'nostreams' && t.event.id !== 'nostreamscomposed' && t.event.id !== 'parse' && t.event.id !== 'multiplexedrep') if (t.error === 'mediasource')t.event.match('MEDIA_ERR_ABORTED') ? o.player.error({ code: 1, message: t.event }) : t.event.match('MEDIA_ERR_NETWORK') ? o.player.error({ code: 2, message: t.event }) : t.event.match('MEDIA_ERR_DECODE') ? o.player.error({ code: 3, message: t.event }) : t.event.match('MEDIA_ERR_SRC_NOT_SUPPORTED') ? o.player.error({ code: 4, message: t.event }) : t.event.match('MEDIA_ERR_ENCRYPTED') ? o.player.error({ code: 5, message: t.event }) : (t.event.match('UNKNOWN'), o.player.error({ code: 4, message: t.event })); else if (t.error === 'capability' && t.event === 'encryptedmedia')o.player.error({ code: 5, message: 'The media cannot be played because it requires encryption features that your browser does not support.' }); else if (t.error === 'key_session')o.player.error({ code: 5, message: t.event }); else if (t.error === 'download')o.player.error({ code: 2, message: 'The media playback was aborted because too many consecutive download errors occurred.' }); else { if (t.error !== 'mssError') return; o.player.error({ code: 3, message: t.event }); } else o.player.error({ code: 4, message: t.event.message }); setTimeout(() => { o.mediaPlayer_.reset(); }, 10); }, this.mediaPlayer_.on(e.MediaPlayer.events.ERROR, this.retriggerError_), this.getDuration_ = function(t) { const e = t.data.Period_asArray; const n = o.hasFiniteDuration_; t.data.mediaPresentationDuration || e[e.length - 1].duration ? o.hasFiniteDuration_ = !0 : o.hasFiniteDuration_ = !1, o.hasFiniteDuration_ !== n && o.player.trigger('durationchange'); }, this.mediaPlayer_.on(e.MediaPlayer.events.MANIFEST_LOADED, this.getDuration_), this.mediaPlayer_.on(e.MediaPlayer.events.STREAM_INITIALIZED, ce.bind(this, this.onMetaData)), this.currentQuality = { video: '', audio: '' }, Object.keys(e.MediaPlayer.events).forEach((t) => { o.mediaPlayer_.on(e.MediaPlayer.events[t], ce.bind(o, o.onEvent)); }), r.dashConfig && Object.keys(r.dashConfig).forEach((t) => { let e; const n = `set${t.charAt(0).toUpperCase()}${t.slice(1)}`; let i = r.dashConfig[t]; if (o.mediaPlayer_.hasOwnProperty(n) && (ce.log.warn(`Using dash options in videojs-contrib-dash without the set prefix has been deprecated. Change '${t}' to '${n}'`), t = n), !o.mediaPlayer_.hasOwnProperty(t)) return void ce.log.warn(`Warning: dash configuration option unrecognized: ${t}`); Array.isArray(i) || (i = [i]), (e = o.mediaPlayer_)[t].apply(e, i); }), this.mediaPlayer_.attachView(this.el_), this.mediaPlayer_.setAutoPlay(!1), Ae.call(null, this.player, i), Le.call(null, this.player, i, r), this.mediaPlayer_.setProtectionData(this.keySystemOptions_), this.mediaPlayer_.attachSource(s), this.tech_.triggerReady(); } } return t.buildDashJSProtData = function(t) { let e = {}; if (!t) return null; if (Array.isArray(t)) for (let n = 0; n < t.length; n++) { const i = t[n]; const r = ce.mergeOptions({}, i.options); r.licenseUrl && (r.serverURL = r.licenseUrl, delete r.licenseUrl), e[i.name] = r; } else e = t; return e; }, t.prototype.dispose = function() { const t = this; this.mediaPlayer_ && (this.mediaPlayer_.off(e.MediaPlayer.events.ERROR, this.retriggerError_), this.mediaPlayer_.off(e.MediaPlayer.events.MANIFEST_LOADED, this.getDuration_), Object.keys(e.MediaPlayer.events).forEach((n) => { t.mediaPlayer_.off(e.MediaPlayer.events[n], ce.bind(t, t.onEvent)); }), this.mediaPlayer_.reset()), this.player.dash && delete this.player.dash; }, t.prototype.duration = function() { return this.mediaPlayer_.isDynamic() && !this.hasFiniteDuration_ ? Infinity : this.mediaPlayer_.duration(); }, t.hooks = function(e, n) { return t.hooks_[e] = t.hooks_[e] || [], n && (t.hooks_[e] = t.hooks_[e].concat(n)), t.hooks_[e]; }, t.hook = function(e, n) { t.hooks(e, n); }, t.removeHook = function(e, n) { const i = t.hooks(e).indexOf(n); return i !== -1 && (t.hooks_[e] = t.hooks_[e].slice(), t.hooks_[e].splice(i, 1), !0); }, t.prototype.onMetaData = function(t) { const e = this; const n = this.mediaPlayer_; const i = n.getBitrateInfoListFor('video'); const r = n.getSettings(); const o = r.streaming.abr.autoSwitchBitrate.video; const s = []; if (i.length > 0) { s.push({ id: -1, label: 'auto', selected: o }), i.forEach((t, n) => { s.push({ id: n, label: e.getLevelLabel(t), selected: !o && e.currentQuality.video === n }); }); const a = { qualityData: { video: s }, callbacks: { video: ce.bind(this, this.switchQuality) } }; this.tech_.setTimeout(function() { this.trigger({ type: 'masterplaylistchange', data: a }); }, 1); } }, t.prototype.switchQuality = function(t) { const e = this.mediaPlayer_; t.id === -1 ? e.updateSettings({ streaming: { abr: { autoSwitchBitrate: { video: !0 } } } }) : t.id != this.currentQuality[t.trackType] && (e.updateSettings({ streaming: { abr: { autoSwitchBitrate: { video: !1 } } } }), e.setQualityFor(t.trackType, t.id)); }, t.prototype.getLevelLabel = function(t) { return t.height ? `${t.height}p` : t.width ? `${Math.round(9 * t.width / 16)}p` : t.bitrate ? `${t.bitrate / 1e3}kbps` : 0; }, t.prototype.onEvent = function(t) { switch (this.tech_.trigger({ type: `dash_${t.type}`, data: t }), t.type) { case e.MediaPlayer.events.QUALITY_CHANGE_REQUESTED: this.tech_.trigger({ type: 'dashqualityswitching', data: t }); break; case e.MediaPlayer.events.QUALITY_CHANGE_RENDERED: this.tech_.trigger({ type: 'dashqualityswitched', data: t }), this.currentQuality[t.mediaType] = t.newQuality; } }, t; }()); Ea.hooks_ = {}; const wa = function(t) { t = JSON.parse(JSON.stringify(t)), Ea.updateSourceData && (ce.log.warn('updateSourceData has been deprecated. Please switch to using hook("updatesource", callback).'), t = Ea.updateSourceData(t)), Ea.hooks('updatesource').forEach((e) => { t = e(t); }); const e = sn.createElement('video'); return !(t.keySystemOptions && !tn.navigator.requestMediaKeySystemAccess && !e.msSetMediaKeys); }; ce.DashSourceHandler = function() { return { name: 'dashSourceHandler', canHandleSource(t) { const e = /\.mpd/i; return wa(t) ? ce.DashSourceHandler.canPlayType(t.type) ? 'probably' : e.test(t.src) ? 'maybe' : '' : ''; }, handleSource(t, e, n) { return new Ea(t, e, n); }, canPlayType(t) { return ce.DashSourceHandler.canPlayType(t); } }; }, ce.DashSourceHandler.canPlayType = function(t) { return /^application\/dash\+xml/i.test(t) ? 'probably' : ''; }, Ge.mountDashProvider = Ne, Ne(), ce.Html5DashJS = Ea; const Sa = ce.getComponent('Component'); const ka = ['fileID', 'requestID', 'mediaType', 'mimeType', 'provider', 'resolution', 'rate', 'frames', 'buffer', 'connectionSpeed']; const Ia = ['fileID', 'requestID', 'mediaType', 'mimeType', 'resolution', 'rate', 'buffer']; const Pa = ['fileID', 'requestID', 'mediaType', 'mimeType', 'resolution', 'rate', 'buffer', 'provider', 'connectionSpeed']; const xa = ['info']; const Da = (function(t) { function e(n, i) { Zn(this, e); const r = ei(this, t.call(this, n, i)); return r.nodelist = {}, r.status = { fileID: '', requestID: '', mediaType: '', mimeType: '', provider: '', resolution: '', rate: '', frames: '', buffer: '', connectionSpeed: '', info: '' }, n.on('playcgiend', () => { clearTimeout(r.timeoutID), Object.keys(r.status).forEach((t) => { r.nodelist[t].reset(); }); }), n.on('statistic', ce.bind(r, (t) => { t.data.action === 'open' ? r.tick() : r.clearTimeout(r.timeoutID); })), r.init(), r; } return ti(e, t), e.prototype.tick = function() { const t = this; this.timeoutID = setTimeout(ce.bind(this, () => { t.tick(); }), 1e3), this.updatePanel(); }, e.prototype.createEl = function() { return ce.dom.createEl('div', { className: 'tcp-statistic-wrapper' }); }, e.prototype.init = function() { const t = this; Object.keys(this.status).forEach((e) => { const n = new va(t, { key: e, data: t.status[e] }); t.nodelist[e] = n, t.addChild(n); }); }, e.prototype.updatePanel = function() { const t = this; if (this.player().techName_ === 'Html5') switch (this.getStatus(), this.status.mediaType) { case 'm3u8': ka.forEach((e) => { t.nodelist[e].updateContent(t.status[e]); }); break; case 'mp4': Ia.forEach((e) => { t.nodelist[e].updateContent(t.status[e]); }); break; case 'mpd': Pa.forEach((e) => { t.nodelist[e].updateContent(t.status[e]); }); } else this.player().techName_ === 'Flash' && (this.getFlashStatus(), xa.forEach((e) => { e === 'info' && t.nodelist[e].updateContent(t.status[e]); })); }, e.prototype.getStatus = function() { this.getFileID(), this.getRequestID(), this.getMediaType(), this.getMIMEType(), this.getResolution(), this.getRate(), this.getProvider(), this.getBuffer(), this.status.mediaType === 'm3u8' && (this.getFrames(), this.getConnectionSpeed()), this.status.mediaType === 'mpd' && this.getConnectionSpeed(); }, e.prototype.getFlashStatus = function() { this.status.mediaType = 'flash', this.getSupport(); }, e.prototype.getFileID = function() { const t = this.player().options_.fileID || ''; return this.status.fileID = t, t; }, e.prototype.getRequestID = function() { const t = this.player().PlayerMetrics().playStatus.requestID; return this.status.requestID = t, t; }, e.prototype.getMediaType = function() { this.player_.src() && /\/(.+)\.(.+)\?|\/(.+)\.(.+)/.test(this.player_.src()); const t = RegExp.$2 || RegExp.$4 || ''; return this.status.mediaType = t, t; }, e.prototype.getMIMEType = function() { const t = this.player().src(); const e = Us[gr(t)] || ''; return this.status.mimeType = e, e; }, e.prototype.getResolution = function() { const t = this.player_.tech_.el_.videoHeight || 0; const e = this.player_.tech_.el_.videoWidth || 0; const n = `${e} x ${t}`; return this.status.resolution = n, n; }, e.prototype.getRate = function() { const t = this.player().playbackRate() || 1; return this.status.rate = `${t}x`, t; }, e.prototype.getBuffer = function() { const t = this.player_.bufferedEnd().toFixed(1) || 0; const e = this.player_.duration().toFixed(1) || 0; const n = `${(t / e * 100).toFixed(1)}%`; const i = `${t} / ${e} (${n})`; return this.status.buffer = i, i; }, e.prototype.getSupport = function() { let t = void 0; return t = this.status.mediaType !== 'm3u8' && this.status.mediaType !== 'mp4' && this.status.mediaType !== 'dash' ? '视频统计功能不支持当前视频格式' : '', this.status.info = t, t; }, e.prototype.getProvider = function() { const t = this.player_.tech_.sourceHandler_; return t instanceof _a ? (this.status.provider = 'HlsJS', 'HlsJS') : t instanceof Ea ? (this.status.provider = 'DashJS', 'DashJS') : ''; }, e.prototype.getFrames = function() { const t = this.player_.getVideoPlaybackQuality(); const e = `${t.droppedVideoFrames || 0} dropped of ${t.totalVideoFrames || 0}`; return this.status.frames = e, e; }, e.prototype.getConnectionSpeed = function() { let t = void 0; if (this.status.mediaType === 'm3u8') { const e = this.player_.tech_.hlsProvider.hls.abrController._bwEstimator; t = e && e.getEstimate() ? `${(125e-6 * e.getEstimate()).toFixed(0)}KB/s` : '0KB/s', this.status.connectionSpeed = t; } if (this.status.mediaType === 'mpd') { const n = this.player_.dash.mediaPlayer; const i = n.getDashMetrics(); const r = n.getDashAdapter(); const o = n.getActiveStream().getStreamInfo(); const s = o.index; const a = i.getCurrentRepresentationSwitch('video').to; const l = r.getBandwidthForRepresentation(a, s); t = l ? `${(125e-6 * l).toFixed(0)}KB/s` : '0KB/s', this.status.connectionSpeed = t; } return t; }, e; }(Sa)); ce.registerComponent('VideoStatisticWrapper', Da); const Ma = ce.getComponent('Component'); const Ra = (function(t) { function e(n, i) { Zn(this, e); const r = ei(this, t.call(this, n, i)); return n.on('statistic', ce.bind(r, (t) => { t.data.action === 'open' ? r.show() : r.hide(); })), n.on('playcgistart', () => { n.trigger({ type: 'statistic', data: { action: 'close' } }); }), r.init(), r; } return ti(e, t), e.prototype.createEl = function() { const t = this; const e = ce.dom.createEl('div', { className: 'tcp-statistic vjs-hidden' }); const n = ce.dom.createEl('div', { className: 'tcp-statistic-close', innerText: '[X]' }); return n.addEventListener('click', () => { t.hide(), t.player().trigger({ type: 'statistic', data: { action: 'close' } }); }), e.appendChild(n), e; }, e.prototype.init = function() { this.addChild('VideoStatisticWrapper'); }, e.prototype.show = function() { t.prototype.show.call(this), this.popped = !0; }, e.prototype.hide = function() { t.prototype.hide.call(this), this.popped = !1; }, e; }(Ma)); ce.registerComponent('VideoStatisticPanel', Ra); const Aa = ce.getComponent('MenuItem'); const Oa = (function(t) { function e(n, i) { Zn(this, e); const r = ei(this, t.call(this, n, i)); return r.addClass('tc-menu-list'), r.open = !1, r.hasOpen = !1, r.player = n, r.setup(), r; } return ti(e, t), e.prototype.setup = function() { const t = this; this.on(['tap', 'click'], () => { const e = t.player.tech().el(); t.hasOpen || (window.MtaH5 && MtaH5.clickStat('mirror', { appid: t.player.options_.appID, fileid: t.player.options_.fileID }), t.player.trigger({ type: 'feature', data: 'mirror' })), t.open ? (ce.dom.removeClass(e, 'tcp-mirror'), ce.dom.removeClass(t.el_, 'tcp-menu-item-select')) : (ce.dom.addClass(e, 'tcp-mirror'), ce.dom.addClass(t.el_, 'tcp-menu-item-select'), t.hasOpen = !0), t.open = !t.open; }); }, e; }(Aa)); ce.registerComponent('MirrorMenuItem', Oa); const ja = ce.getComponent('MenuItem'); const La = (function(t) { function e(n, i) { Zn(this, e); const r = ei(this, t.call(this, n, i)); return r.addClass('tc-menu-list'), r; } return ti(e, t), e; }(ja)); ce.registerComponent('PoweredByMenuItem', La); const Na = ce.getComponent('MenuItem'); const Ba = (function(t) { function e(n, i) { Zn(this, e); const r = ei(this, t.call(this, n, i)); return r.addClass('tc-menu-list'), r.hasOpen = !1, r.player = n, n.on('statistic', ce.bind(r, (t) => { t.data.action === 'close' && (ce.dom.removeClass(r.el_, 'tcp-menu-item-select'), r.hasOpen = !1); })), r.setup(), r; } return ti(e, t), e.prototype.setup = function() { const t = this; this.on(['tap', 'click'], () => { t.hasOpen ? (ce.dom.removeClass(t.el_, 'tcp-menu-item-select'), t.player.trigger({ type: 'statistic', data: { action: 'close' } }), t.hasOpen = !1) : (ce.dom.addClass(t.el_, 'tcp-menu-item-select'), t.player.trigger({ type: 'statistic', data: { action: 'open' } }), t.hasOpen = !0, window.MtaH5 && MtaH5.clickStat('mirror', { appid: t.player.options_.appID, fileid: t.player.options_.fileID }), t.player.trigger({ type: 'feature', data: 'statistic' })); }); }, e; }(Na)); ce.registerComponent('StatusMenuItem', Ba); const Fa = (ce.getComponent('Component'), ce.getComponent('Menu')); const Va = (ce.getComponent('MenuItem'), (function(t) { function e(n, i) { Zn(this, e); const r = ei(this, t.call(this, n, i)); r.hide(), r.addChild('PoweredByMenuItem', { label: 'Powered by Tencent Cloud.' }), !i.statistic || dn || yn || r.addChild('StatusMenuItem', { label: 'Video statistic' }), i.mirror && r.addChild('MirrorMenuItem', { label: 'Mirror' }), n.on('contextmenu', ce.bind(r, r.onContextmenu)), n.on(['tap', 'click'], ce.bind(r, function(t) { if (this.popped) return this.hide(), t.stopPropagation(), t.preventDefault(), !1; })), ce.on(document, ['tap', 'click'], ce.bind(r, function(t) { this.popped && this.hide(); })); const o = r; return r.children().forEach((t) => { t.on(['tap', 'click'], () => { o.hide(); }); }), r; } return ti(e, t), e.prototype.createEl = function() { const e = t.prototype.createEl.call(this); return ce.dom.addClass(e, 'tcp-right-click-popup-menu'), e; }, e.prototype.show = function() { t.prototype.show.call(this), this.popped = !0; }, e.prototype.hide = function() { t.prototype.hide.call(this), this.popped = !1; }, e.prototype.onContextmenu = function(t) { t.preventDefault(), this.show(); const e = this.el(); const n = t.clientX; const i = t.clientY; const r = we(); const o = r.width; const s = r.height; let a = n + e.offsetWidth - o + 5; a = Math.max(0, a); let l = i + e.offsetHeight - s + 5; l = Math.max(0, l); const c = this.player().el().getBoundingClientRect(); e.style.left = `${Math.max(0, n - c.left - a)}px`, e.style.top = `${Math.max(0, i - c.top - l)}px`; }, e; }(Fa))); ce.registerComponent('RightClickPopupMenu', Va); const Ha = ce.getComponent('ClickableComponent'); const Ua = ce.getComponent('TimeTooltip'); const qa = ce.getComponent('Component'); const za = ce.dom; const Wa = ce.formatTime; const Ka = { POPUP_CONTAINER_OFFSET: -130, POPUP_CONTAINER_OFFSET_WITHOUTGIT: -100, TRIANGLE_OFFEST: 96, TRIANGLE_OFFEST_WITHOUTGIF: 95 }; const Qa = { TRIANGLE_OFFEST: 6, POPUP_CONTAINER_OFFSET: 0 }; const Xa = (function(t) { function e(n, i) { Zn(this, e); const r = ei(this, t.call(this, n, i)); return r.duration = 0, r.registerListener(), r; } return ti(e, t), e.prototype.registerListener = function() { this.player_.one('canplay', ce.bind(this, this.resetDotsElement)); }, e.prototype.resetDotsElement = function() { const t = this.player_; this.duration = t.duration(), za.emptyEl(this.el_), this.resetEl(); }, e.prototype.resetEl = function() { this.setUpEl(); }, e.prototype.dotMouseLeave = function() { const t = event.currentTarget; const e = t.getAttribute('container-id'); this.getChildById(e).hide(); }, e.prototype.dotHover = function() { const t = event.currentTarget.parentElement.offsetWidth; const e = event.currentTarget.offsetLeft + 140; const n = this.getChildById(event.currentTarget.getAttribute('container-id')); const i = n.getAttribute('class').search('tcp-without-gif') >= 0; const r = n.el_.querySelector('.tcp-triangle-both') || n.el_.querySelector('.tcp-triangle'); e > t ? i ? (n.el_.style.left = `${Ka.POPUP_CONTAINER_OFFSET_WITHOUTGIT}px`, r.style.left = `${Ka.TRIANGLE_OFFEST_WITHOUTGIF}%`) : (n.el_.style.left = `${Ka.POPUP_CONTAINER_OFFSET}px`, r.style.left = `${Ka.TRIANGLE_OFFEST}%`) : event.currentTarget.offsetLeft <= 140 && !i && (n.el_.style.left = `${Qa.POPUP_CONTAINER_OFFSET}px`, r.style.left = `${Qa.TRIANGLE_OFFEST}px`); const o = n.getChild('DotImage'); if (o) { const s = o.el_.getElementsByClassName('tcp-dot-timestamp')[0]; const a = event.currentTarget.getAttribute('dotinsecond'); const l = Wa(a); s.innerHTML = l; }n.show(); }, e.prototype.setChildInTheContainer = function(t, e) { const n = t.content && t.content !== '' ? decodeURIComponent(t.content.replace(/\+/g, ' ')) : ''; if (n !== '') { var i = e.addChild('DotComment'); i.el_.innerHTML = Pe(n); } if (t.img) { e.el_.querySelector('.tcp-triangle').setAttribute('class', 'tcp-triangle-both'); const r = e.addChild('DotImage'); if (r.el_.firstChild.setAttribute('src', t.img), n == '')e.addClass('tcp-only-gif'), r.el_.firstChild.className = 'tcp-image-in-container-only-image'; else { this.countContentSize(n) <= 20 && (e.addClass('tcp-single-line'), i.el_.style.height = '23px'); } } else if (n !== '') { const o = this.countContentSize(n); o <= 14 ? e.addClass('tcp-single-line') : o <= 28 && e.addClass('tcp-two-lines'), e.addClass('tcp-without-gif'), i.addClass('tcp-large-comment'); } }, e.prototype.markSetUp = function(t) { const e = t.timeOffset > 0 ? t.timeOffset / 1e3 : 0; const n = this.duration ? this.duration : 0; if (!(typeof e !== 'number' || e > n)) { const i = document.createElement('div'); i.className = 'tcp-dot-basic-style', i.setAttribute('dotinsecond', e.toString()), t.class && (i.className += ` ${t.class}`); const r = this.addChild('PopUpContainer'); return i.setAttribute('container-id', r.id_), this.setChildInTheContainer(t, r), i.appendChild(r.el_), i.style.left = `${e / n * 100}%`, i.addEventListener('mouseover', ce.bind(this, this.dotHover)), i.addEventListener('mouseleave', ce.bind(this, this.dotMouseLeave)), i; } }, e.prototype.setUpEl = function() { const e = this; const n = this.player_.options_.dots || 0; const i = this.el_ || t.prototype.createEl.call(this); return ce.dom.addClass(i, 'tcp-dot-component'), n && n instanceof Array && n.length > 0 && n.forEach((t) => { const n = t.content || ''; if (n && n != '' || t.img) { const r = e.markSetUp(t); r && i.appendChild(r); } }), i; }, e.prototype.countContentSize = function(t) { for (var e = 0, n = t.length, i = -1, r = 0; r < n; r++)i = t.charCodeAt(r), e += i >= 0 && i <= 128 ? 1 : 2; return e; }, e.prototype.createEl = function() { return this.setUpEl(); }, e; }(Ha)); ce.registerComponent('ProgressMarkerGenerator', Xa); const $a = (function(t) { function e(n, i) { Zn(this, e); const r = ei(this, t.call(this, n, i)); return r.addClass('tcp-dot-comment'), r; } return ti(e, t), e; }(qa)); ce.registerComponent('DotComment', $a); const Ga = (function(t) { function e(n, i) { Zn(this, e); const r = ei(this, t.call(this, n, i)); r.addClass('tcp-dot-image'); const o = r.el_ || t.prototype.createEl.call(r); const s = za.createEl('img'); s.className = 'tcp-image-in-container', o.appendChild(s); const a = za.createEl('span'); return a.className = 'tcp-dot-timestamp', a.innerHTML = '', o.appendChild(a), r; } return ti(e, t), e; }(qa)); ce.registerComponent('DotImage', Ga); const Ya = (function(t) { function e(n, i) { Zn(this, e); const r = ei(this, t.call(this, n, i)); r.addClass('tcp-popup-container'); const o = za.createEl('div'); return o.setAttribute('class', 'tcp-triangle'), r.el_.appendChild(o), r.hide(), r; } return ti(e, t), e; }(Ua)); ce.registerComponent('PopUpContainer', Ya); const Ja = ce.getComponent('Button'); const Za = ce.getComponent('BigPlayButton'); Za.prototype.createEl = function() { const t = Ja.prototype.createEl.call(this); let e = Be(); return (this.options_.shapeType || this.options_.styleType) && (e = Be(this.options_.shapeType, this.options_.styleType)), t.appendChild(ce.dom.createEl('div', { className: 'vjs-button-icon', innerHTML: e })), t; }, Za.prototype.controlText_ = 'Play'; const tl = ce.getComponent('Component'); ce.getComponent('LoadingSpinner').prototype.createEl = function() { return tl.prototype.createEl.call(this, 'div', { className: 'tcp-loading-spinner', dir: 'ltr' }); }; const el = ce.getPlugin('plugin'); const nl = ce.log; const il = (function(t) {
 function e(n, i) { Zn(this, e), nl('Skin initializing'); const r = ei(this, t.call(this, n)); return r.player.addClass('tcp-skin'), nl('Skin initialized'), r; } return ti(e, t), e;
}(el)); ce.registerPlugin('Skin', il); const rl = ce.getPlugin('plugin'); const ol = ce.log; const sl = (function(t) { function e(n, i) { Zn(this, e), ol('VID initializing'); const r = ei(this, t.call(this, n)); return r.init(r.player.options_), ol('VID initialized'), r; } return ti(e, t), e.prototype.init = function(t) { const e = this.player; const n = t.sources; t && t.appID && t.fileID || t.plugins.DRM && n.length == 0 ? t.children.splice(0, t.children[0] == 'mediaLoader' ? 1 : 0, 'mediaAsyncLoader') : (n.length > 0 || t.multiResolution && t.multiResolution.sources ? t.children[0] != 'mediaLoader' && t.children.unshift('mediaLoader') : (ol('no video fileID or source'), t.children[0] != 'mediaLoader' && t.children.unshift('mediaLoader')), e.ready(ce.bind(this, () => { e.mediaAsyncLoader || (e.mediaAsyncLoader = e.addChild('MediaAsyncLoader')); }))); }, e; }(rl)); ce.registerPlugin('VID', sl); var al = Fe; const ll = typeof Je === 'object' && Je && Je.Object === Object && Je; const cl = ll; const ul = typeof self === 'object' && self && self.Object === Object && self; const hl = cl || ul || Function('return this')(); const pl = hl; const dl = function() { return pl.Date.now(); }; var fl = dl; const yl = pl.Symbol; const gl = yl; const vl = Object.prototype; var ml = vl.hasOwnProperty; var _l = vl.toString; var bl = gl ? gl.toStringTag : undefined; var Tl = Ve; const Cl = Object.prototype; var El = Cl.toString; var wl = He; var Sl = '[object Null]'; var kl = '[object Undefined]'; var Il = gl ? gl.toStringTag : undefined; var Pl = Ue; var xl = qe; var Dl = '[object Symbol]'; var Ml = ze; var Rl = NaN; var Al = /^\s+|\s+$/g; var Ol = /^[-+]0x[0-9a-f]+$/i; var jl = /^0b[01]+$/i; var Ll = /^0o[0-7]+$/i; var Nl = parseInt; var Bl = We; var Fl = 'Expected a function'; var Vl = Math.max; var Hl = Math.min; var Ul = Ke; var ql = 'Expected a function'; const zl = Qe; const Wl = ce.getComponent('Component'); const Kl = (function(t) { function e(n, i) { Zn(this, e); const r = ei(this, t.call(this, n, i)); return r.on('mousemove', r.handleMouseMove), r.on('mouseup', r.handleMouseUp), r; } return ti(e, t), e.prototype.createEl = function() { return t.prototype.createEl.call(this, 'div', { className: 'vjs-progress-control vjs-control tcp-dvr-progress-control' }); }, e.prototype.update = function(t) { this.getChild('DvrSeekBar').update(t); }, e.prototype.handleMouseMove = function(t) { const e = this.getChild('DvrSeekBar'); const n = e.calculateDistance(t); const i = e.getChild('DvrMouseTimeDisplay'); i && i.update(ce.dom.getBoundingClientRect(e.el()), n); }, e.prototype.handleMouseUp = function(t) { this.getChild('DvrSeekBar').handleMouseUp(t); }, e; }(Wl)); Kl.prototype.options_ = { children: ['DvrSeekBar'] }, ce.registerComponent('DvrProgressControl', Kl); const Ql = ce.getComponent('Slider'); const Xl = (function(t) { function e(n, i) { Zn(this, e); const r = ei(this, t.call(this, n, i)); return r.percent_ = 1, r.update = zl(ce.bind(r, r.update), 50), r.on(n, 'seekToLive', ce.bind(r, function(t) { this.update(t.data); })), r; } return ti(e, t), e.prototype.createEl = function() { return t.prototype.createEl.call(this, 'div', { className: 'vjs-progress-holder' }, { 'aria-label': this.localize('Progress Bar') }); }, e.prototype.update = function(t) { t != undefined && (this.percent_ = t, this.bar.update(ce.dom.getBoundingClientRect(this.el_), t), this.updateAriaAttributes(t)); }, e.prototype.handleMouseDown = function(e) { t.prototype.handleMouseDown.call(this, e), this.isMouseDown = !0; }, e.prototype.handleMouseMove = function(t) { const e = this.calculateDistance(t); this.update(e); }, e.prototype.handleMouseUp = function(e) { t.prototype.handleMouseUp.call(this); const n = this.calculateDistance(e); this.update(n), this.player().Dvr().timeShift(n); }, e.prototype.stepBack = function() {}, e.prototype.stepForward = function() {}, e.prototype.updateAriaAttributes = function(t) { this.el().setAttribute('aria-valuenow', (100 * t).toFixed(2)); }, e.prototype.getPercent = function() { return this.percent_; }, e; }(Ql)); Xl.prototype.options_ = { children: ['DvrMouseTimeDisplay', 'DvrTimeShiftBar'], barName: 'DvrTimeShiftBar' }, ce.registerComponent('DvrSeekBar', Xl); const $l = (function(t) { function e(n, i) { Zn(this, e); const r = ei(this, t.call(this, n, i)); return r.el_.style.width = '100%', r; } return ti(e, t), e.prototype.createEl = function() { return t.prototype.createEl.call(this, 'div', { className: 'vjs-play-progress vjs-slider-bar tcp-dvr-time-shift', innerHTML: `<span class="vjs-control-text"><span>${this.localize('Progress')}</span>: 100%</span>` }); }, e.prototype.update = function(t, e) { const n = `${(100 * e).toFixed(2)}%`; this.el_.style.width = n; }, e; }(Wl)); ce.registerComponent('DvrTimeShiftBar', $l); const Gl = ce.getComponent('MouseTimeDisplay'); const Yl = (function(t) { function e() { return Zn(this, e), ei(this, t.apply(this, arguments)); } return ti(e, t), e.prototype.update = function(t, e) { const n = this; this.rafId_ && this.cancelAnimationFrame(this.rafId_), this.rafId_ = this.requestAnimationFrame(() => { const i = n.player().Dvr().dvrData.maxTimeShift; const r = ce.formatTime((1 - e) * i, i); n.el_.style.left = `${t.width * e}px`, n.getChild('timeTooltip').update(t, e, r); }); }, e; }(Gl)); ce.registerComponent('DvrMouseTimeDisplay', Yl); const Jl = ce.getComponent('Button'); const Zl = (function(t) { function e() { return Zn(this, e), ei(this, t.apply(this, arguments)); } return ti(e, t), e.prototype.createEl = function() { const t = Jl.prototype.createEl.call(this, 'button', { className: 'vjs-live-control vjs-control' }); return this.contentEl_ = ce.dom.createEl('div', { className: 'vjs-live-display', innerHTML: this.localize('LIVE') }, { 'aria-live': 'off' }), t.appendChild(this.contentEl_), t; }, e.prototype.update = function() {}, e.prototype.updateControlText = function(t) { this.controlText(t ? '直播中' : '返回直播'); }, e.prototype.handleClick = function(t) { this.player().Dvr().seekToLive(); }, e; }(Jl)); Zl.prototype.controlText_ = '返回直播', ce.registerComponent('LiveButton', Zl); const tc = ce.getPlugin('plugin'); const ec = (function(t) { function e(n, i) { Zn(this, e); const r = ei(this, t.call(this, n)); r.isInit = !1, r.options = i; const o = r; return n.ready(() => { const t = n.tech(!0); const e = t && t.hlsProvider; if (e && e.Hls) { const i = e.Hls; t.one(i.Events.MANIFEST_LOADED, (t) => {}), t.one(i.Events.LEVEL_LOADED, (t) => {}), n.one('loadedmetadata', (e) => { t.el_.setAttribute('poster', ''), o.init(), o.options.liveURL && o.seekToLive(); }); } }), r; } return ti(e, t), e.prototype.init = function() { const t = this.player; const e = t.tech(!0).hlsProvider; if (this.parseM3u8(e.manifests[0]), !this.dvrData.startTime && !this.isInit) return void t.one('loadedmetadata', ce.bind(this, function(t) { this.init(); })); this.initControl(), this.delay = Te('delay', t.tech_.currentSource_.src) || 0, this.updateControl(!this.isLive()), t.on('loadedmetadata', ce.bind(this, function() { this.parseM3u8(e.manifests[0]), this.delay = Te('delay', t.tech_.currentSource_.src) || 0, this.updateControl(); })), this.isInit = !0; }, e.prototype.initControl = function() { const t = this.player; t.addClass('vjs-dvr'), t.controlBar.getChild('ProgressControl').hide(), t.controlBar.getChild('LiveDisplay').hide(), t.controlBar.addChild('DvrProgressControl', {}, 5), t.controlBar.addChild('liveButton', {}, 6); }, e.prototype.updateControl = function(t) { const e = this.player; const n = e.controlBar.getChild('ProgressControl'); const i = e.controlBar.getChild('LiveDisplay'); const r = e.controlBar.getChild('DvrProgressControl'); const o = e.controlBar.getChild('LiveButton'); e.toggleClass('vjs-dvr-live', this.isLive()), o.updateControlText(this.isLive()), t && r.update(1 - this.delay / this.dvrData.maxTimeShift), this.dvrData.startTime ? (r.show(), o.show(), n.hide(), i.hide()) : (r.hide(), o.hide(), n.show(), i.show()); }, e.prototype.seekToLive = function() { this.isLive() || (this.timeShift(1), this.player.trigger({ type: 'seekToLive', data: 1 })); }, e.prototype.isLive = function() { return !(this.delay > 0); }, e.prototype.timeShift = function(t) { const e = this.player; const n = (e.getChild('ControlBar').getChild('LiveButton'), e.tech_.currentSource_); const i = Math.floor(this.dvrData.maxTimeShift * (1 - t)); this.delay = i, i == 0 && this.options.liveURL ? e.src(this.options.liveURL) : (n.src = (this.options.shiftURL || n.src).replace(/delay=*(\d+)/, `delay=${i}`), e.src(e.tech_.currentSource_.src)), e.bigPlayButton.hide(), e.posterImage.hide(), e.tech_.one('hlsManifestParsed', ce.bind(this, () => { e.play(); })); }, e.prototype.parseM3u8 = function(t) { this.dvrData = {}; for (let e = new RegExp([/#EXT-TX-TS-START-TIME:*(.+)/.source, /|#EXT-TX-TS-DURATION:*(.+)/.source].join(''), 'g'), n = void 0; (n = e.exec(t)) !== null;)n[1] ? this.dvrData.startTime = n[1] : n[2] && (this.dvrData.duration = n[2]); this.dvrData.startTime && (this.dvrData.maxTimeShift = Math.min(Math.floor((new Date()).getTime() / 1e3 - this.dvrData.startTime), this.dvrData.duration)); }, e; }(tc)); ce.registerPlugin('Dvr', ec); const nc = ce.getComponent('Menu'); const ic = (function(t) { function e() { return Zn(this, e), ei(this, t.apply(this, arguments)); } return ti(e, t), e.prototype.addItem = function(e) { t.prototype.addItem.call(this, e); }, e; }(nc)); const rc = ce.getComponent('MenuItem'); const oc = (function(t) { function e(n, i) { return Zn(this, e), ei(this, t.call(this, n, i)); } return ti(e, t), e.prototype.handleClick = function(e) { if (t.prototype.handleClick.call(this, e), this.updateItems(), this.options_.callback(this.options_), this.options_.trackType == 'video') { const n = this.player().controlBar.getChild(`${this.options_.trackType}QualitySwitcherMenuButton`); n.updateLabel(this.options_), n.unpressButton(); } }, e.prototype.updateItems = function() { for (let t = this.player().controlBar.getChild(`${this.options_.trackType}QualitySwitcherMenuButton`), e = t.getChild(`${this.options_.trackType}QualitySwitcherMenu`), n = e.children(), i = 0; i < n.length; i++) { const r = n[i]; this !== r ? (r.selected(!1), r.options_.selected = !1) : r.options_.selected = !0; } }, e; }(rc)); const sc = ce.getComponent('MenuButton'); const ac = (ce.getComponent('Menu'), (function(t) { function e() { return Zn(this, e), ei(this, t.apply(this, arguments)); } return ti(e, t), e.prototype.createEl = function() { const e = t.prototype.createEl.call(this); return this.labelEl_ = ce.dom.createEl('div', { className: 'tcp-quality-switcher-value', innerHTML: '' }), e.appendChild(this.labelEl_), e; }, e.prototype.createMenu = function() { for (var t = this.options_.qualityList, e = new ic(this.player(), { name: `${this.options_.trackType}QualitySwitcherMenu` }), n = void 0, i = t.length - 1; i > -1; i--) { const r = t[i]; n = ce.mergeOptions(r, { trackType: this.options_.trackType, callback: this.options_.callback, selectable: !0 }), e.addItem(new oc(this.player(), n)), r.selected && this.updateLabel(r); } return e; }, e.prototype.updateLabel = function(t) { this.labelEl_.innerHTML = `<p>${this.localize(t.label)}</p>`; }, e; }(sc))); const lc = ce.getPlugin('plugin'); const cc = ['video', 'audio', 'subtitle']; const uc = { video: 'tcp-video-quality-switcher', audio: 'tcp-audio-quality-switcher', subtitle: 'tcp-subtitle-quality-switcher' }; const hc = ce.log; const pc = (function(t) { function e(n, i) { Zn(this, e); const r = ei(this, t.call(this, n)); return r.options = i, n.on('qualitydataloaded', ce.bind(r, r.init)), r; } return ti(e, t), e.prototype.init = function(t) { hc('QualitySwitcher initializing', t); const e = this.player; const n = t.data.qualityData; const i = t.data.callbacks; if (this.setOptions({ qualityData: n, callbacks: i }), !e.controlBar) return void hc('QualitySwitcher can not initialize without control bar'); for (let r = 0; r < cc.length; r++) { const o = cc[r]; const s = `${o}QualitySwitcherMenuButton`; let a = e.controlBar.getChild(s); n[o] && n[o].length > 0 && e.controlBar.options_.QualitySwitcherMenuButton && (a && a.el() && (a.dispose(), e.controlBar.removeChild(a)), this.repleaceLabel(o, n), a = new ac(e, { name: s, qualityList: n[o], callback: i[o], trackType: o }), a.addClass(uc[o]), e.controlBar.addChild(a, {}, 10)); }hc('QualitySwitcher initialized', t, this); }, e.prototype.setOptions = function(t) { this.options = ce.mergeOptions(this.options, t); }, e.prototype.setVideoQuality = function(t) { if (this.options.qualityData && this.options.callbacks.video) { for (let e = this.options.qualityData.video, n = 0; n < e.length; n++)e[n].selected && (e[n].selected = !1), e[n].id === t.id && (e[n].selected = !0); this.options.callbacks.video(t); } }, e.prototype.getVideoQualityData = function() { return this.options.qualityData ? this.options.qualityData.video : undefined; }, e.prototype.repleaceLabel = function(t, e) { if (this.options.qualityLabelList) { const n = this.options.qualityLabelList[t]; const i = e[t]; if (i && i.length > 0 && n && n.length > 0) for (let r = 0; r < i.length; r++) { let o = i[r].label; o = o.slice(0, o.length - 1); for (let s = 0; s < n.length; s++) if (n[s].height == o) { i[r].label = n[s].resolutionName; break; } } } }, e.prototype.reset = function() { for (let t = this.player, e = 0; e < cc.length; e++) { const n = cc[e]; const i = t.controlBar && t.controlBar.getChild(`${n}QualitySwitcherMenuButton`); i && i.el() && (i.dispose(), t.controlBar.removeChild(i)); } }, e; }(lc)); ce.registerPlugin('QualitySwitcher', pc); const dc = ce.getPlugin('plugin'); const fc = ce.log; const yc = { labels: { FLU: '流畅', SD: '标清', HD: '高清', FHD: '超清' }, showOrder: ['FLU', 'SD', 'HD', 'FHD'], defaultRes: 'SD' }; const gc = (function(t) { function e(n, i) { Zn(this, e); const r = ei(this, t.call(this, n)); return r.options = i, i.useManualOption && (r.manualOptions = st({}, i)), r.hasInit = !1, n.on('multiresolutionchange', ce.bind(r, function(t) { t.data && this.update(data); })), n.on(['resolutionswitching', 'resolutionswitched'], ce.bind(r, function(t) { t.type == 'resolutionswitching' ? this.player.addClass('tcp-res-switching') : this.player.removeClass('tcp-res-switching'); })), n.ready(ce.bind(r, function() { const t = n.tech(!0); t && (t.on('masterplaylistchange', ce.bind(this, this.onMasterPlaylistChange)), t.on('hlsresolutionswitching', ce.bind(this, this.onHlsLevelChange)), t.on('hlsresolutionswitched', ce.bind(this, this.onHlsLevelChange)), t.on('dashqualityswitching', ce.bind(this, this.onDashQualityChange)), t.on('dashqualityswitched', ce.bind(this, this.onDashQualityChange))), this.hasInit = !0; })), r.init(r.player.options_.multiResolution), r; } return ti(e, t), e.prototype.init = function(t) { const e = this.player; const n = st({}, yc, t, this.manualOptions); const i = n && n.sources; if (this.options = n, i) { fc('MultiResolution initializing', n); let r = void 0; if (this.currentID = n.defaultRes = i[n.defaultRes] ? n.defaultRes : Object.keys(i).shift(), r = i[this.currentID], e.options_.children[0] != 'mediaLoader' || this.hasInit)e.src(r); else { let o; (o = e.options_.sources).push.apply(o, r); } this.hasInit || (this.hasInit = !0), e.ready(ce.bind(this, function() { e.trigger({ type: 'qualitydataloaded', data: this.initQualityData(n) }), e.one('loadedmetadata', function() { const t = this.tech(!0); t.name_ != 'flash' && t.el_.getAttribute('poster') && (t.el_.removeAttribute('poster'), delete t.el_.poster); }); })), fc('MultiResolution initialized'); } }, e.prototype.reset = function() { this.player.QualitySwitcher().reset(); }, e.prototype.update = function(t) { this.init(t); }, e.prototype.store = function(t) { if (!t) return this.options; this.options = ce.mergeOptions(yc, this.options, t); }, e.prototype.onMasterPlaylistChange = function(t) { this.player.trigger({ type: 'qualitydataloaded', data: t.data }); }, e.prototype.onHlsLevelChange = function(t) { t.type == 'hlsresolutionswitching' ? this.player.trigger({ type: 'resolutionswitching', data: t.data }) : t.type == 'hlsresolutionswitched' && this.player.trigger({ type: 'resolutionswitched', data: t.data }); }, e.prototype.onDashQualityChange = function(t) { t.type == 'dashqualityswitching' ? this.player.trigger({ type: 'resolutionswitching', data: t.data }) : t.type == 'dashqualityswitched' && this.player.trigger({ type: 'resolutionswitched', data: t.data }); }, e.prototype.switchResolution = function(t) { if (this.currentID != t.id) { const e = this.player; const n = e.currentTime(); const i = (e.paused(), e.ended()); const r = e.playbackRate(); const o = e.controlBar && e.controlBar.progressControl && e.controlBar.progressControl.seekBar.playProgressBar.el().style.width || 0; const s = ce.browser.IS_IOS || ce.browser.IS_ANDROID ? 'loadeddata' : 'loadedmetadata'; e.trigger({ type: 'resolutionswitching', data: t }), e.one(s, () => { e.controlBar && e.controlBar.progressControl && (e.controlBar.progressControl.seekBar.playProgressBar.el().style.width = o), i || e.currentTime(n), e.techName_ == 'Flash' ? (e.play(), e.tech(!0).trigger('seeked')) : (e.play(), e.playbackRate() != r && e.playbackRate(r)), e.trigger({ type: 'resolutionswitched', data: t }); }), e.bigPlayButton && e.bigPlayButton.hide(), e.posterImage && e.posterImage.hide(), this.currentID = t.id, e.src(this.options.sources[t.id]), e.options_.preload == 'none' && e.one('suspend', () => { e.load(); }); } }, e.prototype.initQualityData = function(t) { const e = []; const n = (t.sources, t.labels); const i = t.showOrder; return i.length > 0 && i.forEach((i, r) => { const o = {}; o.id = i, o.selected = t.defaultRes === i, o.label = n[i] || i, e.push(o); }), { qualityData: { video: e }, callbacks: { video: ce.bind(this, this.switchResolution) } }; }, e.prototype.sortSourceOrder = function(t) { return []; }, e; }(dc)); ce.registerPlugin('MultiResolution', gc); const vc = (ce.getComponent('Flash'), !ce.browser.IS_IPHONE); const mc = ce.registerPlugin || ce.plugin; const _c = { header: '', code: '', message: '', timeout: 45e3, dismiss: vc, progressDisabled: !1, errors: { 1: { type: 'MEDIA_ERR_ABORTED' }, 2: { type: 'MEDIA_ERR_NETWORK' }, 3: { type: 'MEDIA_ERR_DECODE' }, 4: { type: 'MEDIA_ERR_SRC_NOT_SUPPORTED' }, 5: { type: 'MEDIA_ERR_ENCRYPTED' }, unknown: { type: 'MEDIA_ERR_UNKNOWN' }, '-1': { type: 'PLAYER_ERR_NO_SRC', message: 'No video has been loaded.' }, '-2': { type: 'PLAYER_ERR_TIMEOUT', message: 'Could not download the video.' }, 10: { type: 'SERVER_ERR', message: 'Request timed out.' }, 11: { type: 'SERVER_ERR', message: 'Server is not respond.' }, 12: { type: 'DATA_ERR', message: 'Server respond error data.' }, 13: { type: 'DATA_ERR', message: 'No video transcoding information found.' }, 14: { type: 'HLS_NETWORK_ERR', message: 'A network error caused the media download to fail part-way.' }, 15: { type: 'HLS_MEDIA_ERR', message: 'The media playback was aborted due to a corruption problem or because the media used features your browser did not support.' }, 16: { type: 'HLS_MUX_ERR', message: 'The media playback was aborted due to a corruption problem or because the media used features your browser did not support.' }, 17: { type: 'HLS_OTHER_ERR', message: 'Rise an internal exception when playing HLS.' }, 403: { type: 'SERVER_ERR', message: 'Authentication failed.' }, 500: { type: 'SERVER_ERR', message: 'Server failed.' }, 1001: { type: 'SERVER_ERR', message: 'The media file does not exist. Please check if the fileID is correct.' }, 1002: { type: 'SERVER_ERR', message: 'The trial duration is illegal. The trial duration must be within the video duration.' }, 1003: { type: 'SERVER_ERR', message: 'Param pcfg is not unique.' }, 1004: { type: 'SERVER_ERR', message: 'The license has expired. Please check whether the expiration time setting is reasonable.' }, 1005: { type: 'SERVER_ERR', message: 'Did not find an adaptive stream that can be played.' }, 1006: { type: 'SERVER_ERR', message: 'Invalid request format, please check the request format.' }, 1007: { type: 'SERVER_ERR', message: 'AppID is not exist, Please check if the AppID is correct.' }, 1008: { type: 'SERVER_ERR', message: 'Without anti-leech information.' }, 1009: { type: 'SERVER_ERR', message: 'psign check failed.' }, 1010: { type: 'SERVER_ERR', message: 'Other errors.' }, 2001: { type: 'SERVER_ERR', message: 'Internal error.' }, 10008: { type: 'SERVER_ERR', message: 'The media file does not exist. Please check if the fileID is correct.' }, PLAYER_ERR_DOMAIN_RESTRICTED: { message: 'This video is restricted from playing on your current domain.' }, PLAYER_ERR_IP_RESTRICTED: { message: 'This video is restricted at your current IP address.' }, PLAYER_ERR_GEO_RESTRICTED: { message: 'This video is restricted from playing in your current geographic region.' } } }; const bc = function Nh(t, e) { let n = void 0; let i = void 0; let r = void 0; const o = []; ce.getComponent('ErrorDisplay').prototype.options_.fillAlways = !1; const s = function(t) { e.errors = ce.mergeOptions(e.errors, t), Object.keys(e.errors).forEach((t) => { const n = e.errors[t]; n.type || (n.type = t); }); }; s(); const a = function() { t.clearTimeout(i), r && (r = !1, t.removeClass('vjs-waiting')), i = t.setTimeout(() => { t.error() || t.paused() || t.ended() || (r = !0, t.addClass('vjs-waiting')); }, 1e3), t.clearTimeout(n), n = t.setTimeout(() => { t.error() || t.paused() || t.ended() || t.error({ code: -2, type: 'PLAYER_ERR_TIMEOUT' }); }, e.timeout), t.error() && t.error().code === -2 && t.error(null); }; const l = function() { for (let e = void 0; o.length;)e = o.shift(), t.off(e[0], e[1]); t.clearTimeout(n), t.clearTimeout(i); }; const c = function(e, n) { const i = function() { if (!t.error()) { const e = t.$('.vjs-tech'); if (e && e.type === 'application/x-shockwave-flash' && !e.vjs_getProperty) return void t.error({ code: -2, type: 'PLAYER_ERR_TIMEOUT' }); if (t.paused()) return a(); if (t.ended()) return a(); }n.call(this); }; t.on(e, i), o.push([e, i]); }; const u = function() { let n = 0; l(), a(), c(['timeupdate', 'adtimeupdate'], () => { const e = t.currentTime(); e !== n && (n = e, a()); }), e.progressDisabled || c('progress', a); }; const h = function(n) { let i = ''; let r = t.error(); const o = sn.createElement('div'); let s = ''; if (r) { r = ce.mergeOptions(r, e.errors[r.code || 0]), r.message && (i = `<div class="vjs-errors-message">${t.localize(r.message)}</div>`), r.code && (i += `<div class="vjs-errors-code">${this.localize('Error Code')} : ${r.code}</div>`), r.type && (i += `<div class="vjs-errors-type">${this.localize('Error Type')} : ${r.type}</div>`), r.code != '10' && r.code != '11' || (i += '<a href="//ping.huatuo.qq.com/playvideo.qcloud.com" target="_blank" class="vjs-error-check-network">诊断网络</a>'), o.className = 'vjs-errors-dialog', s = `<div class="vjs-errors-content-container">\n        ${i}\n      </div>`; const a = t.getChild('errorDisplay'); a.closeable(!('dismiss' in r) || r.dismiss) ? (o.innerHTML = s, a.fillWith(o), a.contentEl().firstChild.appendChild(a.getChild('closeButton').el())) : (o.innerHTML = s, a.fillWith(o)), a.one('modalclose', () => t.error(null)); } }; const p = function f() { l(), t.removeClass('vjs-errors'), t.off('dispose', f), t.off(['aderror', 'error'], h); }; const d = function(e) { p(), Nh(t, ce.mergeOptions(_c, e)); }; d.extend = function(t) { return s(t); }, d.getAll = function() { return ce.mergeOptions(e.errors); }, d.disableProgress = function(t) { e.progressDisabled = t, u(); }, t.on('dispose', p), t.on(['aderror', 'error'], h), t.ready(() => { t.addClass('vjs-errors'); }), t.errors = d; }; const Tc = function(t) { bc(this, ce.mergeOptions(_c, t)); }; ['extend', 'getAll', 'disableProgress'].forEach((t) => { Tc[t] = function() { ce.log.warn(`The errors.${t}() method is not available until the plugin has been initialized!`); }; }), mc('Errors', Tc); const Cc = ce.getPlugin('plugin'); const Ec = {}; const wc = ce.log; const Sc = (function(t) { function e(n, i) { Zn(this, e), wc('Reporter initilaizing'); const r = ei(this, t.call(this, n)); return r.mtaReportCache = [], ke(Ce('//pingjs.qq.com/h5/stats.js?v2.0.4'), null, { name: 'MTAH5', sid: '500608092', cid: '500608093' }, !0), wc('Reporter initilaized'), r; } return ti(e, t), e.prototype.initPlayCgiCodeReport = function() { const t = this.player; t.on('playcgistart', ce.bind(this, this.onPlayCgiStart)), t.on('playcgiend', ce.bind(this, this.onPlayCgiEnd)); }, e.prototype.onPlayCgiStart = function(t) { Ec[t.data.time] = Ec[t.data.time] || {}, Ec[t.data.time].startTime = t.data.time, Ec[t.data.time].url = t.data.url; }, e.prototype.onPlayCgiEnd = function(t) { if (Ec[t.data.startTime]) { const e = t.data; let n = void 0; let i = void 0; let r = void 0; if (e.error) switch (i = 2, e.error.message) { case 'Timeout': n = 10; break; case 'ServerError': n = 11; } else e.result.code == 0 ? (i = 1, n = 0) : (i = 3, n = e.result.code), r = e.result.requestId; this.reportPlayCgiToISD('', '', i, n, t.data.time - Ec[t.data.startTime].startTime, r, void 0, void 0); } }, e.prototype.reportPlayCgiToISD = function(t, e, n, i, r, o, s, a) { const l = { domain: t || 'playvideo.qcloud.com', cgi: e || '/getplayinfo/v2', type: n, code: i, time: r, appid: 20370, platform: ce.browser.IS_IOS ? 'ios' : ce.browser.IS_ANDROID ? 'android' : 'pc', expansion1: o, expansion2: s, expansion3: a }; this.sender(`${Ce('//report.huatuo.qq.com/code.cgi')}?${Ie(l)}`); }, e.prototype.reportPlayMetrics = function(t) {}, e.prototype.sender = function(t) { let e = new Image(); e.onload = e.onerror = e.onabort = function() { e.onload = e.onerror = e.onabort = null, e = null; }, e.src = t; }, e.prototype.reportMTA = function(t, e) { window.MtaH5 ? (this.mtaReportCache.length > 0 && (this.mtaReportCache.forEach((t) => { t.call(); }), this.mtaReportCache = 0), MtaH5.clickStat(t, e)) : this.mtaReportCache.push(() => { MtaH5.clickStat(t, e); }); }, e; }(Cc)); ce.registerPlugin('Reporter', Sc); const kc = r((t) => { !(function(e, n) { var i = { version: '2.10.0', areas: {}, apis: {}, inherit(t, e) { for (const n in t)e.hasOwnProperty(n) || Object.defineProperty(e, n, Object.getOwnPropertyDescriptor(t, n)); return e; }, stringify(t) { return t === undefined || typeof t === 'function' ? `${t}` : JSON.stringify(t); }, parse(t) { try { return JSON.parse(t); } catch (e) { return t; } }, fn(t, e) { i.storeAPI[t] = e; for (const n in i.apis)i.apis[n][t] = e; }, get(t, e) { return t.getItem(e); }, set(t, e, n) { t.setItem(e, n); }, remove(t, e) { t.removeItem(e); }, key(t, e) { return t.key(e); }, length(t) { return t.length; }, clear(t) { t.clear(); }, Store(t, e, n) { var r = i.inherit(i.storeAPI, function(t, e, n) { return arguments.length === 0 ? r.getAll() : typeof e === 'function' ? r.transact(t, e, n) : e !== undefined ? r.set(t, e, n) : typeof t === 'string' || typeof t === 'number' ? r.get(t) : typeof t === 'function' ? r.each(t) : t ? r.setAll(t, e) : r.clear(); }); r._id = t; try { e.setItem('_-bad-_', 'wolf'), r._area = e, e.removeItem('_-bad-_'); } catch (o) {} return r._area || (r._area = i.storage('fake')), r._ns = n || '', i.areas[t] || (i.areas[t] = r._area), i.apis[r._ns + r._id] || (i.apis[r._ns + r._id] = r), r; }, storeAPI: { area(t, e) { let n = this[t]; return n && n.area || (n = i.Store(t, e, this._ns), this[t] || (this[t] = n)), n; }, namespace(t, e) { if (!t) return this._ns ? this._ns.substring(0, this._ns.length - 1) : ''; const n = t; let r = this[n]; if (!(r && r.namespace || (r = i.Store(this._id, this._area, `${this._ns + n}.`), this[n] || (this[n] = r), e))) for (const o in i.areas)r.area(o, i.areas[o]); return r; }, isFake() { return this._area.name === 'fake'; }, toString() { return `store${this._ns ? `.${this.namespace()}` : ''}[${this._id}]`; }, has(t) { return this._area.has ? this._area.has(this._in(t)) : !!(this._in(t) in this._area); }, size() { return this.keys().length; }, each(t, e) { for (let n = 0, r = i.length(this._area); n < r; n++) { const o = this._out(i.key(this._area, n)); if (o !== undefined && !1 === t.call(this, o, this.get(o), e)) break; r > i.length(this._area) && (r--, n--); } return e || this; }, keys(t) { return this.each((t, e, n) => { n.push(t); }, t || []); }, get(t, e) { const n = i.get(this._area, this._in(t)); return n !== null ? i.parse(n) : e || n; }, getAll(t) { return this.each((t, e, n) => { n[t] = e; }, t || {}); }, transact(t, e, n) { const i = this.get(t, n); const r = e(i); return this.set(t, r === undefined ? i : r), this; }, set(t, e, n) { const r = this.get(t); return r != null && !1 === n ? e : i.set(this._area, this._in(t), i.stringify(e), n) || r; }, setAll(t, e) { let n; let i; for (const r in t)i = t[r], this.set(r, i, e) !== i && (n = !0); return n; }, add(t, e) { const n = this.get(t); if (n instanceof Array)e = n.concat(e); else if (n !== null) { const r = typeof n; if (r === typeof e && r === 'object') { for (const o in e)n[o] = e[o]; e = n; } else e = n + e; } return i.set(this._area, this._in(t), i.stringify(e)), e; }, remove(t, e) { const n = this.get(t, e); return i.remove(this._area, this._in(t)), n; }, clear() { return this._ns ? this.each(function(t) { i.remove(this._area, this._in(t)); }, 1) : i.clear(this._area), this; }, clearAll() { const t = this._area; for (const e in i.areas)i.areas.hasOwnProperty(e) && (this._area = i.areas[e], this.clear()); return this._area = t, this; }, _in(t) { return typeof t !== 'string' && (t = i.stringify(t)), this._ns ? this._ns + t : t; }, _out(t) { return this._ns ? t && t.indexOf(this._ns) === 0 ? t.substring(this._ns.length) : undefined : t; } }, storage(t) { return i.inherit(i.storageAPI, { items: {}, name: t }); }, storageAPI: { length: 0, has(t) { return this.items.hasOwnProperty(t); }, key(t) { let e = 0; for (const n in this.items) if (this.has(n) && t === e++) return n; }, setItem(t, e) { this.has(t) || this.length++, this.items[t] = e; }, removeItem(t) { this.has(t) && (delete this.items[t], this.length--); }, getItem(t) { return this.has(t) ? this.items[t] : null; }, clear() { for (const t in this.items) this.removeItem(t); } } }; const r = i.Store('local', (function() { try { return localStorage; } catch (t) {} }())); r.local = r, r._ = i, r.area('session', (function() { try { return sessionStorage; } catch (t) {} }())), r.area('page', i.storage('page')), typeof n === 'function' && n.amd !== undefined ? n('store2', [], () => r) : t.exports ? t.exports = r : (e.store && (i.conflict = e.store), e.store = r); }(Je, Je && Je.define)); }); const Ic = ce.getPlugin('plugin'); const Pc = ce.log; const xc = (function(t) { function e(n, i) { Zn(this, e); const r = ei(this, t.call(this, n)); return r.options = i, r.init(), r; } return ti(e, t), e.prototype.init = function() { const t = this.player; const e = t.options_; let n = void 0; t.ready(ce.bind(this, function() { (n = e && e.appID && e.fileID ? e.fileID : this.options.playID) && (Pc('ContinuePlay initializing'), this.playID = n, this.lastTime = kc.get(this.getStoreKey()), t.off('timeupdate', ce.bind(this, this.onTimeUpdate)), t.on('timeupdate', ce.bind(this, this.onTimeUpdate)), t.one(this.getTriggerEvent(), ce.bind(this, this.onPlay)), !this.options.auto && t.getChild('ContinuePlayTips') && t.getChild('ContinuePlayTips').close(), Pc('ContinuePlay initialized'), t.trigger({ type: 'feature', data: 'continue' })); })); }, e.prototype.onTimeUpdate = function(t) { kc.set(this.getStoreKey(), this.player.currentTime()); }, e.prototype.onPlay = function(t) { const e = this.player; Math.round(this.lastTime) > 1 && this.player.duration() > 1 && Math.round(this.lastTime) != Math.round(this.player.duration()) ? this.options.auto ? this.start() : e.addChild('ContinuePlayTips', ce.mergeOptions(this.options, { time: this.lastTime, resumeCallback: ce.bind(this, this.start) })) : e.techName_ == 'Flash' && Math.round(this.lastTime) > 1 && Math.round(this.lastTime) != Math.round(this.player.duration()) && !this.player.duration() && e.one('loadedmetadata', ce.bind(this, this.onPlay)); }, e.prototype.start = function() { const t = this.player; t.currentTime(this.lastTime), t.techName_ == 'Flash' && t.tech(!0).trigger('seeked'), t.trigger({ type: 'continueplay', data: { lastTime: this.lastTime } }); }, e.prototype.generatePlayID = function() {}, e.prototype.getStoreKey = function() { return `tcplayer-lpt-${this.playID}`; }, e.prototype.getTriggerEvent = function() { const t = this.player; const e = t.options_; return e.autoplay && t.techName_ == 'Flash' ? 'loadedmetadata' : 'playing'; }, e; }(Ic)); ce.registerPlugin('ContinuePlay', xc); const Dc = { align: 'top-left', className: '', content: '', debug: !1, showBackground: !0, attachToControlBar: !1, overlays: [] }; const Mc = ce.getComponent('Component'); const Rc = ce.dom || ce; const Ac = ce.registerPlugin || ce.plugin; const Oc = function(t) { return typeof t === 'number' && t === t; }; const jc = function(t) { return typeof t === 'string' && /^\S+$/.test(t); }; const Lc = (function(t) {
 function e(n, i) { Zn(this, e); const r = ei(this, t.call(this, n, i)); return ['start', 'end'].forEach((t) => { const e = r.options_[t]; if (Oc(e))r[`${t}Event_`] = 'timeupdate'; else if (jc(e))r[`${t}Event_`] = e; else if (t === 'start') throw new Error('invalid "start" option; expected number or string'); }), ['endListener_', 'rewindListener_', 'startListener_'].forEach((t) => { r[t] = function(n) { return e.prototype[t].call(r, n); }; }), r.startEvent_ === 'timeupdate' && r.on(n, 'timeupdate', r.rewindListener_), r.debug(`created, listening to "${r.startEvent_}" for "start" and "${r.endEvent_ || 'nothing'}" for "end"`), r.hide(), r; } return ti(e, t), e.prototype.createEl = function() { const t = this.options_; const e = t.content; const n = t.showBackground ? 'tcp-overlay-background' : 'tcp-overlay-no-background'; const i = Rc.createEl('div', { className: `\n        tcp-overlay\n        tcp-overlay-${t.align}\n        ${t.className}\n        ${n}\n        vjs-hidden\n      ` }); return typeof e === 'string' ? i.innerHTML = e : ce.browser.IS_IE8 || e instanceof tn.DocumentFragment ? i.appendChild(e) : Rc.appendContent(i, e), i; }, e.prototype.debug = function() { if (this.options_.debug) { for (var t = ce.log, e = t, n = arguments.length, i = Array(n), r = 0; r < n; r++)i[r] = arguments[r]; t.hasOwnProperty(i[0]) && typeof t[i[0]] === 'function' && (e = t[i.shift()]), e.apply(undefined, [`overlay#${this.id()}: `].concat(i)); } }, e.prototype.hide = function() { return t.prototype.hide.call(this), this.debug('hidden'), this.debug(`bound \`startListener_\` to "${this.startEvent_}"`), this.endEvent_ && (this.debug(`unbound \`endListener_\` from "${this.endEvent_}"`), this.off(this.player(), this.endEvent_, this.endListener_)), this.options_.once ? (ce.browser.IS_IOS && ce.browser.IS_WECHAT ? this.player().hasStarted() || this.player().ready(ce.bind(this, function() { this.startListener_({ type: this.startEvent_ }); })) : this.player().hasStarted() || this.on(this.player(), this.startEvent_, this.startListener_), this) : (this.startEvent_ === 'pause' ? this.on(this.player(), this.startEvent_, this.startOnPause_) : this.on(this.player(), this.startEvent_, this.startListener_), this); }, e.prototype.startOnPause_ = function(t) { const e = this.player(); t.type === 'pause' ? e.seeking() || e.ended() || this.startListener_({ type: 'pause' }) : e.paused() && this.startListener_({ type: 'pause' }); }, e.prototype.shouldHide_ = function(t, e) { const n = this.options_.end; return Oc(n) ? t >= n : n === e; }, e.prototype.show = function() { return t.prototype.show.call(this), this.startEvent_ === 'pause' && this.off(this.player(), this.startEvent_, this.startOnPause_), this.off(this.player(), this.startEvent_, this.startListener_), this.debug('shown'), this.debug(`unbound \`startListener_\` from "${this.startEvent_}"`), this.endEvent_ && (this.debug(`bound \`endListener_\` to "${this.endEvent_}"`), this.on(this.player(), this.endEvent_, this.endListener_)), this; }, e.prototype.shouldShow_ = function(t, e) { const n = this.options_.start; const i = this.options_.end; return Oc(n) ? Oc(i) ? t >= n && t < i : this.hasShownSinceSeek_ ? Math.floor(t) === n : (this.hasShownSinceSeek_ = !0, t >= n) : n === e; }, e.prototype.startListener_ = function(t) { const e = this.player().currentTime(); this.shouldShow_(e, t.type) && this.show(); }, e.prototype.endListener_ = function(t) { const e = this.player().currentTime(); this.shouldHide_(e, t.type) && this.hide(); },
e.prototype.rewindListener_ = function(t) { const e = this.player().currentTime(); const n = this.previousTime_; const i = this.options_.start; const r = this.options_.end; e < n && (this.debug('rewind detected'), Oc(r) && !this.shouldShow_(e) ? (this.debug(`hiding; ${r} is an integer and overlay should not show at this time`), this.hasShownSinceSeek_ = !1, this.hide()) : jc(r) && e < i && (this.debug(`hiding; show point (${i}) is before now (${e}) and end point (${r}) is an event`), this.hasShownSinceSeek_ = !1, this.hide())), this.previousTime_ = e; }, e;
}(Mc)); ce.registerComponent('Overlay', Lc), Ac('Patch', function(t) { const e = this; const n = ce.mergeOptions(Dc, t); Array.isArray(this.overlays_) && this.overlays_.forEach((t) => { e.removeChild(t), e.controlBar && e.controlBar.removeChild(t), t.dispose(); }); const i = n.overlays; delete n.overlays, this.overlays_ = i.map((t) => { const i = ce.mergeOptions(n, t); return i.attachToControlBar && e.controlBar && i.align.indexOf('bottom') !== -1 ? e.controlBar.addChild('overlay', i) : e.addChild('overlay', i); }); }); const Nc = ce.getPlugin('plugin'); const Bc = ce.log; const Fc = ['start', 'pause', 'ended']; const Vc = ['loadstart', 'pause', 'ended']; const Hc = ['play', 'play', 'play']; const Uc = (function(t) { function e(n, i) { Zn(this, e); const r = ei(this, t.call(this, n, i)); return r.hasInit = !1, r.init(i), r; } return ti(e, t), e.prototype.init = function(t) { const e = this; const n = this.player; const i = { showBackground: !1, overlays: [] }; Array.isArray(t) && t.length > 0 && (Bc('ImagePatch initializing'), t.forEach((t) => { let n = void 0; let r = void 0; let o = void 0; let s = void 0; const a = document.createDocumentFragment(); o = document.createElement('a'), o.className = 'tcp-overlay-link', o.target = '_blank', t.link && (o.href = t.link), t.url && (s = e.loadImg(Ce(t.url), ce.bind(e, e.onImgLoaded)), s.className = 'tcp-overlay-img', o.appendChild(s), ce.browser.IS_IE8 ? (n = document.createElement('div'), n.className = 'tcp-overlay-table', r = document.createElement('div'), r.className = 'tcp-overlay-cell', r.appendChild(o), n.appendChild(r), a.appendChild(n)) : a.appendChild(o), i.overlays.push({ content: a, className: `tcp-image-patch tcp-image-patch-${Fc[t.location]}`, start: Vc[t.location], end: Hc[t.location], once: t.location == 0, align: 'center' })); }), i.overlays.length > 0 ? (n.Patch(i), n.trigger({ type: 'feature', data: 'patch' }), this.hasInit = !0) : this.reset(), Bc('ImagePatch initialized')); }, e.prototype.loadImg = function(t, e) { let n; let i; let r; let o; let s; let a = new Image(); return a.src = t, a.complete ? (e && e.call(e, a), a) : (i = a.width, r = a.height, a.onerror = function() { n.end = !0, a = a.onload = a.onerror = null; }, n = function() { o = a.width, s = a.height, (o !== i || s !== r || o * s > 1024) && (e && e.call(e, a), n.end = !0); }, n(), a.onload = function() { !n.end && n(), a = a.onload = a.onerror = null; }, a); }, e.prototype.onImgLoaded = function(t) { if (ce.browser.IE_VERSION) { const e = parseInt(this.player.el().currentStyle.width); const n = parseInt(this.player.el().currentStyle.height); if (t.width > e || t.height > n) { const i = e / (t.width / t.height); t.width / t.height > e / n || (t.style.marginTop = `${(n - i) / 2}px`), t.style.width = '100%', t.style.height = 'auto'; } } }, e.prototype.reset = function() { this.hasInit && (Bc('ImagePatch reset'), this.player.Patch(), this.hasInit = !1); }, e; }(Nc)); ce.registerPlugin('ImagePatch', Uc); const qc = ce.getPlugin('plugin'); const zc = ce.log; const Wc = (function(t) { function e(n, i) { Zn(this, e); const r = ei(this, t.call(this, n)); return r.options = i, zc('ContextMenu initializing'), r.init(), zc('ContextMenu initialized'), r; } return ti(e, t), e.prototype.init = function() { this.player.addChild('RightClickPopupMenu', this.options); }, e; }(qc)); ce.registerPlugin('ContextMenu', Wc); const Kc = ce.getPlugin('plugin'); const Qc = (function(t) { function e(n, i) { Zn(this, e); const r = ei(this, t.call(this, n)); return r.options = i, r.init(), r; } return ti(e, t), e.prototype.init = function() { const t = this.player; const e = t.options_.plugins.ContextMenu; e && e.levelSwitch && e.levelSwitch.open && t.addChild('LevelSwitchTips', this.options); }, e; }(Kc)); ce.registerPlugin('LevelSwitch', Qc); const Xc = ce.getPlugin('plugin'); const $c = ce.log; const Gc = { width: 0, height: 0, basePath: '' }; const Yc = (function(t) { function e(n, i) { Zn(this, e); const r = ei(this, t.call(this, n)); return r.hasInit = !1, i.vttUrl && n.ready(ce.bind(r, function() { this.init(i); })), r; } return ti(e, t), e.prototype.loadTrackFile = function(t) { const e = this; const n = this.player; const i = n.addRemoteTextTrack({ src: t.vttUrl, kind: 'metadata' }, !0); i && i.addEventListener('load', () => { e.trackInfo = i; }); }, e.prototype.init = function(t) { if (!ce.browser.IS_IOS && !ce.browser.IS_ANDROID && this.player.controlBar && this.player.controlBar.progressControl) { if ($c('VttThumbnail initializing', t), !this.player.controlBar) return void $c('VttThumbnail can not initialize without control bar'); this.options = t; const e = this.player; const n = e.controlBar.progressControl; this.loadTrackFile(t), Gc.basePath = eu(t.vttUrl), this.initUI(), n.on('mouseenter', ce.bind(this, this.onMouseEnter)), n.on('mousemove', ce.bind(this, this.onMouseMove)), n.on('mouseleave', ce.bind(this, this.onMouseOut)), this.hasInit = !0, $c('VttThumbnail initialized'), e.trigger({ type: 'feature', data: 'thumbnail' }); } }, e.prototype.initTrackFile = function(t) { t.track; this.trackInfo = t; }, e.prototype.initUI = function() { const t = ce.dom.createEl('div', { className: 'tcp-vtt-thumbnail-container' }); const e = ce.dom.createEl('img', { className: 'tcp-vtt-thumbnail-img' }); t.appendChild(e), this.containerEl = t, this.imgEl = e, this.player.controlBar.progressControl.el().appendChild(t); }, e.prototype.onMouseEnter = function() { this.containerEl.style.display = 'block'; }, e.prototype.onMouseMove = function(t) { if (!this.trackInfo) return !1; let e = void 0; let n = void 0; let i = void 0; let r = void 0; let o = void 0; let s = void 0; let a = void 0; let l = void 0; let c = 0; let u = void 0; let h = void 0; let p = void 0; let d = void 0; for (i = this.player.controlBar.progressControl, r = this.player.controlBar.progressControl.seekBar, o = Zc(i.el()).getBoundingClientRect(), s = Zc(r.el()).getBoundingClientRect(), e = t.clientX, l = this.player.duration(), a = ((e - s.left) / r.width() * l).toFixed(3), u = this.trackInfo.track || this.trackInfo; c < u.cues.length;) { if (h = u.cues[c], h.startTime <= a && h.endTime >= a) { p = tu(h.text); break; }c++; } if (!p) return this.onMouseOut(), !1; d = e - s.left + p.w / 2 - r.width(), d = Math.max(0, d), n = e - o.left - p.w / 2 - d, n = Math.max(r.el().offsetLeft, n), p.left = n, this.setView(p); }, e.prototype.onMouseOut = function() { this.containerEl.style.display = 'none'; }, e.prototype.setView = function(t) { const e = this.containerEl; const n = this.imgEl; const i = this.options; e.style.width == t.w && e.style.height == t.h || (e.style.width = `${t.w}px`, e.style.height = `${t.h}px`), e.style.left = `${t.left}px`, i.imgUrl && n.src != i.imgUrl ? n.src = i.imgUrl : n.src = t.src, n.style.left = `${-t.x}px`, n.style.top = `${-t.y}px`, n.style.clip = `rect(${t.y}px,${t.w + t.x}px,${t.y + t.h}px,${t.x}px)`; }, e.prototype.reset = function() { if (this.hasInit) { $c('VttThumbnail reset'); const t = this.player; const e = t.controlBar.progressControl; e.off('mousemove', ce.bind(this, this.onMouseMove)), e.off('mouseleave', ce.bind(this, this.onMouseOut)), this.hasInit = !1; } }, e; }(Xc)); const Jc = function(t, e) { return function(n) { return window.getComputedStyle ? window.getComputedStyle(t, e)[n] : t.currentStyle[n]; }; }; var Zc = function Bh(t) { return t.nodeName !== 'HTML' && Jc(t)('position') === 'static' ? Bh(t.offsetParent) : t; }; var tu = function(t) { let e = void 0; let n = void 0; let i = void 0; if ((n = t.indexOf('#')) === -1) return { src: t, w: 0, h: 0, x: 0, y: 0 }; if (e = t.substring(0, n), /^(http:|https:|\/\/)/.test(e) || (e = Gc.basePath + e), i = t.substring(n + 1), i.substring(0, 5) !== 'xywh=') return { src: e, w: 0, h: 0, x: 0, y: 0 }; const r = i.substring(5).split(','); return { src: e, w: parseInt(r[2]), h: parseInt(r[3]), x: parseInt(r[0]), y: parseInt(r[1]) }; }; var eu = function(t) { /^(\/\/)/.test(t) && (t = `https:${t}`); const e = /(\w+):\/\/([^\:|\/]+)(\:\d*)?(.*\/)([^#|\?|\n]+)?(#.*)?(\?.*)?/i; const n = t.match(e); if (n && n[2] && n[4]) return `//${n[2]}${n[4]}`; }; ce.registerPlugin('VttThumbnail', Yc); const nu = ce.getPlugin('plugin'); const iu = ce.log; const ru = (function(t) { function e(n, i) { Zn(this, e), iu('PlayerMetrics initializing'); const r = ei(this, t.call(this, n)); return r.hasInit = !1, r.features = [], r.timing = {}, r.playStatus = { isFirstPlay: !1 }, r.lagStatus = { lagCount: 0, lagging: !1, lagStart: 0, lagEnd: 0, lagInterval: 1e3, lagDuration: 0, isFirstLag: !1, skip: !1 }, r.registerListener(), n.ready(ce.bind(r, r.init)), iu('PlayerMetrics initialized'), r.getSystemVer(), r; } return ti(e, t), e.prototype.init = function() { this.player; this.hasInit = !0, this.setTimingData({ initEnd: Se() }), this.report({ InitTiming: this.timing.initEnd - this.timing.initStart }); }, e.prototype.registerListener = function() { const t = this; const e = this.player; const n = this.lagStatus; e.one('play', () => { t.setTimingData({ firstPlay: Se() }), t.report({ PlayCount: 1 }), e.techName_ == 'Flash' && (iu('use flash'), t.reportMTA('flash', { appid: e.options_.appID, fileid: e.options_.fileID, browser: t.getBrowser() })); }), e.on('playing', () => { if (!t.playStatus.isFirstPlay) { t.playStatus.isFirstPlay = !0, t.setTimingData({ firstPlaying: Se() }); e.tech(!0); if (t.report({ featureList: t.features.join(','), firstPlayTiming: t.timing.firstPlaying - t.timing.firstPlay, playPercent: 1 }), e.on('waiting', () => { n.lagging || e.seeking() || n.skip || (n.lagging = !0, n.lagStart = Se()); }), e.currentSource().keySystems) { const i = e.currentSource().keySystems; i['com.widevine.alpha'] && (t.reportMTA('drm', { success: 'Widevine' }), iu('DRM success Widevine')), i['com.apple.fps.1_0'] && (t.reportMTA('drm', { success: 'FairPlay' }), iu('DRM success FairPlay')); } else e.options_.plugins.DRM && e.options_.plugins.DRM.token && (t.reportMTA('drm', { success: 'simpleAES' }), iu('DRM success simpleAES')); }n.lagging && (n.lagEnd = Se()) - n.lagStart > n.lagInterval && (n.lagging = !1, n.lagCount++, n.lagDuration += n.lagEnd - n.lagStart, n.lagEnd = n.lagStart = 0, t.lagStatus.isFirstLag || (t.lagStatus.isFirstLag = !0, t.setTimingData({ firstLag: Se() }), t.report({ firstStuckTime: t.lagStatus.lagDuration, stuckCount: 1 }))), n.skip = !1; }), e.on('error', ce.bind(this, this.onError)), e.on('resolutionswitching', (t) => { n.skip = !0; }), e.on('resolutionswitched', (t) => {}), e.on('pause', () => { n.lagging && (n.skip = !0); }), e.on('playcgiend', (n) => { const i = n.data; i.result && i.result.code == 0 && (t.playStatus.requestID = i.result.requestId, setTimeout(() => { if (e.currentSources().length > 0 && e.currentSources()[0].keySystems) { const n = e.currentSources()[0].keySystems; n['com.widevine.alpha'] && t.reportMTA('drm', { initialized: 'Widevine' }), n['com.apple.fps.1_0'] && t.reportMTA('drm', { initialized: 'FairPlay' }); } else e.options_.plugins.DRM && e.options_.plugins.DRM.token && t.reportMTA('drm', { initialized: 'SimpleAES' }); }, 0)), t.setTimingData({ cgiStart: n.data.startTime, cgiEnd: n.data.time }); }), e.one('ended', () => { const e = { PlayTiming: Se() - t.timing.firstPlaying }; t.lagStatus.lagCount > 1 && (e.stuckTime = t.lagStatus.lagDuration), t.report(e); }), e.on('feature', (e) => { t.features.indexOf(e.data) == -1 && t.features.push(e.data); }); }, e.prototype.setTimingData = function(t) { this.timing = ce.mergeOptions(this.timing, t); }, e.prototype.reset = function() { this.playStatus = { isFirstPlay: !1 }; }, e.prototype.onError = function(t, e) { t && t.data && t.data.code && this.report({ errorCode: t.data.code }); const n = gr(this.player.src()); vn && n ? this.reportMTA('x5_err', { format: n }) : n && this.reportMTA('error', { format: n }), this.reportMTA('error', { code: t.data.code, browser: this.getBrowser() }), iu('error', t.data); }, e.prototype.reportMTA = function(t, e) { this.player.Reporter().reportMTA(t, e); }, e.prototype.report = function(t) { const e = this; setTimeout(() => { const n = e.player; n.options_ && (t = ce.mergeOptions(t, { appId: n.options_.appID, fileid: n.options_.fileID, playerModel: 'tcplayer-vod', system: e.getSystem(), systemVer: e.getSystemVer(), browser: e.getBrowser(), browserVer: e.getBrowserVer(), getDevice: e.getDevice(), mediaType: e.getMediaType() }), e.playStatus.requestID && (t.serialID = e.playStatus.requestID), n.Reporter().reportPlayMetrics(t)); }, 1); }, e.prototype.getSystem = function() { return dn ? 'ios' : yn ? 'android' : jn ? 'win' : Ln ? 'mac' : 'other'; }, e.prototype.getSystemVer = function() { const t = this.getSystem(); return t == 'ios' ? fn : t == 'android' ? gn : t == 'win' ? Nn : t == 'mac' ? Bn : void 0; }, e.prototype.getBrowser = function() { return Sn ? 'firefox' : kn ? 'edge' : _n ? 'mqq' : bn ? 'qq' : vn ? 'tbs' : In ? 'chrome' : Dn ? 'ie' : Mn ? 'safari' : 'other'; }, e.prototype.getBrowserVer = function() { const t = this.getBrowser(); return t == 'firefox' ? Un : t == 'edge' ? Vn : t == 'chrome' ? `chrome${Pn}` : t == 'ie' ? `ie${Dn}` : t == 'safari' ? Hn : t == 'qq' || t == 'mqq' ? Fn : t == 'tbs' ? mn : 'other'; }, e.prototype.getDevice = function() { return dn ? `ios${fn}` : qn ? '华为' : zn ? '小米' : Wn ? 'oppo' : Kn ? 'vivo' : Qn ? '三星' : $n ? '酷派' : Xn ? '一加' : Gn ? '中兴' : '其他'; }, e.prototype.getMediaType = function() { return this.player.src() && /\/(.+)\.(.+)\?|\/(.+)\.(.+)/.test(this.player.src()), RegExp.$2 || RegExp.$4; }, e.prototype.getWebkitMetrics = function() {}, e.prototype.getMozMetrics = function() {}, e.prototype.getFlashMetrics = function() {}, e; }(nu)); ce.registerPlugin('PlayerMetrics', ru); const ou = ce.getPlugin('plugin'); const su = ce.log; const au = (function(t) { function e(n, i) { Zn(this, e); const r = ei(this, t.call(this, n)); return dn || yn || n.ready(ce.bind(r, r.init)), r; } return ti(e, t), e.prototype.init = function() { const t = this.player; if (!t.controlBar || !this.player.controlBar.progressControl) return void su('ProgressMarker can not initialize without control bar or progress control'); su('ProgressMarker initializing'); const e = t.controlBar.getChild('ProgressControl').getChild('SeekBar'); e.getChild('ProgressMarkerGenerator') && e.removeChild('ProgressMarkerGenerator'), t.options_.dots && t.options_.plugins.ProgressMarker && (e.addChild('ProgressMarkerGenerator'), su('ProgressMarker initialized'), t.trigger({ type: 'feature', data: 'marker' })); }, e; }(ou)); ce.registerPlugin('ProgressMarker', au); const lu = ce.getComponent('Component'); const cu = (function(t) { function e(n, i) { return Zn(this, e), ei(this, t.call(this, n, i)); } return ti(e, t), e.prototype.createEl = function() { const t = this.options_; const e = ce.dom.createEl('div', { className: 'tcp-playlist-item' }); const n = ce.dom.createEl('div', { className: 'tcp-playlist-item-video', innerHTML: `<img src="${t.img}" class="tcp-playlist-item-img">` }); const i = ce.dom.createEl('div', { className: 'tcp-playlist-item-duration', textContent: this.timeFormat(t.duration) }); n.appendChild(i); const r = ce.dom.createEl('div', { className: 'tcp-playlist-item-desc', textContent: t.text }); return e.appendChild(n), e.appendChild(r), this.bindEvent(e), e; }, e.prototype.bindEvent = function(t) { const e = this; ce.on(t, ['click'], () => { e.player_.trigger({ type: 'playItem', data: e.options_ }); }); }, e.prototype.timeFormat = function(t) { let e = ''; let n = Math.floor(t / 3600); n != 0 && (t -= 3600 * n, n < 10 && (n = `0${n}`), e += `${n}:`); let i = Math.floor(t / 60); return i < 10 && (i = `0${i}`), t -= 60 * i, t < 10 && (t = `0${t}`), e += `${i}:${t}`; }, e; }(lu)); ce.registerComponent('PlayListItem', cu); const uu = ce.getComponent('Component'); const hu = (function(t) { function e(n, i) { return Zn(this, e), ei(this, t.call(this, n, i)); } return ti(e, t), e.prototype.createEl = function() { const t = this.options_; return ce.dom.createEl('div', { className: 'tcp-playlist-title', textContent: t.title }); }, e; }(uu)); ce.registerComponent('PlayListTitle', hu); const pu = ce.getComponent('Component'); const du = (function(t) { function e(n, i) { Zn(this, e); const r = ei(this, t.call(this, n, i)); return r.init(), r.activeIndex = -1, r; } return ti(e, t), e.prototype.createEl = function() { return ce.dom.createEl('div', { className: 'tcp-playlist-box' }); }, e.prototype.init = function() { const t = this; const e = this.options_.data; this.addChild('PlayListTitle', { title: this.options_.title }), e.forEach((e, n) => { e.index = n, t.addChild('PlayListItem', e); }), this.player_.on('playItem', (n) => { const i = n.data; let r = void 0; t.activeIndex = i ? i.index : (t.activeIndex + 1) % e.length, r = e[t.activeIndex], t.player_.loadVideoByID({ fileID: r.fileID, appID: r.appID }), t.player_.one('loadedmetadata', ce.bind(t, () => { t.player_.play(); })), document.querySelectorAll('.tcp-playlist-item').forEach((t) => { ce.dom.removeClass(t, 'tcp-playlist-item-active'); }); const o = document.querySelectorAll('.tcp-playlist-item')[t.activeIndex]; ce.dom.addClass(o, 'tcp-playlist-item-active'); }); }, e; }(pu)); ce.registerComponent('PlayListBox', du); const fu = ce.getComponent('Component'); const yu = (function(t) { function e(n, i) { Zn(this, e); const r = ei(this, t.call(this, n, i)); return r.status = 0, r; } return ti(e, t), e.prototype.createEl = function() { const t = ce.dom.createEl('div', { className: 'tcp-playlist-toggle', textContent: '<' }); return this.bindEvent(t), t; }, e.prototype.bindEvent = function(t) { const e = this; ce.on(t, ['click'], (n) => { e.status = !e.status; const i = document.querySelector('.tcp-playlist'); e.status ? (t.textContent = '>', ce.dom.addClass(i, 'tcp-playlist-open'), ce.dom.removeClass(i, 'tcp-playlist-close')) : (ce.dom.addClass(i, 'tcp-playlist-close'), ce.dom.removeClass(i, 'tcp-playlist-open'), t.textContent = '<'); }); }, e; }(fu)); ce.registerComponent('PlayListToggle', yu); const gu = ce.getComponent('Component'); const vu = (function(t) { function e(n, i) { Zn(this, e); const r = ei(this, t.call(this, n, i)); return r.init(), r; } return ti(e, t), e.prototype.createEl = function() { return ce.dom.createEl('div', { className: 'tcp-playlist tcp-playlist-close' }); }, e.prototype.init = function() { this.addChild('PlayListToggle'), this.addChild('PlayListBox', this.options_); }, e; }(gu)); ce.registerComponent('PlayList', vu); const mu = ce.getComponent('Button'); const _u = (function(t) { function e(n, i) { Zn(this, e); const r = ei(this, t.call(this, n, i)); return r.addClass(), r; } return ti(e, t), e.prototype.addClass = function() { ce.dom.addClass(this.el_, 'vjs-play-next'); }, e.prototype.update = function() {}, e.prototype.handleClick = function(t) { this.player_.trigger({ type: 'playItem' }); }, e; }(mu)); _u.prototype.controlText_ = 'Play Next', ce.registerComponent('PlayNextButton', _u); const bu = ce.getPlugin('plugin'); const Tu = ce.log; const Cu = (function(t) { function e(n, i) { Zn(this, e); const r = ei(this, t.call(this, n)); return dn || yn ? ei(r) : (r.options = i, i && i.data instanceof Array && i.data.length > 0 && n.ready(ce.bind(r, r.init)), r); } return ti(e, t), e.prototype.init = function() { Tu('PlayList initializing'), this.player.addChild('PlayList', this.options), this.player.controlBar.addChild('PlayNextButton', {}, 1), Tu('PlayList initialized'), this.player.trigger({ type: 'feature', data: 'playlist' }); }, e; }(bu)); ce.registerPlugin('PlayList', Cu); const Eu = ce.getPlugin('plugin'); const wu = ce.log; const Su = (function(t) { function e(n, i) { Zn(this, e); const r = ei(this, t.call(this, n)); return wu('HLSToken', n, i), r.init(i), r; } return ti(e, t), e.prototype.init = function(t) { wu('HLSToken init', t, this.player); const e = this.player; t.token && (this.options = t, e.on('playcgiend', ce.bind(this, function(t) { this.modifyData(t.data); }))); }, e.prototype.modifyData = function(t) { const e = this; if (wu('HLSToken modifyData', t), t.result.code === 0) { const n = t.result.videoInfo; if (n.masterPlayList) { const i = n.masterPlayList.url.split('/'); i[i.length - 1] = `voddrm.token.${this.options.token}.${i[i.length - 1]}`, n.masterPlayList.url = i.join('/'); }n.transcodeList && n.transcodeList.length > 0 && (n.transcodeList = n.transcodeList.map((t) => { const n = t.url.split('/'); return n[n.length - 1] = `voddrm.token.${e.options.token}.${n[n.length - 1]}`, t.url = n.join('/'), t; })); } }, e; }(Eu)); ce.registerPlugin('HLSToken', Su); const ku = function(t) { const e = (new tn.DOMParser()).parseFromString(String.fromCharCode.apply(null, new Uint16Array(t)), 'application/xml'); const n = e.getElementsByTagName('HttpHeaders')[0]; const i = {}; if (n) for (let r = n.getElementsByTagName('name'), o = n.getElementsByTagName('value'), s = 0; s < r.length; s++)i[r[s].childNodes[0].nodeValue] = o[s].childNodes[0].nodeValue; const a = e.getElementsByTagName('Challenge')[0]; let l = void 0; return a && (l = tn.atob(a.childNodes[0].nodeValue)), { headers: i, message: l }; }; const Iu = function(t, e, n) { const i = ku(e); const r = i.headers; const o = i.message; ce.xhr({ uri: t, method: 'post', headers: r, body: o, responseType: 'arraybuffer' }, n); }; const Pu = function(t) { let e = void 0; return Object.keys(t).forEach((n) => { const i = {}; const r = t[n].audioContentType; const o = t[n].videoContentType; r && (i.audioCapabilities = [{ contentType: r }]), o && (i.videoCapabilities = [{ contentType: o }]), e = e ? e.catch((t) => tn.navigator.requestMediaKeySystemAccess(n, [i])) : tn.navigator.requestMediaKeySystemAccess(n, [i]); }), e; }; const xu = function(t) { const e = t.mediaKeys; const n = t.initDataType; const i = t.initData; const r = t.options; const o = t.getLicense; const s = t.removeSession; const a = t.eventBus; const l = e.createSession(); l.addEventListener('message', (t) => { o(r, t.message).then((t) => l.update(t)).catch(ce.log.error.bind(ce.log.error, 'failed to get and set license')); }, !1), l.addEventListener('keystatuseschange', (t) => { let e = !1; l.keyStatuses.forEach((n, i) => { switch (a.trigger({ keyId: i, status: n, target: l, type: 'keystatuschange' }), n) { case 'expired': e = !0; break; case 'internal-error': ce.log.warn('Key status reported as "internal-error." Leaving the session open since we don\'t have enough details to know if this error is fatal.', t); } }), e && l.close().then(() => { s(i); }); }, !1), l.generateRequest(n, i).catch(ce.log.error.bind(ce.log.error, 'Unable to create or initialize key session')); }; const Du = function(t) { const e = t.video; const n = t.initDataType; const i = t.initData; const r = t.options; const o = t.getLicense; const s = t.removeSession; const a = t.eventBus; e.mediaKeysObject ? xu({ mediaKeys: e.mediaKeysObject, initDataType: n, initData: i, options: r, getLicense: o, removeSession: s, eventBus: a }) : e.pendingSessionData.push({ initDataType: n, initData: i }); }; const Mu = function(t) { const e = t.video; const n = t.certificate; const i = t.createdMediaKeys; const r = t.options; const o = t.getLicense; const s = t.removeSession; const a = t.eventBus; e.mediaKeysObject = i, n && i.setServerCertificate(n); for (let l = 0; l < e.pendingSessionData.length; l++) { const c = e.pendingSessionData[l]; xu({ mediaKeys: e.mediaKeysObject, initDataType: c.initDataType, initData: c.initData, options: r, getLicense: o, removeSession: s, eventBus: a }); } return e.pendingSessionData = [], e.setMediaKeys(i); }; const Ru = function(t) { return function(e, n, i) { Iu(t, n, (t, e, n) => { if (t) return void i(t); i(null, n); }); }; }; const Au = function(t) { return function(e, n, i) { ce.xhr({ uri: t, method: 'POST', responseType: 'arraybuffer', body: n, headers: { 'Content-type': 'application/octet-stream' } }, (t, e, n) => { if (t) return void i(t); i(null, n); }); }; }; const Ou = function(t, e) { return function(n, i) { return new Promise(((r, o) => { t(n, i, (t, n) => { e && e.trigger('licenserequestattempted'), t && o(t), r(n); }); })); }; }; const ju = function(t, e) { if (typeof e === 'string' && (e = { url: e }), !e.url && !e.getLicense) throw new Error('Neither URL nor getLicense function provided to get license'); return e.url && !e.getLicense && (e.getLicense = t === 'com.microsoft.playready' ? Ru(e.url) : Au(e.url)), e; }; const Lu = function(t) { const e = t.video; const n = t.initDataType; const i = t.initData; const r = t.options; const o = t.removeSession; const s = t.eventBus; let a = Promise.resolve(); if (typeof e.mediaKeysObject === 'undefined') { e.mediaKeysObject = null, e.pendingSessionData = []; let l = void 0; let c = void 0; if (!(a = Pu(r.keySystems))) return ce.log.error('No supported key system found'), Promise.resolve(); a = a.then((t) => new Promise(((n, i) => { if (e.keySystem = t.keySystem, c = ju(t.keySystem, r.keySystems[t.keySystem]), !c.getCertificate) return void n(t); c.getCertificate(r, (e, r) => { if (e) return void i(e); l = r, n(t); }); }))).then((t) => t.createMediaKeys()).then((t) => Mu({ video: e, certificate: l, createdMediaKeys: t, options: r, getLicense: Ou(c.getLicense, s), removeSession: o, eventBus: s })).catch(ce.log.error.bind(ce.log.error, 'Failed to create and initialize a MediaKeys object')); } return a.then(() => { Du({ video: e, initDataType: n, initData: i, options: r, getLicense: e.keySystem ? Ou(ju(e.keySystem, r.keySystems[e.keySystem]).getLicense, s) : null, removeSession: o, eventBus: s }); }); }; const Nu = function(t) { for (var e = new ArrayBuffer(2 * t.length), n = new Uint16Array(e), i = 0; i < t.length; i++)n[i] = t.charCodeAt(i); return n; }; const Bu = function(t) { return String.fromCharCode.apply(null, new Uint16Array(t.buffer)); }; const Fu = function(t) { const e = sn.createElement('a'); return t = t.match(/.*(skd\:\/\/.+)/i)[1], e.href = t, e.hostname; }; const Vu = function(t, e) { if (t === e) return !0; if (t.byteLength !== e.byteLength) return !1; for (let n = new DataView(t), i = new DataView(e), r = 0; r < n.byteLength; r++) if (n.getUint8(r) !== i.getUint8(r)) return !1; return !0; }; const Hu = function(t) { return t instanceof Uint8Array || t instanceof Uint16Array ? t.buffer : t; }; const Uu = function(t) { const e = t.initData; let n = t.id; const i = t.cert; typeof n === 'string' && (n = Nu(n)); let r = 0; const o = new ArrayBuffer(e.byteLength + 4 + n.byteLength + 4 + i.byteLength); const s = new DataView(o); new Uint8Array(o, r, e.byteLength).set(e), r += e.byteLength, s.setUint32(r, n.byteLength, !0), r += 4; const a = new Uint16Array(o, r, n.length); return a.set(n), r += a.byteLength, s.setUint32(r, i.byteLength, !0), r += 4, new Uint8Array(o, r, i.byteLength).set(i), new Uint8Array(o, 0, o.byteLength); }; const qu = function(t) { const e = t.video; const n = t.contentId; const i = t.initData; const r = t.cert; const o = t.options; const s = t.getLicense; const a = t.eventBus; return new Promise(((t, l) => { if (e.webkitKeys || e.webkitSetMediaKeys(new tn.WebKitMediaKeys('com.apple.fps.1_0')), !e.webkitKeys) return void l('Could not create MediaKeys'); const c = e.webkitKeys.createSession('video/mp4', Uu({ id: n, initData: i, cert: r })); if (!c) return void l('Could not create key session'); c.contentId = n, c.addEventListener('webkitkeymessage', (t) => { s(o, n, t, (t, e) => { if (a && a.trigger('licenserequestattempted'), t) return void l(t); c.update(new Uint8Array(e)); }); }), c.addEventListener('webkitkeyadded', (e) => { t(e); }), c.addEventListener('webkitkeyerror', (t) => { l(t); }); })); }; const zu = function(t) { return function(e, n) { ce.xhr({ uri: t, responseType: 'arraybuffer' }, (t, e, i) => { if (t) return void n(t); n(null, new Uint8Array(i)); }); }; }; const Wu = function(t, e) { return Fu(Bu(e)); }; const Ku = function(t) { return function(e, n, i, r) { ce.xhr({ uri: t, method: 'POST', responseType: 'arraybuffer', body: i.message, headers: { 'Content-type': 'application/x-www-form-urlencoded' } }, (t, e, n) => { if (t) return void r(t); r(null, n); }); }; }; const Qu = function(t) { const e = t.video; const n = t.initData; const i = t.options; const r = t.eventBus; const o = i.keySystems['com.apple.fps.1_0']; const s = o.getCertificate || zu(o.certificateUri); const a = o.getContentId || Wu; const l = o.getLicense || Ku(o.licenseUri); return new Promise(((t, e) => { s(i, (n, i) => { if (n) return void e(n); t(i); }); })).then((t) => qu({ video: e, cert: t, initData: n, getLicense: l, options: i, contentId: a(i, n), eventBus: r })).catch((t) => { r.player_.error({ code: 3, message: t }); }); }; const Xu = function(t, e, n, i) { let r = t.keySystems['com.microsoft.playready']; if (typeof r.getKey === 'function') return void r.getKey(t, n.destinationURL, n.message.buffer, (t, n) => { if (t) return void ce.log.error(`Unable to get key: ${t}`); e.update(n); }); typeof r === 'string' && (r = { url: r }); const o = r.url || n.destinationURL; Iu(o, n.message.buffer, (t, n) => { if (i && i.trigger('licenserequestattempted'), t) return void ce.log.error(`Unable to request key from url: ${o}`); e.update(new Uint8Array(n.body)); }); }; const $u = function(t, e, n, i) { const r = t.msKeys.createSession('video/mp4', e); if (!r) return void ce.log.error('Could not create key session.'); r.addEventListener('mskeymessage', (t) => { Xu(n, r, t, i); }), r.addEventListener('mskeyerror', (t) => { ce.log.error(`Unexpected key error from key session with code: ${r.error.code} and systemCode: ${r.error.systemCode}`); }); }; const Gu = function(t) { const e = t.video; const n = t.initData; const i = t.options; const r = t.eventBus; e.msKeys && delete e.msKeys; try { e.msSetMediaKeys(new tn.MSMediaKeys('com.microsoft.playready')); } catch (o) { return void ce.log.error(`Unable to create media keys for PlayReady key system. Error: ${o.message}`); }$u(e, n, i, r); }; const Yu = ce.getPlugin('plugin'); const Ju = function(t, e) { for (let n = 0; n < t.length; n++) if (t[n].initData) { const i = Hu(t[n].initData); const r = Hu(e); if (Vu(i, r)) return !0; } return !1; }; const Zu = function(t, e) { for (let n = 0; n < t.length; n++) if (t[n].initData === e) return void t.splice(n, 1); }; const th = function(t, e, n, i) { if (!e || !e.keySystems) return Promise.resolve(); let r = t.initData; return Pu(e.keySystems).then((o) => { const s = o.keySystem; if (e.keySystems[s] && e.keySystems[s].pssh && (r = e.keySystems[s].pssh), !Ju(n, r) && r) return n.push({ initData: r }), Lu({ video: t.target, initDataType: t.initDataType, initData: r, options: e, removeSession: Zu.bind(null, n), eventBus: i }); }); }; const eh = function(t, e, n) { if (e.keySystems && e.keySystems['com.apple.fps.1_0'] && t.initData) return Qu({ video: t.target, initData: t.initData, options: e, eventBus: n }); }; const nh = function(t, e, n, i) { if (e.keySystems && e.keySystems['com.microsoft.playready'] && !n.reduce((t, e) => t || e.playready, !1)) { let r = t.initData; e.keySystems['com.microsoft.playready'] && e.keySystems['com.microsoft.playready'].pssh && (r = e.keySystems['com.microsoft.playready'].pssh), r && (n.push({ playready: !0, initData: r }), Gu({ video: t.target, initData: r, options: e, eventBus: i })); } }; const ih = function(t) { return ce.mergeOptions(t.currentSource(), t.eme.options); }; const rh = function(t) { const e = t.src(); e !== t.eme.activeSrc && (t.eme.activeSrc = e, t.eme.sessions = []); }; const oh = function(t) { t.$('.vjs-tech').tagName.toLowerCase() === 'video' && t.tech_ && (rh(t), t.tech_.el_.addEventListener('encrypted', (e) => { if (t.currentSource().keySystems && t.currentSource().keySystems['com.widevine.alpha'] && t.currentSource().type === 'application/dash+xml') return !1; rh(t), th(e, ih(t), t.eme.sessions, t.tech_); }), t.tech_.el_.addEventListener('webkitneedkey', (e) => { rh(t), eh(e, ih(t), t.tech_); }), ce.browser.IS_EDGE || t.tech_.el_.addEventListener('msneedkey', (e) => { rh(t), nh(e, ih(t), t.eme.sessions, t.tech_); })); }; const sh = (function(t) { function e(n, i) { Zn(this, e); const r = ei(this, t.call(this, n)); return r.options = i, n.ready(() => oh(n)), n.eme = { initializeMediaKeys() { const t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {}; const e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function() {}; const r = ce.mergeOptions(n.currentSource(), i, t); const o = { initDataType: 'cenc', initData: null, target: n.tech_.el_ }; rh(n), n.tech_.el_.setMediaKeys ? th(o, r, n.eme.sessions, n.tech_).then(() => e()).catch((t) => e(t)) : n.tech_.el_.msSetMediaKeys && (nh(o, r, n.eme.sessions, n.tech_), e()); }, options: i }, r; } return ti(e, t), e.prototype.setOptions = function(t) { this.options = t, this.player.options_.plugins.DRM = t; }, e; }(Yu)); (ce.registerPlugin || ce.plugin)('DRM', sh); const ah = ce.getPlugin('plugin'); const lh = ce.dom; if (!window.requestAnimationFrame) { let ch = 0; window.requestAnimationFrame = function(t) { const e = (new Date()).getTime(); const n = Math.max(0, 16.7 - (e - ch)); const i = window.setTimeout(() => { t(e + n); }, n); return ch = e + n, i; }; }window.cancelAnimationFrame || (window.cancelAnimationFrame = function(t) { clearTimeout(t); }); const uh = (function(t) {
 function e(n, i) { Zn(this, e); const r = ei(this, t.call(this, n)); return r.options = i, i.content && r.init(), r; } return ti(e, t), e.prototype.dispose = function() { this.stopAnimation(), this.player.el().removeChild(this.containerElement), t.prototype.dispose.call(this); }, e.prototype.init = function() { const t = this; const e = this.player; this.initUI(), this.initStyle(), e.on('loadedmetadata', () => { t.calculateStyle(), t.setStyle(), lh.removeClass(t.containerElement, 'vjs-hidden'); }), e.one('play', () => { t.startAnimation(); }), e.on(['fullscreenchange', 'playerresize'], () => { setTimeout(() => { t.calculateStyle(); }, 200); }); }, e.prototype.initUI = function() { const t = this.player; const e = lh.createEl('div', { className: 'tcp-dynamic-watermark-container vjs-hidden' }); const n = lh.createEl('div', { innerHTML: Pe(this.options.content), className: 'tcp-dynamic-watermark-content' }); e.appendChild(n), t.el().appendChild(e), this.containerElement = e, this.markContentElement = n; }, e.prototype.initStyle = function() { this.style = { containerWidth: '', containerHeight: '', containerLeft: '', containerTop: '', contentLeft: 80 * Math.random(), contentTop: 80 * Math.random(), margin: 0, padding: 0, display: 'block', visibility: 'visible', opacity: 1, position: 'absolute' }; }, e.prototype.calculateStyle = function() { const t = this.player; const e = this.style; const n = t.videoWidth(); const i = t.videoHeight(); const r = lh.getBoundingClientRect(t.el()); const o = r.width; const s = r.height; const a = (o / s).toFixed(2); const l = (n / i).toFixed(2); let c = void 0; let u = void 0; l < a ? (u = s, c = u * l) : l > a ? (c = o, u = c / l) : l == a && (c = o, u = s), e.containerLeft = (o - c) / 2 / o * 100, e.containerTop = (s - u) / 2 / s * 100, e.containerWidth = c / o * 100, e.containerHeight = u / s * 100; }, e.prototype.setStyle = function() { const t = this.containerElement; const e = this.markContentElement; const n = this.style; t.style.left = `${n.containerLeft}%`, t.style.top = `${n.containerTop}%`, t.style.width = `${n.containerWidth}%`, t.style.height = `${n.containerHeight}%`, t.style.display = e.style.display = n.display, t.style.visibility = e.style.visibility = n.visibility, t.style.opacity = e.style.opacity = n.opacity, t.style.position = e.style.position = n.position, t.style.margin = e.style.margin = n.margin, t.style.padding = e.style.padding = n.padding, e.style.left = `${n.contentLeft}%`, e.style.top = `${n.contentTop}%`, e.innerHTML = Pe(this.options.content); }, e.prototype.setContent = function(t) { this.options.content = t; }, e.prototype.startAnimation = function() {
 const t = this; if (!this.rafID) {
 const e = this.player; const n = this.style; const i = this.containerElement; const r = this.markContentElement; let o = 1; let s = 1; let a = Math.random(); const l = function c() {
 try { if (!t.isPauseAnimation) { const l = Math.min(1, t.options.speed || 0.2); const u = lh.getBoundingClientRect(i); const h = lh.getBoundingClientRect(r); let p = h.left - u.left; let d = h.top - u.top; p += l * o * a, d += l * s * (1 - a), p + h.width > u.width ? (o = -1, a = Math.random()) : p < 0 && (o = 1, a = Math.random()), d + h.height > u.height ? (s = -1, a = Math.random()) : d < 0 && (s = 1, a = Math.random()), p = Math.min(u.width - h.width, p), d = Math.min(u.height - h.height, d), n.contentLeft = p / u.width * 100, n.contentTop = d / u.height * 100, t.setStyle(); } } catch (f) { e.$('.tcp-dynamic-watermark-container') ? e.$('.tcp-dynamic-watermark-content') || i.appendChild(r) : e.el().appendChild(i); } if (t.isStopAnimation) {
 return t.isStopAnimation = !1, cancelAnimationFrame(t.rafID),
void (t.rafID = null);
} requestAnimationFrame(c);
}; this.rafID = requestAnimationFrame(l);
}
}, e.prototype.resumeAnimation = function() { this.isPauseAnimation = !1; }, e.prototype.pauseAnimation = function() { this.isPauseAnimation = !0; }, e.prototype.stopAnimation = function() { this.isStopAnimation = !0; }, e;
}(ah)); ce.registerPlugin('DynamicWatermark', uh); const hh = { enableStashBuffer: !1 }; const ph = (function() { function t(e, i, r) { const o = this; Zn(this, t); const s = new n.createPlayer({ isLive: !1, url: e.src, type: 'flv' }, ce.mergeOptions(hh, r)); this.tech = i, s.on(n.Events.ERROR, ce.bind(this, this.onError)); for (const a in n.Events)!(function(t) { s.on(n.Events[t], ce.bind(o, function(e) { this.onEvent(t, e); })); }(a)); this.flv = s, this._id = (new Date()).getTime(), s.attachMediaElement(i.el()), s.load(); } return t.prototype.onError = function(t, e, i) { const r = this.tech.player(); t === n.ErrorTypes.NETWORK_ERROR && r.error({ code: 2, source: i }), t === n.ErrorTypes.MEDIA_ERROR && r.error({ code: 3, source: i }); }, t.prototype.onEvent = function(t, e) { this.tech.player().trigger({ type: 'FLVJS_EVENT', data: { type: t, data: e } }); }, t.prototype.dispose = function() { this.flv.destroy(); }, t; }()); const dh = /^video\/flv$/i; const fh = /\.flv/i; const yh = /^(ws:\/\/)/i; var gh = { name: 'flvSourceHandler', canHandleSource(t) { return dh.test(t.type) ? 'probably' : fh.test(t.src) || yh.test(t.src) ? 'maybe' : ''; }, handleSource(t, e, n) { return e.flvProvider && e.flvProvider.dispose(), e.flvProvider = new ph(t, e, n), e.flvProvider; }, canPlayType(t) { if (dh.test(t)) return 'probably'; } }; Ge.mountFlvProvider = Xe, Xe(); for (var vh = ce.getComponent('Tech'), mh = ce.dom, _h = ce.url, bh = ce.createTimeRange, Th = ce.mergeOptions, Ch = tn && tn.navigator || {}, Eh = (function(t) { function e(n, i, r) { Zn(this, e); const o = ei(this, t.call(this, n, i, r)); return i.source && o.ready(function() { this.setSource(i.source); }, !0), i.startTime && o.ready(function() { this.load(), this.play(), this.currentTime(i.startTime); }, !0), tn.videojs = tn.videojs || {}, tn.videojs.Flash = tn.videojs.Flash || {}, tn.videojs.Flash.onReady = e.onReady, tn.videojs.Flash.onEvent = e.onEvent, tn.videojs.Flash.onError = e.onError, o.on('seeked', function() { this.lastSeekTarget_ = undefined; }), o; } return ti(e, t), e.prototype.createEl = function() { const t = this.options_; t.swf || (t.swf = Ce('//imgcache.qq.com/open/qcloud/video/tcplayer/player.swf')); const n = t.techId; const i = Th({ readyFunction: 'videojs.Flash.onReady', eventProxyFunction: 'videojs.Flash.onEvent', errorEventProxyFunction: 'videojs.Flash.onError', autoplay: t.autoplay, preload: t.preload, loop: t.loop, muted: t.muted }, t.flashVars); const r = Th({ wmode: 'opaque', bgcolor: '#000000' }, t.params); const o = Th({ id: n, name: n, class: 'vjs-tech' }, t.attributes); return this.el_ = e.embed(t.swf, i, r, o), this.el_.tech = this, this.el_; }, e.prototype.play = function() { this.ended() && this.setCurrentTime(0), this.el_.vjs_play(); }, e.prototype.pause = function() { this.el_.vjs_pause(); }, e.prototype.src = function(t) { return t === undefined ? this.currentSrc() : this.setSrc(t); }, e.prototype.setSrc = function(t) { const e = this; t = _h.getAbsoluteURL(t), this.el_.vjs_src(t), this.autoplay() && this.setTimeout(() => e.play(), 0); }, e.prototype.seeking = function() { return this.lastSeekTarget_ !== undefined; }, e.prototype.setCurrentTime = function(e) { const n = this.seekable(); n.length && (e = e > n.start(0) ? e : n.start(0), e = e < n.end(n.length - 1) ? e : n.end(n.length - 1), this.lastSeekTarget_ = e, this.trigger('seeking'), this.el_.vjs_setProperty('currentTime', e), t.prototype.setCurrentTime.call(this)); }, e.prototype.currentTime = function() { return this.seeking() ? this.lastSeekTarget_ || 0 : this.el_.vjs_getProperty('currentTime'); }, e.prototype.currentSrc = function() { return this.currentSource_ ? this.currentSource_.src : this.el_.vjs_getProperty('currentSrc'); }, e.prototype.duration = function() { if (this.readyState() === 0) return NaN; const t = this.el_.vjs_getProperty('duration'); return t >= 0 ? t : Infinity; }, e.prototype.load = function() { this.el_.vjs_load(); }, e.prototype.poster = function() { this.el_.vjs_getProperty('poster'); }, e.prototype.setPoster = function() {}, e.prototype.seekable = function() { const t = this.duration(); return t === 0 ? bh() : bh(0, t); }, e.prototype.buffered = function() { const t = this.el_.vjs_getProperty('buffered'); return t.length === 0 ? bh() : bh(t[0][0], t[0][1]); }, e.prototype.supportsFullScreen = function() { return !1; }, e.prototype.enterFullScreen = function() { return !1; }, e.prototype.getVideoPlaybackQuality = function() { const t = this.el_.vjs_getProperty('getVideoPlaybackQuality'); return tn.performance && typeof tn.performance.now === 'function' ? t.creationTime = tn.performance.now() : tn.performance && tn.performance.timing && typeof tn.performance.timing.navigationStart === 'number' && (t.creationTime = tn.Date.now() - tn.performance.timing.navigationStart), t; }, e; }(vh)), wh = ['rtmpConnection', 'rtmpStream', 'preload', 'defaultPlaybackRate', 'playbackRate', 'autoplay', 'loop', 'controls', 'volume', 'muted', 'defaultMuted'], Sh = ['networkState', 'readyState', 'initialTime', 'startOffsetTime', 'paused', 'ended', 'videoWidth', 'videoHeight'], kh = Eh.prototype, Ih = 0; Ih < wh.length; Ih++)$e(wh[Ih]), (function(t) { const e = t.charAt(0).toUpperCase() + t.slice(1); kh[`set${e}`] = function(e) { return this.el_.vjs_setProperty(t, e); }; }(wh[Ih])); for (let Ph = 0; Ph < Sh.length; Ph++)$e(Sh[Ph]); Eh.isSupported = function() { return Eh.version()[0] >= 10; }, vh.withSourceHandlers(Eh), Eh.nativeSourceHandler = {}, Eh.nativeSourceHandler.canPlayType = function(t) { return t in Eh.formats ? 'maybe' : ''; }, Eh.nativeSourceHandler.canHandleSource = function(t, e) { let n = void 0; return n = t.type ? t.type.replace(/;.*/, '').toLowerCase() : (function(t) { const e = _h.getFileExtension(t); return e ? `video/${e}` : ''; }(t.src)), Eh.nativeSourceHandler.canPlayType(n); }, Eh.nativeSourceHandler.handleSource = function(t, e, n) { e.setSrc(t.src); }, Eh.nativeSourceHandler.dispose = function() {}, Eh.registerSourceHandler(Eh.nativeSourceHandler), Eh.formats = { 'video/flv': 'FLV', 'video/x-flv': 'FLV', 'video/mp4': 'MP4', 'video/m4v': 'MP4' }, Eh.onReady = function(t) { const e = mh.$(`#${t}`); const n = e && e.tech; n && n.el() && Eh.checkReady(n); }, Eh.checkReady = function(t) { t.el() && (t.el().vjs_getProperty ? t.triggerReady() : this.setTimeout(() => { Eh.checkReady(t); }, 50)); }, Eh.onEvent = function(t, e) { const n = mh.$(`#${t}`).tech; const i = Array.prototype.slice.call(arguments, 2); n.setTimeout(() => { n.trigger(e, i); }, 1); }, Eh.onError = function(t, e) { const n = mh.$(`#${t}`).tech; if (e === 'srcnotfound') return n.error(4); n.error(`FLASH: ${e}`); }, Eh.version = function() { let t = '0,0,0'; try { t = new tn.ActiveXObject('ShockwaveFlash.ShockwaveFlash').GetVariable('$version').replace(/\D+/g, ',').match(/^,?(.+),?$/)[1]; } catch (e) { try { Ch.mimeTypes['application/x-shockwave-flash'].enabledPlugin && (t = (Ch.plugins['Shockwave Flash 2.0'] || Ch.plugins['Shockwave Flash']).description.replace(/\D+/g, ',').match(/^,?(.+),?$/)[1]); } catch (e) {} } return t.split(','); }, Eh.embed = function(t, e, n, i) { const r = Eh.getEmbedCode(t, e, n, i); return mh.createEl('div', { innerHTML: r }).childNodes[0]; }, Eh.getEmbedCode = function(t, e, n, i) { let r = ''; let o = ''; let s = ''; return e && Object.getOwnPropertyNames(e).forEach((t) => { r += `${t}=${e[t]}&amp;`; }), n = Th({ movie: t, flashvars: r, allowScriptAccess: 'always', allowNetworking: 'all' }, n), Object.getOwnPropertyNames(n).forEach((t) => { o += `<param name="${t}" value="${n[t]}" />`; }), i = Th({ data: t, width: '100%', height: '100%' }, i), Object.getOwnPropertyNames(i).forEach((t) => { s += `${t}="${i[t]}" `; }), `<object type="application/x-shockwave-flash" ${s}>${o}</object>`; }, (function(t) { t.streamingFormats = { 'rtmp/mp4': 'MP4', 'rtmp/flv': 'FLV' }, t.streamFromParts = function(t, e) { return `${t}&${e}`; }, t.streamToParts = function(t) { const e = { connection: '', stream: '' }; if (!t) return e; let n = t.search(/&(?!\w+=)/); let i = void 0; return n !== -1 ? i = n + 1 : (n = i = t.lastIndexOf('/') + 1) === 0 && (n = i = t.length), e.connection = t.substring(0, n), e.stream = t.substring(i, t.length), e; }, t.isStreamingType = function(e) { return e in t.streamingFormats; }, t.RTMP_RE = /^rtmp[set]?:\/\//i, t.isStreamingSrc = function(e) { return t.RTMP_RE.test(e); }, t.rtmpSourceHandler = {}, t.rtmpSourceHandler.canPlayType = function(e) { return t.isStreamingType(e) ? 'maybe' : ''; }, t.rtmpSourceHandler.canHandleSource = function(e, n) { const i = t.rtmpSourceHandler.canPlayType(e.type); return i || (t.isStreamingSrc(e.src) ? 'maybe' : ''); }, t.rtmpSourceHandler.handleSource = function(e, n, i) { const r = t.streamToParts(e.src); n.setRtmpConnection(r.connection), n.setRtmpStream(r.stream); }, t.registerSourceHandler(t.rtmpSourceHandler); }(Eh)), vh.getTech('Flash') ? (ce.log.warn('Not using videojs-flash as it appears to already be registered'), ce.log.warn('videojs-flash should only be used with video.js@6 and above')) : ce.registerTech('Flash', Eh); const xh = {}; const Dh = /^(audio|video|application)\/(x-|vnd\.apple\.)?mpegurl/i; xh.canPlayType = function(t) { return Dh.test(t) ? 'maybe' : ''; }, xh.canHandleSource = function(t, e) { return xh.canPlayType(t.type) === 'maybe'; }, xh.handleSource = function(t, e, n) { e.setSrc(t.src); }, xh.dispose = function() {}, ce.getTech('Flash').registerSourceHandler(xh, 0), xh.VERSION = '__VERSION__'; const Mh = { Play: '播放', Pause: '暂停', LIVE: '直播', Loaded: '加载完毕', Progress: '进度', Fullscreen: '全屏', Mute: '静音', Unmute: '取消静音', Subtitles: '字幕', Captions: '内嵌字幕', Chapters: '节目段落', Descriptions: '描述', Close: '关闭', Replay: '重播', Text: '文字', White: '白', Black: '黑', Red: '红', Green: '绿', Blue: '蓝', Yellow: '黄', Magenta: '紫红', Cyan: '青', Background: '背景', Window: '视窗', Transparent: '透明', Opaque: '不透明', None: '无', Raised: '浮雕', Depressed: '压低', Uniform: '均匀', Dropshadow: '下阴影', Casual: '舒适', Script: '手写体', Reset: '重启', Done: '完成', auto: '自动', Mirror: '镜像', 'Current Time': '当前时间', 'Duration Time': '时长', 'Remaining Time': '剩余时间', 'Stream Type': '媒体流类型', 'Non-Fullscreen': '退出全屏', 'Playback Rate': '播放速度', 'subtitles off': '关闭字幕', 'captions off': '关闭内嵌字幕', 'Close Modal Dialog': '关闭弹窗', 'descriptions off': '关闭描述', 'Audio Track': '音轨', 'You aborted the media playback': '视频播放被终止', 'A network error caused the media download to fail part-way.': '网络错误导致视频下载中途失败。', 'The media could not be loaded, either because the server or network failed or because the format is not supported.': '视频因格式不支持或者服务器或网络的问题无法加载。', 'The media playback was aborted due to a corruption problem or because the media used features your browser did not support.': '由于视频文件损坏或是该视频使用了你的浏览器不支持的功能，播放终止。', 'No compatible source was found for this media.': '无法找到此视频兼容的源或者当前环境无法播放该视频。', 'The media is encrypted and we do not have the keys to decrypt it.': '视频已加密，无法解密。', 'Play Video': '播放视频', 'Modal Window': '弹窗', 'This is a modal window': '这是一个弹窗', 'This modal can be closed by pressing the Escape key or activating the close button.': '可以按ESC按键或启用关闭按钮来关闭此弹窗。', ', opens captions settings dialog': ', 开启标题设置弹窗', ', opens subtitles settings dialog': ', 开启字幕设置弹窗', ', opens descriptions settings dialog': ', 开启描述设置弹窗', ', selected': ', 选择', 'captions settings': '字幕设定', 'Audio Player': '音频播放器', 'Video Player': '视频播放器', 'Progress Bar': '进度小节', 'Volume Level': '音量', 'subtitles settings': '字幕设定', 'descriptions settings': '描述设定', 'Semi-Transparent': '半透明', 'Font Size': '字体尺寸', 'Text Edge Style': '字体边缘样式', 'Font Family': '字体库', 'Proportional Sans-Serif': '比例无细体', 'Monospace Sans-Serif': '单间隔无细体', 'Proportional Serif': '比例细体', 'Monospace Serif': '单间隔细体', 'Small Caps': '小型大写字体', 'restore all settings to the default values': '恢复全部设定至预设值', 'Caption Settings Dialog': '字幕设定视窗', 'Beginning of dialog window. Escape will cancel and close the window.': '开始对话视窗。离开会取消及关闭视窗', 'End of dialog window.': '结束对话视窗', 'Request timed out.': '请求超时，请稍后再试。', 'Could not download the video.': '无法加载视频，请检查网络。', 'Server is not respond.': '服务器请求失败，请稍后再试。', 'Server respond error data.': '服务器返回数据有误，请稍后再试。', 'Last time play at ': '上次看到 ', 'Resume play': '恢复播放', 'Powered by Tencent Cloud.': '腾讯云提供技术支持', 'Rise an internal exception when playing HLS.': '播放 HLS 时出现内部异常。', 'Authentication failed.': '防盗链参数鉴权失败。', 'Server failed.': '媒体服务器错误。', 'Get file error.': '媒体服务器获取文件错误。', 'The media file does not exist. Please check if the fileID is correct.': '媒体文件不存在，请检查 fileID 是否正确。', 'No video transcoding information found.': '没有找到视频转码信息。', 'The trial duration is illegal. The trial duration must be within the video duration.': '试看时长不合法，试看时长要在视频时长范围内。', 'Param pcfg is not unique.': 'pcfg 不唯一。', 'The license has expired. Please check whether the expiration time setting is reasonable.': 'license 过期，请检查过期时间设置是否合理。', 'Did not find an adaptive stream that can be played.': "没有找到可以播放的自适应码流，<a href='https://cloud.tencent.com/document/product/266/34071' style='color: white;' target='_blank'>查看文档</a>。", 'Invalid request format, please check the request format.': '请求格式不合法，请检查请求格式。', 'AppID is not exist, Please check if the AppID is correct.': 'AppID 不存在，请检查 AppID 是否正确。', 'Without anti-leech information.': '没带防盗链检测。', 'psign check failed.': "播放参数 psign 校验失败，<a href='https://cloud.tencent.com/document/product/266/45554' style='color: white' target='_blank'>查看文档</a>。", 'Other errors.': '其他错误。', 'Internal error.': '内部错误。', 'Video statistic': '视频统计信息', 'Play Next': '下一个' }; var Rh = ce.log; if (Function.prototype.bind && (typeof console === 'undefined' ? 'undefined' : Jn(console)) == 'object' && Jn(console.log) == 'object') for (let Ah = ['log', 'info', 'warn', 'error', 'assert', 'dir', 'clear', 'profile', 'profileEnd'], Oh = 0; Oh < Ah.length; Oh++) { const jh = Ah[Oh]; console[jh] = Function.prototype.call.bind(console[jh], console); } return ce.addLanguage('zh-CN', Mh), Object.keys(ce).forEach((t) => { Ge[t] = ce[t]; }), Ge;
}));
